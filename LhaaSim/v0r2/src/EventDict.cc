//
// File generated by /CERN/root/bin/rootcint at Tue Jun 20 18:58:51 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME EventDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "EventDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void Particle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Particle(void *p = 0);
   static void *newArray_Particle(Long_t size, void *p);
   static void delete_Particle(void *p);
   static void deleteArray_Particle(void *p);
   static void destruct_Particle(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Particle*)
   {
      ::Particle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Particle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Particle", ::Particle::Class_Version(), "./../src/Particle.h", 24,
                  typeid(::Particle), DefineBehavior(ptr, ptr),
                  &::Particle::Dictionary, isa_proxy, 4,
                  sizeof(::Particle) );
      instance.SetNew(&new_Particle);
      instance.SetNewArray(&newArray_Particle);
      instance.SetDelete(&delete_Particle);
      instance.SetDeleteArray(&deleteArray_Particle);
      instance.SetDestructor(&destruct_Particle);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Particle*)
   {
      return GenerateInitInstanceLocal((::Particle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Particle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ParticleInTank_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ParticleInTank(void *p = 0);
   static void *newArray_ParticleInTank(Long_t size, void *p);
   static void delete_ParticleInTank(void *p);
   static void deleteArray_ParticleInTank(void *p);
   static void destruct_ParticleInTank(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ParticleInTank*)
   {
      ::ParticleInTank *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ParticleInTank >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ParticleInTank", ::ParticleInTank::Class_Version(), "./../src/Particle.h", 55,
                  typeid(::ParticleInTank), DefineBehavior(ptr, ptr),
                  &::ParticleInTank::Dictionary, isa_proxy, 4,
                  sizeof(::ParticleInTank) );
      instance.SetNew(&new_ParticleInTank);
      instance.SetNewArray(&newArray_ParticleInTank);
      instance.SetDelete(&delete_ParticleInTank);
      instance.SetDeleteArray(&deleteArray_ParticleInTank);
      instance.SetDestructor(&destruct_ParticleInTank);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ParticleInTank*)
   {
      return GenerateInitInstanceLocal((::ParticleInTank*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ParticleInTank*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ParticleInScint_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ParticleInScint(void *p = 0);
   static void *newArray_ParticleInScint(Long_t size, void *p);
   static void delete_ParticleInScint(void *p);
   static void deleteArray_ParticleInScint(void *p);
   static void destruct_ParticleInScint(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ParticleInScint*)
   {
      ::ParticleInScint *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ParticleInScint >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ParticleInScint", ::ParticleInScint::Class_Version(), "./../src/Particle.h", 125,
                  typeid(::ParticleInScint), DefineBehavior(ptr, ptr),
                  &::ParticleInScint::Dictionary, isa_proxy, 4,
                  sizeof(::ParticleInScint) );
      instance.SetNew(&new_ParticleInScint);
      instance.SetNewArray(&newArray_ParticleInScint);
      instance.SetDelete(&delete_ParticleInScint);
      instance.SetDeleteArray(&deleteArray_ParticleInScint);
      instance.SetDestructor(&destruct_ParticleInScint);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ParticleInScint*)
   {
      return GenerateInitInstanceLocal((::ParticleInScint*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ParticleInScint*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Station_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Station(void *p = 0);
   static void *newArray_Station(Long_t size, void *p);
   static void delete_Station(void *p);
   static void deleteArray_Station(void *p);
   static void destruct_Station(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Station*)
   {
      ::Station *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Station >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Station", ::Station::Class_Version(), "./../src/Station.h", 30,
                  typeid(::Station), DefineBehavior(ptr, ptr),
                  &::Station::Dictionary, isa_proxy, 4,
                  sizeof(::Station) );
      instance.SetNew(&new_Station);
      instance.SetNewArray(&newArray_Station);
      instance.SetDelete(&delete_Station);
      instance.SetDeleteArray(&deleteArray_Station);
      instance.SetDestructor(&destruct_Station);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Station*)
   {
      return GenerateInitInstanceLocal((::Station*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Station*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void SampStation_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SampStation(void *p = 0);
   static void *newArray_SampStation(Long_t size, void *p);
   static void delete_SampStation(void *p);
   static void deleteArray_SampStation(void *p);
   static void destruct_SampStation(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::SampStation*)
   {
      ::SampStation *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SampStation >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SampStation", ::SampStation::Class_Version(), "./../src/Station.h", 79,
                  typeid(::SampStation), DefineBehavior(ptr, ptr),
                  &::SampStation::Dictionary, isa_proxy, 4,
                  sizeof(::SampStation) );
      instance.SetNew(&new_SampStation);
      instance.SetNewArray(&newArray_SampStation);
      instance.SetDelete(&delete_SampStation);
      instance.SetDeleteArray(&deleteArray_SampStation);
      instance.SetDestructor(&destruct_SampStation);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::SampStation*)
   {
      return GenerateInitInstanceLocal((::SampStation*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SampStation*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void PMT_MD_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_PMT_MD(void *p = 0);
   static void *newArray_PMT_MD(Long_t size, void *p);
   static void delete_PMT_MD(void *p);
   static void deleteArray_PMT_MD(void *p);
   static void destruct_PMT_MD(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::PMT_MD*)
   {
      ::PMT_MD *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PMT_MD >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PMT_MD", ::PMT_MD::Class_Version(), "./../src/Station.h", 107,
                  typeid(::PMT_MD), DefineBehavior(ptr, ptr),
                  &::PMT_MD::Dictionary, isa_proxy, 4,
                  sizeof(::PMT_MD) );
      instance.SetNew(&new_PMT_MD);
      instance.SetNewArray(&newArray_PMT_MD);
      instance.SetDelete(&delete_PMT_MD);
      instance.SetDeleteArray(&deleteArray_PMT_MD);
      instance.SetDestructor(&destruct_PMT_MD);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::PMT_MD*)
   {
      return GenerateInitInstanceLocal((::PMT_MD*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PMT_MD*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void HitStationMD_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HitStationMD(void *p = 0);
   static void *newArray_HitStationMD(Long_t size, void *p);
   static void delete_HitStationMD(void *p);
   static void deleteArray_HitStationMD(void *p);
   static void destruct_HitStationMD(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HitStationMD*)
   {
      ::HitStationMD *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HitStationMD >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HitStationMD", ::HitStationMD::Class_Version(), "./../src/Station.h", 158,
                  typeid(::HitStationMD), DefineBehavior(ptr, ptr),
                  &::HitStationMD::Dictionary, isa_proxy, 4,
                  sizeof(::HitStationMD) );
      instance.SetNew(&new_HitStationMD);
      instance.SetNewArray(&newArray_HitStationMD);
      instance.SetDelete(&delete_HitStationMD);
      instance.SetDeleteArray(&deleteArray_HitStationMD);
      instance.SetDestructor(&destruct_HitStationMD);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HitStationMD*)
   {
      return GenerateInitInstanceLocal((::HitStationMD*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HitStationMD*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void PMT_ED_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_PMT_ED(void *p = 0);
   static void *newArray_PMT_ED(Long_t size, void *p);
   static void delete_PMT_ED(void *p);
   static void deleteArray_PMT_ED(void *p);
   static void destruct_PMT_ED(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::PMT_ED*)
   {
      ::PMT_ED *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PMT_ED >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PMT_ED", ::PMT_ED::Class_Version(), "./../src/Station.h", 229,
                  typeid(::PMT_ED), DefineBehavior(ptr, ptr),
                  &::PMT_ED::Dictionary, isa_proxy, 4,
                  sizeof(::PMT_ED) );
      instance.SetNew(&new_PMT_ED);
      instance.SetNewArray(&newArray_PMT_ED);
      instance.SetDelete(&delete_PMT_ED);
      instance.SetDeleteArray(&deleteArray_PMT_ED);
      instance.SetDestructor(&destruct_PMT_ED);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::PMT_ED*)
   {
      return GenerateInitInstanceLocal((::PMT_ED*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PMT_ED*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void HitStationED_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HitStationED(void *p = 0);
   static void *newArray_HitStationED(Long_t size, void *p);
   static void delete_HitStationED(void *p);
   static void deleteArray_HitStationED(void *p);
   static void destruct_HitStationED(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HitStationED*)
   {
      ::HitStationED *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HitStationED >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HitStationED", ::HitStationED::Class_Version(), "./../src/Station.h", 279,
                  typeid(::HitStationED), DefineBehavior(ptr, ptr),
                  &::HitStationED::Dictionary, isa_proxy, 4,
                  sizeof(::HitStationED) );
      instance.SetNew(&new_HitStationED);
      instance.SetNewArray(&newArray_HitStationED);
      instance.SetDelete(&delete_HitStationED);
      instance.SetDeleteArray(&deleteArray_HitStationED);
      instance.SetDestructor(&destruct_HitStationED);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HitStationED*)
   {
      return GenerateInitInstanceLocal((::HitStationED*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HitStationED*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void HitStationLightED_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HitStationLightED(void *p = 0);
   static void *newArray_HitStationLightED(Long_t size, void *p);
   static void delete_HitStationLightED(void *p);
   static void deleteArray_HitStationLightED(void *p);
   static void destruct_HitStationLightED(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HitStationLightED*)
   {
      ::HitStationLightED *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HitStationLightED >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HitStationLightED", ::HitStationLightED::Class_Version(), "./../src/Station.h", 336,
                  typeid(::HitStationLightED), DefineBehavior(ptr, ptr),
                  &::HitStationLightED::Dictionary, isa_proxy, 4,
                  sizeof(::HitStationLightED) );
      instance.SetNew(&new_HitStationLightED);
      instance.SetNewArray(&newArray_HitStationLightED);
      instance.SetDelete(&delete_HitStationLightED);
      instance.SetDeleteArray(&deleteArray_HitStationLightED);
      instance.SetDestructor(&destruct_HitStationLightED);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HitStationLightED*)
   {
      return GenerateInitInstanceLocal((::HitStationLightED*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HitStationLightED*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Event_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Event(void *p = 0);
   static void *newArray_Event(Long_t size, void *p);
   static void delete_Event(void *p);
   static void deleteArray_Event(void *p);
   static void destruct_Event(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Event*)
   {
      ::Event *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Event >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Event", ::Event::Class_Version(), "./../src/Event.h", 26,
                  typeid(::Event), DefineBehavior(ptr, ptr),
                  &::Event::Dictionary, isa_proxy, 4,
                  sizeof(::Event) );
      instance.SetNew(&new_Event);
      instance.SetNewArray(&newArray_Event);
      instance.SetDelete(&delete_Event);
      instance.SetDeleteArray(&deleteArray_Event);
      instance.SetDestructor(&destruct_Event);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Event*)
   {
      return GenerateInitInstanceLocal((::Event*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Event*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void EventRec_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EventRec(void *p = 0);
   static void *newArray_EventRec(Long_t size, void *p);
   static void delete_EventRec(void *p);
   static void deleteArray_EventRec(void *p);
   static void destruct_EventRec(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::EventRec*)
   {
      ::EventRec *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EventRec >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EventRec", ::EventRec::Class_Version(), "./../src/Event.h", 73,
                  typeid(::EventRec), DefineBehavior(ptr, ptr),
                  &::EventRec::Dictionary, isa_proxy, 4,
                  sizeof(::EventRec) );
      instance.SetNew(&new_EventRec);
      instance.SetNewArray(&newArray_EventRec);
      instance.SetDelete(&delete_EventRec);
      instance.SetDeleteArray(&deleteArray_EventRec);
      instance.SetDestructor(&destruct_EventRec);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::EventRec*)
   {
      return GenerateInitInstanceLocal((::EventRec*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EventRec*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Array_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Array(void *p = 0);
   static void *newArray_Array(Long_t size, void *p);
   static void delete_Array(void *p);
   static void deleteArray_Array(void *p);
   static void destruct_Array(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Array*)
   {
      ::Array *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Array >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Array", ::Array::Class_Version(), "./../src/Array.h", 34,
                  typeid(::Array), DefineBehavior(ptr, ptr),
                  &::Array::Dictionary, isa_proxy, 4,
                  sizeof(::Array) );
      instance.SetNew(&new_Array);
      instance.SetNewArray(&newArray_Array);
      instance.SetDelete(&delete_Array);
      instance.SetDeleteArray(&deleteArray_Array);
      instance.SetDestructor(&destruct_Array);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Array*)
   {
      return GenerateInitInstanceLocal((::Array*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Array*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
atomic_TClass_ptr Particle::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Particle::Class_Name()
{
   return "Particle";
}

//______________________________________________________________________________
const char *Particle::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Particle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Particle::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Particle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Particle::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Particle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Particle::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Particle*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ParticleInTank::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ParticleInTank::Class_Name()
{
   return "ParticleInTank";
}

//______________________________________________________________________________
const char *ParticleInTank::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ParticleInTank*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ParticleInTank::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ParticleInTank*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ParticleInTank::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ParticleInTank*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ParticleInTank::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ParticleInTank*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ParticleInScint::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ParticleInScint::Class_Name()
{
   return "ParticleInScint";
}

//______________________________________________________________________________
const char *ParticleInScint::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ParticleInScint*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ParticleInScint::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ParticleInScint*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ParticleInScint::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ParticleInScint*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ParticleInScint::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ParticleInScint*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Station::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Station::Class_Name()
{
   return "Station";
}

//______________________________________________________________________________
const char *Station::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Station*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Station::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Station*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Station::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Station*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Station::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Station*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr SampStation::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SampStation::Class_Name()
{
   return "SampStation";
}

//______________________________________________________________________________
const char *SampStation::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::SampStation*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SampStation::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::SampStation*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SampStation::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::SampStation*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SampStation::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::SampStation*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr PMT_MD::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PMT_MD::Class_Name()
{
   return "PMT_MD";
}

//______________________________________________________________________________
const char *PMT_MD::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PMT_MD*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PMT_MD::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PMT_MD*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PMT_MD::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PMT_MD*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PMT_MD::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PMT_MD*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HitStationMD::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HitStationMD::Class_Name()
{
   return "HitStationMD";
}

//______________________________________________________________________________
const char *HitStationMD::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HitStationMD*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HitStationMD::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HitStationMD*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HitStationMD::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HitStationMD*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HitStationMD::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HitStationMD*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr PMT_ED::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PMT_ED::Class_Name()
{
   return "PMT_ED";
}

//______________________________________________________________________________
const char *PMT_ED::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PMT_ED*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PMT_ED::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PMT_ED*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PMT_ED::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PMT_ED*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PMT_ED::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PMT_ED*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HitStationED::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HitStationED::Class_Name()
{
   return "HitStationED";
}

//______________________________________________________________________________
const char *HitStationED::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HitStationED*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HitStationED::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HitStationED*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HitStationED::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HitStationED*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HitStationED::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HitStationED*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HitStationLightED::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HitStationLightED::Class_Name()
{
   return "HitStationLightED";
}

//______________________________________________________________________________
const char *HitStationLightED::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HitStationLightED*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HitStationLightED::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HitStationLightED*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HitStationLightED::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HitStationLightED*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HitStationLightED::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HitStationLightED*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Event::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Event::Class_Name()
{
   return "Event";
}

//______________________________________________________________________________
const char *Event::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Event*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Event::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Event*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Event::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Event*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Event::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Event*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EventRec::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EventRec::Class_Name()
{
   return "EventRec";
}

//______________________________________________________________________________
const char *EventRec::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::EventRec*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EventRec::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::EventRec*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EventRec::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::EventRec*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EventRec::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::EventRec*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Array::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Array::Class_Name()
{
   return "Array";
}

//______________________________________________________________________________
const char *Array::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Array*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Array::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Array*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Array::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Array*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Array::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Array*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void Event::Streamer(TBuffer &R__b)
{
   // Stream an object of class Event.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Event::Class(),this);
   } else {
      R__b.WriteClassBuffer(Event::Class(),this);
   }
}

//______________________________________________________________________________
void Event::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Event.
      TClass *R__cl = ::Event::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fId", &fId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPrimary", &fPrimary);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnergy", &fEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTheta", &fTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAzim", &fAzim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNorCore", &fNorCore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEasCore", &fEasCore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhiRot", &fPhiRot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXCore", &fXCore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYCore", &fYCore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZCore", &fZCore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXmax", &fXmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX0", &fX0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNombTank", &fNombTank);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNombScint", &fNombScint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fT3Algo", &fT3Algo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fT4Algo", &fT4Algo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitStationListED", (void*)&fHitStationListED);
      R__insp.InspectMember("vector<HitStationED>", (void*)&fHitStationListED, "fHitStationListED.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitStationListMD", (void*)&fHitStationListMD);
      R__insp.InspectMember("vector<HitStationMD>", (void*)&fHitStationListMD, "fHitStationListMD.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Event(void *p) {
      return  p ? new(p) ::Event : new ::Event;
   }
   static void *newArray_Event(Long_t nElements, void *p) {
      return p ? new(p) ::Event[nElements] : new ::Event[nElements];
   }
   // Wrapper around operator delete
   static void delete_Event(void *p) {
      delete ((::Event*)p);
   }
   static void deleteArray_Event(void *p) {
      delete [] ((::Event*)p);
   }
   static void destruct_Event(void *p) {
      typedef ::Event current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Event

//______________________________________________________________________________
void EventRec::Streamer(TBuffer &R__b)
{
   // Stream an object of class EventRec.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(EventRec::Class(),this);
   } else {
      R__b.WriteClassBuffer(EventRec::Class(),this);
   }
}

//______________________________________________________________________________
void EventRec::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EventRec.
      TClass *R__cl = ::EventRec::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTrigMDStaVEM", (void*)&fNTrigMDStaVEM);
      R__insp.InspectMember("map<float,int>", (void*)&fNTrigMDStaVEM, "fNTrigMDStaVEM.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTrigMDStaMu", (void*)&fNTrigMDStaMu);
      R__insp.InspectMember("map<int,int>", (void*)&fNTrigMDStaMu, "fNTrigMDStaMu.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTrigMDSta", (void*)&fNTrigMDSta);
      R__insp.InspectMember("map<int,int>", (void*)&fNTrigMDSta, "fNTrigMDSta.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTrigEDSta", (void*)&fNTrigEDSta);
      R__insp.InspectMember("map<int,int>", (void*)&fNTrigEDSta, "fNTrigEDSta.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnergyRec", &fEnergyRec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThetaRec", &fThetaRec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAzimRec", &fAzimRec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNorCoreRec", &fNorCoreRec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEasCoreRec", &fEasCoreRec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXCoreRec", &fXCoreRec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYCoreRec", &fYCoreRec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZCoreRec", &fZCoreRec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitStationLightListED", (void*)&fHitStationLightListED);
      R__insp.InspectMember("vector<HitStationLightED>", (void*)&fHitStationLightListED, "fHitStationLightListED.", false);
      Event::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_EventRec(void *p) {
      return  p ? new(p) ::EventRec : new ::EventRec;
   }
   static void *newArray_EventRec(Long_t nElements, void *p) {
      return p ? new(p) ::EventRec[nElements] : new ::EventRec[nElements];
   }
   // Wrapper around operator delete
   static void delete_EventRec(void *p) {
      delete ((::EventRec*)p);
   }
   static void deleteArray_EventRec(void *p) {
      delete [] ((::EventRec*)p);
   }
   static void destruct_EventRec(void *p) {
      typedef ::EventRec current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::EventRec

//______________________________________________________________________________
void SampStation::Streamer(TBuffer &R__b)
{
   // Stream an object of class SampStation.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SampStation::Class(),this);
   } else {
      R__b.WriteClassBuffer(SampStation::Class(),this);
   }
}

//______________________________________________________________________________
void SampStation::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SampStation.
      TClass *R__cl = ::SampStation::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNmu", &fNmu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNph", &fNph);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNel", &fNel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPartTot", &fNPartTot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPartList", (void*)&fPartList);
      R__insp.InspectMember("vector<Particle>", (void*)&fPartList, "fPartList.", false);
      Station::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_SampStation(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::SampStation : new ::SampStation;
   }
   static void *newArray_SampStation(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::SampStation[nElements] : new ::SampStation[nElements];
   }
   // Wrapper around operator delete
   static void delete_SampStation(void *p) {
      delete ((::SampStation*)p);
   }
   static void deleteArray_SampStation(void *p) {
      delete [] ((::SampStation*)p);
   }
   static void destruct_SampStation(void *p) {
      typedef ::SampStation current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::SampStation

//______________________________________________________________________________
void Particle::Streamer(TBuffer &R__b)
{
   // Stream an object of class Particle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Particle::Class(),this);
   } else {
      R__b.WriteClassBuffer(Particle::Class(),this);
   }
}

//______________________________________________________________________________
void Particle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Particle.
      TClass *R__cl = ::Particle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fId", &fId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUX", &fUX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUY", &fUY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUZ", &fUZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fT", &fT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fT_plane", &fT_plane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fE", &fE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWtop", &fWtop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWside", &fWside);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Particle(void *p) {
      return  p ? new(p) ::Particle : new ::Particle;
   }
   static void *newArray_Particle(Long_t nElements, void *p) {
      return p ? new(p) ::Particle[nElements] : new ::Particle[nElements];
   }
   // Wrapper around operator delete
   static void delete_Particle(void *p) {
      delete ((::Particle*)p);
   }
   static void deleteArray_Particle(void *p) {
      delete [] ((::Particle*)p);
   }
   static void destruct_Particle(void *p) {
      typedef ::Particle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Particle

//______________________________________________________________________________
void ParticleInTank::Streamer(TBuffer &R__b)
{
   // Stream an object of class ParticleInTank.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ParticleInTank::Class(),this);
   } else {
      R__b.WriteClassBuffer(ParticleInTank::Class(),this);
   }
}

//______________________________________________________________________________
void ParticleInTank::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ParticleInTank.
      TClass *R__cl = ::ParticleInTank::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Beta", &Beta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Range", &Range);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DxStep", &DxStep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IStep", &IStep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GLength", &GLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MeanIntLength", &MeanIntLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IntLength", &IntLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ProbPair", &ProbPair);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fISta", &fISta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMotherId", &fMotherId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX", &fX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY", &fY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ", &fZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fW", &fW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNCherPhot", &fNCherPhot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTCherPhot", (void*)&fTCherPhot);
      R__insp.InspectMember("vector<Double_t>", (void*)&fTCherPhot, "fTCherPhot.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNReflexions", (void*)&fNReflexions);
      R__insp.InspectMember("vector<Double_t>", (void*)&fNReflexions, "fNReflexions.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIpm", (void*)&fIpm);
      R__insp.InspectMember("vector<Int_t>", (void*)&fIpm, "fIpm.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBinContent", (void*)&fBinContent);
      R__insp.InspectMember("vector<Double_t>", (void*)&fBinContent, "fBinContent.", true);
      Particle::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ParticleInTank(void *p) {
      return  p ? new(p) ::ParticleInTank : new ::ParticleInTank;
   }
   static void *newArray_ParticleInTank(Long_t nElements, void *p) {
      return p ? new(p) ::ParticleInTank[nElements] : new ::ParticleInTank[nElements];
   }
   // Wrapper around operator delete
   static void delete_ParticleInTank(void *p) {
      delete ((::ParticleInTank*)p);
   }
   static void deleteArray_ParticleInTank(void *p) {
      delete [] ((::ParticleInTank*)p);
   }
   static void destruct_ParticleInTank(void *p) {
      typedef ::ParticleInTank current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ParticleInTank

//______________________________________________________________________________
void ParticleInScint::Streamer(TBuffer &R__b)
{
   // Stream an object of class ParticleInScint.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ParticleInScint::Class(),this);
   } else {
      R__b.WriteClassBuffer(ParticleInScint::Class(),this);
   }
}

//______________________________________________________________________________
void ParticleInScint::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ParticleInScint.
      TClass *R__cl = ::ParticleInScint::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ElectronEnergyLossLead", &ElectronEnergyLossLead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MuonEnergyLossLead", &MuonEnergyLossLead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ElectronEnergyLoss", &ElectronEnergyLoss);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MuonEnergyLoss", &MuonEnergyLoss);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GLength", &GLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GammaEnergyLoss", &GammaEnergyLoss);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ProbNoInt", &ProbNoInt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ProbPair", &ProbPair);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ProbIntLead", &ProbIntLead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ProbPairLead", &ProbPairLead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ProbComptLead", &ProbComptLead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ProbPhotLead", &ProbPhotLead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fISta", &fISta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMotherId", &fMotherId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX", &fX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY", &fY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ", &fZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fW", &fW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPhot", &fNPhot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "WhereAmI", &WhereAmI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AfterOneDR", &AfterOneDR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBinContent", (void*)&fBinContent);
      R__insp.InspectMember("vector<Double_t>", (void*)&fBinContent, "fBinContent.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTPhot", (void*)&fTPhot);
      R__insp.InspectMember("vector<Double_t>", (void*)&fTPhot, "fTPhot.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPhotList", (void*)&fNPhotList);
      R__insp.InspectMember("vector<Int_t>", (void*)&fNPhotList, "fNPhotList.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCodePhot", (void*)&fCodePhot);
      R__insp.InspectMember("vector<Int_t>", (void*)&fCodePhot, "fCodePhot.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIpm", (void*)&fIpm);
      R__insp.InspectMember("vector<Double_t>", (void*)&fIpm, "fIpm.", true);
      Particle::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ParticleInScint(void *p) {
      return  p ? new(p) ::ParticleInScint : new ::ParticleInScint;
   }
   static void *newArray_ParticleInScint(Long_t nElements, void *p) {
      return p ? new(p) ::ParticleInScint[nElements] : new ::ParticleInScint[nElements];
   }
   // Wrapper around operator delete
   static void delete_ParticleInScint(void *p) {
      delete ((::ParticleInScint*)p);
   }
   static void deleteArray_ParticleInScint(void *p) {
      delete [] ((::ParticleInScint*)p);
   }
   static void destruct_ParticleInScint(void *p) {
      typedef ::ParticleInScint current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ParticleInScint

//______________________________________________________________________________
void Station::Streamer(TBuffer &R__b)
{
   // Stream an object of class Station.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Station::Class(),this);
   } else {
      R__b.WriteClassBuffer(Station::Class(),this);
   }
}

//______________________________________________________________________________
void Station::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Station.
      TClass *R__cl = ::Station::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fId", &fId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fName", (void*)&fName);
      R__insp.InspectMember("string", (void*)&fName, "fName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNorthing", &fNorthing);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEasting", &fEasting);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAltitude", &fAltitude);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX_sf", &fX_sf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY_sf", &fY_sf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ_sf", &fZ_sf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fR_sf", &fR_sf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAzim_sf", &fAzim_sf);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Station(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Station : new ::Station;
   }
   static void *newArray_Station(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Station[nElements] : new ::Station[nElements];
   }
   // Wrapper around operator delete
   static void delete_Station(void *p) {
      delete ((::Station*)p);
   }
   static void deleteArray_Station(void *p) {
      delete [] ((::Station*)p);
   }
   static void destruct_Station(void *p) {
      typedef ::Station current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Station

//______________________________________________________________________________
void Array::Streamer(TBuffer &R__b)
{
   // Stream an object of class Array.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Array::Class(),this);
   } else {
      R__b.WriteClassBuffer(Array::Class(),this);
   }
}

//______________________________________________________________________________
void Array::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Array.
      TClass *R__cl = ::Array::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStationList", (void*)&fStationList);
      R__insp.InspectMember("vector<Station>", (void*)&fStationList, "fStationList.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNorMin", &fNorMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNorMax", &fNorMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEasMin", &fEasMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEasMax", &fEasMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNorMean", &fNorMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEasMean", &fEasMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNorWidth", &fNorWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEasWidth", &fEasWidth);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Array(void *p) {
      return  p ? new(p) ::Array : new ::Array;
   }
   static void *newArray_Array(Long_t nElements, void *p) {
      return p ? new(p) ::Array[nElements] : new ::Array[nElements];
   }
   // Wrapper around operator delete
   static void delete_Array(void *p) {
      delete ((::Array*)p);
   }
   static void deleteArray_Array(void *p) {
      delete [] ((::Array*)p);
   }
   static void destruct_Array(void *p) {
      typedef ::Array current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Array

//______________________________________________________________________________
void HitStationMD::Streamer(TBuffer &R__b)
{
   // Stream an object of class HitStationMD.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HitStationMD::Class(),this);
   } else {
      R__b.WriteClassBuffer(HitStationMD::Class(),this);
   }
}

//______________________________________________________________________________
void HitStationMD::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HitStationMD.
      TClass *R__cl = ::HitStationMD::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fT2ToT", &fT2ToT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fT1Threshold", &fT1Threshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fT2Threshold", &fT2Threshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTriggerBin", &fTriggerBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime0", &fTime0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNtop", &fNtop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNside", &fNside);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpe", &fNpe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpe_direct", &fNpe_direct);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpe_mu", &fNpe_mu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpe_ph", &fNpe_ph);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpe_el", &fNpe_el);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSignalInVem", &fSignalInVem);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSampFact", &fSampFact);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbOfBinsOverThres", &fNbOfBinsOverThres);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMuTimes", (void*)&fMuTimes);
      R__insp.InspectMember("vector<Int_t>", (void*)&fMuTimes, "fMuTimes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeProfile", (void*)&fTimeProfile);
      R__insp.InspectMember("map<Int_t,Double_t>", (void*)&fTimeProfile, "fTimeProfile.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeProfile_mu", (void*)&fTimeProfile_mu);
      R__insp.InspectMember("map<Int_t,Double_t>", (void*)&fTimeProfile_mu, "fTimeProfile_mu.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeProfile_em", (void*)&fTimeProfile_em);
      R__insp.InspectMember("map<Int_t,Double_t>", (void*)&fTimeProfile_em, "fTimeProfile_em.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fADC[2][768]", fADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fADC_ns[768]", fADC_ns);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fADC_mu[2][768]", fADC_mu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fADC_em[2][768]", fADC_em);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDoubleADC[2][768]", fDoubleADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDoubleADC_mu[2][768]", fDoubleADC_mu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDoubleADC_em[2][768]", fDoubleADC_em);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPMT[1]", fPMT);
      TObject::ShowMembers(R__insp);
      SampStation::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_HitStationMD(void *p) {
      return  p ? new(p) ::HitStationMD : new ::HitStationMD;
   }
   static void *newArray_HitStationMD(Long_t nElements, void *p) {
      return p ? new(p) ::HitStationMD[nElements] : new ::HitStationMD[nElements];
   }
   // Wrapper around operator delete
   static void delete_HitStationMD(void *p) {
      delete ((::HitStationMD*)p);
   }
   static void deleteArray_HitStationMD(void *p) {
      delete [] ((::HitStationMD*)p);
   }
   static void destruct_HitStationMD(void *p) {
      typedef ::HitStationMD current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HitStationMD

//______________________________________________________________________________
void PMT_MD::Streamer(TBuffer &R__b)
{
   // Stream an object of class PMT_MD.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(PMT_MD::Class(),this);
   } else {
      R__b.WriteClassBuffer(PMT_MD::Class(),this);
   }
}

//______________________________________________________________________________
void PMT_MD::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class PMT_MD.
      TClass *R__cl = ::PMT_MD::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpe", &fNpe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpe_direct", &fNpe_direct);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpe_mu", &fNpe_mu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpe_ph", &fNpe_ph);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpe_el", &fNpe_el);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFirstADCBin", &fFirstADCBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSampFact", &fSampFact);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeProfile", (void*)&fTimeProfile);
      R__insp.InspectMember("map<Int_t,Double_t>", (void*)&fTimeProfile, "fTimeProfile.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeProfile_mu", (void*)&fTimeProfile_mu);
      R__insp.InspectMember("map<Int_t,Double_t>", (void*)&fTimeProfile_mu, "fTimeProfile_mu.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeProfile_em", (void*)&fTimeProfile_em);
      R__insp.InspectMember("map<Int_t,Double_t>", (void*)&fTimeProfile_em, "fTimeProfile_em.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPMTSignal_hi", (void*)&fPMTSignal_hi);
      R__insp.InspectMember("map<Int_t,Double_t>", (void*)&fPMTSignal_hi, "fPMTSignal_hi.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPMTSignal_lo", (void*)&fPMTSignal_lo);
      R__insp.InspectMember("map<Int_t,Double_t>", (void*)&fPMTSignal_lo, "fPMTSignal_lo.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPMTSignal_hi_mu", (void*)&fPMTSignal_hi_mu);
      R__insp.InspectMember("map<Int_t,Double_t>", (void*)&fPMTSignal_hi_mu, "fPMTSignal_hi_mu.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFEFilter_hi[19200]", fFEFilter_hi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFEFilter_lo[19200]", fFEFilter_lo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fADC[2][768]", fADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fADC_ns[768]", fADC_ns);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fADC_mu[2][768]", fADC_mu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fADC_em[2][768]", fADC_em);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_PMT_MD(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::PMT_MD : new ::PMT_MD;
   }
   static void *newArray_PMT_MD(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::PMT_MD[nElements] : new ::PMT_MD[nElements];
   }
   // Wrapper around operator delete
   static void delete_PMT_MD(void *p) {
      delete ((::PMT_MD*)p);
   }
   static void deleteArray_PMT_MD(void *p) {
      delete [] ((::PMT_MD*)p);
   }
   static void destruct_PMT_MD(void *p) {
      typedef ::PMT_MD current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::PMT_MD

//______________________________________________________________________________
void HitStationED::Streamer(TBuffer &R__b)
{
   // Stream an object of class HitStationED.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HitStationED::Class(),this);
   } else {
      R__b.WriteClassBuffer(HitStationED::Class(),this);
   }
}

//______________________________________________________________________________
void HitStationED::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HitStationED.
      TClass *R__cl = ::HitStationED::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fT2ToT", &fT2ToT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fT1Threshold", &fT1Threshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fT2Threshold", &fT2Threshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTriggerBin", &fTriggerBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime0", &fTime0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNtop", &fNtop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNside", &fNside);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpe", &fNpe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpe_direct", &fNpe_direct);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpe_mu", &fNpe_mu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpe_ph", &fNpe_ph);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpe_el", &fNpe_el);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSignalInVem", &fSignalInVem);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSampFact", &fSampFact);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbOfBinsOverThres", &fNbOfBinsOverThres);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMuTimes", (void*)&fMuTimes);
      R__insp.InspectMember("vector<Int_t>", (void*)&fMuTimes, "fMuTimes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeProfile", (void*)&fTimeProfile);
      R__insp.InspectMember("map<Int_t,Double_t>", (void*)&fTimeProfile, "fTimeProfile.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeProfile_mu", (void*)&fTimeProfile_mu);
      R__insp.InspectMember("map<Int_t,Double_t>", (void*)&fTimeProfile_mu, "fTimeProfile_mu.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeProfile_em", (void*)&fTimeProfile_em);
      R__insp.InspectMember("map<Int_t,Double_t>", (void*)&fTimeProfile_em, "fTimeProfile_em.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fADC[2][768]", fADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fADC_ns[768]", fADC_ns);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fADC_mu[2][768]", fADC_mu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fADC_em[2][768]", fADC_em);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDoubleADC[2][768]", fDoubleADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDoubleADC_mu[2][768]", fDoubleADC_mu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDoubleADC_em[2][768]", fDoubleADC_em);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPMT[1]", fPMT);
      TObject::ShowMembers(R__insp);
      SampStation::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_HitStationED(void *p) {
      return  p ? new(p) ::HitStationED : new ::HitStationED;
   }
   static void *newArray_HitStationED(Long_t nElements, void *p) {
      return p ? new(p) ::HitStationED[nElements] : new ::HitStationED[nElements];
   }
   // Wrapper around operator delete
   static void delete_HitStationED(void *p) {
      delete ((::HitStationED*)p);
   }
   static void deleteArray_HitStationED(void *p) {
      delete [] ((::HitStationED*)p);
   }
   static void destruct_HitStationED(void *p) {
      typedef ::HitStationED current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HitStationED

//______________________________________________________________________________
void HitStationLightED::Streamer(TBuffer &R__b)
{
   // Stream an object of class HitStationLightED.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HitStationLightED::Class(),this);
   } else {
      R__b.WriteClassBuffer(HitStationLightED::Class(),this);
   }
}

//______________________________________________________________________________
void HitStationLightED::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HitStationLightED.
      TClass *R__cl = ::HitStationLightED::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime0", &fTime0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpe", &fNpe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpe_mu", &fNpe_mu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpe_ph", &fNpe_ph);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpe_el", &fNpe_el);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSignal", &fSignal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsTriggered", &IsTriggered);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_HitStationLightED(void *p) {
      return  p ? new(p) ::HitStationLightED : new ::HitStationLightED;
   }
   static void *newArray_HitStationLightED(Long_t nElements, void *p) {
      return p ? new(p) ::HitStationLightED[nElements] : new ::HitStationLightED[nElements];
   }
   // Wrapper around operator delete
   static void delete_HitStationLightED(void *p) {
      delete ((::HitStationLightED*)p);
   }
   static void deleteArray_HitStationLightED(void *p) {
      delete [] ((::HitStationLightED*)p);
   }
   static void destruct_HitStationLightED(void *p) {
      typedef ::HitStationLightED current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HitStationLightED

//______________________________________________________________________________
void PMT_ED::Streamer(TBuffer &R__b)
{
   // Stream an object of class PMT_ED.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(PMT_ED::Class(),this);
   } else {
      R__b.WriteClassBuffer(PMT_ED::Class(),this);
   }
}

//______________________________________________________________________________
void PMT_ED::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class PMT_ED.
      TClass *R__cl = ::PMT_ED::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpe", &fNpe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpe_direct", &fNpe_direct);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpe_mu", &fNpe_mu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpe_ph", &fNpe_ph);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpe_el", &fNpe_el);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFirstADCBin", &fFirstADCBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSampFact", &fSampFact);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeProfile", (void*)&fTimeProfile);
      R__insp.InspectMember("map<Int_t,Double_t>", (void*)&fTimeProfile, "fTimeProfile.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeProfile_mu", (void*)&fTimeProfile_mu);
      R__insp.InspectMember("map<Int_t,Double_t>", (void*)&fTimeProfile_mu, "fTimeProfile_mu.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeProfile_em", (void*)&fTimeProfile_em);
      R__insp.InspectMember("map<Int_t,Double_t>", (void*)&fTimeProfile_em, "fTimeProfile_em.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPMTSignal_hi", (void*)&fPMTSignal_hi);
      R__insp.InspectMember("map<Int_t,Double_t>", (void*)&fPMTSignal_hi, "fPMTSignal_hi.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPMTSignal_lo", (void*)&fPMTSignal_lo);
      R__insp.InspectMember("map<Int_t,Double_t>", (void*)&fPMTSignal_lo, "fPMTSignal_lo.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPMTSignal_hi_mu", (void*)&fPMTSignal_hi_mu);
      R__insp.InspectMember("map<Int_t,Double_t>", (void*)&fPMTSignal_hi_mu, "fPMTSignal_hi_mu.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFEFilter_hi[19200]", fFEFilter_hi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFEFilter_lo[19200]", fFEFilter_lo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fADC[2][768]", fADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fADC_ns[768]", fADC_ns);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fADC_mu[2][768]", fADC_mu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fADC_em[2][768]", fADC_em);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_PMT_ED(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::PMT_ED : new ::PMT_ED;
   }
   static void *newArray_PMT_ED(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::PMT_ED[nElements] : new ::PMT_ED[nElements];
   }
   // Wrapper around operator delete
   static void delete_PMT_ED(void *p) {
      delete ((::PMT_ED*)p);
   }
   static void deleteArray_PMT_ED(void *p) {
      delete [] ((::PMT_ED*)p);
   }
   static void destruct_PMT_ED(void *p) {
      typedef ::PMT_ED current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::PMT_ED

namespace ROOT {
   void maplEfloatcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEfloatcOintgR_Dictionary();
   static void *new_maplEfloatcOintgR(void *p = 0);
   static void *newArray_maplEfloatcOintgR(Long_t size, void *p);
   static void delete_maplEfloatcOintgR(void *p);
   static void deleteArray_maplEfloatcOintgR(void *p);
   static void destruct_maplEfloatcOintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<float,int>*)
   {
      map<float,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<float,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<float,int>", -2, "prec_stl/map", 63,
                  typeid(map<float,int>), DefineBehavior(ptr, ptr),
                  0, &maplEfloatcOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<float,int>) );
      instance.SetNew(&new_maplEfloatcOintgR);
      instance.SetNewArray(&newArray_maplEfloatcOintgR);
      instance.SetDelete(&delete_maplEfloatcOintgR);
      instance.SetDeleteArray(&deleteArray_maplEfloatcOintgR);
      instance.SetDestructor(&destruct_maplEfloatcOintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<float,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<float,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEfloatcOintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<float,int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEfloatcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<float,int> : new map<float,int>;
   }
   static void *newArray_maplEfloatcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<float,int>[nElements] : new map<float,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEfloatcOintgR(void *p) {
      delete ((map<float,int>*)p);
   }
   static void deleteArray_maplEfloatcOintgR(void *p) {
      delete [] ((map<float,int>*)p);
   }
   static void destruct_maplEfloatcOintgR(void *p) {
      typedef map<float,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<float,int>

namespace ROOT {
   void maplEintcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOdoublegR_Dictionary();
   static void *new_maplEintcOdoublegR(void *p = 0);
   static void *newArray_maplEintcOdoublegR(Long_t size, void *p);
   static void delete_maplEintcOdoublegR(void *p);
   static void deleteArray_maplEintcOdoublegR(void *p);
   static void destruct_maplEintcOdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<int,double>*)
   {
      map<int,double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,double>", -2, "prec_stl/map", 63,
                  typeid(map<int,double>), DefineBehavior(ptr, ptr),
                  0, &maplEintcOdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,double>) );
      instance.SetNew(&new_maplEintcOdoublegR);
      instance.SetNewArray(&newArray_maplEintcOdoublegR);
      instance.SetDelete(&delete_maplEintcOdoublegR);
      instance.SetDeleteArray(&deleteArray_maplEintcOdoublegR);
      instance.SetDestructor(&destruct_maplEintcOdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<int,double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<int,double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEintcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,double> : new map<int,double>;
   }
   static void *newArray_maplEintcOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,double>[nElements] : new map<int,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOdoublegR(void *p) {
      delete ((map<int,double>*)p);
   }
   static void deleteArray_maplEintcOdoublegR(void *p) {
      delete [] ((map<int,double>*)p);
   }
   static void destruct_maplEintcOdoublegR(void *p) {
      typedef map<int,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<int,double>

namespace ROOT {
   void maplEintcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOintgR_Dictionary();
   static void *new_maplEintcOintgR(void *p = 0);
   static void *newArray_maplEintcOintgR(Long_t size, void *p);
   static void delete_maplEintcOintgR(void *p);
   static void deleteArray_maplEintcOintgR(void *p);
   static void destruct_maplEintcOintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<int,int>*)
   {
      map<int,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,int>", -2, "map2.dll", 0,
                  typeid(map<int,int>), DefineBehavior(ptr, ptr),
                  0, &maplEintcOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,int>) );
      instance.SetNew(&new_maplEintcOintgR);
      instance.SetNewArray(&newArray_maplEintcOintgR);
      instance.SetDelete(&delete_maplEintcOintgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOintgR);
      instance.SetDestructor(&destruct_maplEintcOintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<int,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<int,int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEintcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int> : new map<int,int>;
   }
   static void *newArray_maplEintcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int>[nElements] : new map<int,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOintgR(void *p) {
      delete ((map<int,int>*)p);
   }
   static void deleteArray_maplEintcOintgR(void *p) {
      delete [] ((map<int,int>*)p);
   }
   static void destruct_maplEintcOintgR(void *p) {
      typedef map<int,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<int,int>

namespace ROOT {
   void vectorlEHitStationEDgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEHitStationEDgR_Dictionary();
   static void *new_vectorlEHitStationEDgR(void *p = 0);
   static void *newArray_vectorlEHitStationEDgR(Long_t size, void *p);
   static void delete_vectorlEHitStationEDgR(void *p);
   static void deleteArray_vectorlEHitStationEDgR(void *p);
   static void destruct_vectorlEHitStationEDgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<HitStationED>*)
   {
      vector<HitStationED> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<HitStationED>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<HitStationED>", -2, "prec_stl/vector", 49,
                  typeid(vector<HitStationED>), DefineBehavior(ptr, ptr),
                  0, &vectorlEHitStationEDgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<HitStationED>) );
      instance.SetNew(&new_vectorlEHitStationEDgR);
      instance.SetNewArray(&newArray_vectorlEHitStationEDgR);
      instance.SetDelete(&delete_vectorlEHitStationEDgR);
      instance.SetDeleteArray(&deleteArray_vectorlEHitStationEDgR);
      instance.SetDestructor(&destruct_vectorlEHitStationEDgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<HitStationED> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<HitStationED>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEHitStationEDgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<HitStationED>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEHitStationEDgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<HitStationED> : new vector<HitStationED>;
   }
   static void *newArray_vectorlEHitStationEDgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<HitStationED>[nElements] : new vector<HitStationED>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEHitStationEDgR(void *p) {
      delete ((vector<HitStationED>*)p);
   }
   static void deleteArray_vectorlEHitStationEDgR(void *p) {
      delete [] ((vector<HitStationED>*)p);
   }
   static void destruct_vectorlEHitStationEDgR(void *p) {
      typedef vector<HitStationED> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<HitStationED>

namespace ROOT {
   void vectorlEHitStationLightEDgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEHitStationLightEDgR_Dictionary();
   static void *new_vectorlEHitStationLightEDgR(void *p = 0);
   static void *newArray_vectorlEHitStationLightEDgR(Long_t size, void *p);
   static void delete_vectorlEHitStationLightEDgR(void *p);
   static void deleteArray_vectorlEHitStationLightEDgR(void *p);
   static void destruct_vectorlEHitStationLightEDgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<HitStationLightED>*)
   {
      vector<HitStationLightED> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<HitStationLightED>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<HitStationLightED>", -2, "prec_stl/vector", 49,
                  typeid(vector<HitStationLightED>), DefineBehavior(ptr, ptr),
                  0, &vectorlEHitStationLightEDgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<HitStationLightED>) );
      instance.SetNew(&new_vectorlEHitStationLightEDgR);
      instance.SetNewArray(&newArray_vectorlEHitStationLightEDgR);
      instance.SetDelete(&delete_vectorlEHitStationLightEDgR);
      instance.SetDeleteArray(&deleteArray_vectorlEHitStationLightEDgR);
      instance.SetDestructor(&destruct_vectorlEHitStationLightEDgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<HitStationLightED> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<HitStationLightED>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEHitStationLightEDgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<HitStationLightED>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEHitStationLightEDgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<HitStationLightED> : new vector<HitStationLightED>;
   }
   static void *newArray_vectorlEHitStationLightEDgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<HitStationLightED>[nElements] : new vector<HitStationLightED>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEHitStationLightEDgR(void *p) {
      delete ((vector<HitStationLightED>*)p);
   }
   static void deleteArray_vectorlEHitStationLightEDgR(void *p) {
      delete [] ((vector<HitStationLightED>*)p);
   }
   static void destruct_vectorlEHitStationLightEDgR(void *p) {
      typedef vector<HitStationLightED> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<HitStationLightED>

namespace ROOT {
   void vectorlEHitStationMDgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEHitStationMDgR_Dictionary();
   static void *new_vectorlEHitStationMDgR(void *p = 0);
   static void *newArray_vectorlEHitStationMDgR(Long_t size, void *p);
   static void delete_vectorlEHitStationMDgR(void *p);
   static void deleteArray_vectorlEHitStationMDgR(void *p);
   static void destruct_vectorlEHitStationMDgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<HitStationMD>*)
   {
      vector<HitStationMD> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<HitStationMD>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<HitStationMD>", -2, "prec_stl/vector", 49,
                  typeid(vector<HitStationMD>), DefineBehavior(ptr, ptr),
                  0, &vectorlEHitStationMDgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<HitStationMD>) );
      instance.SetNew(&new_vectorlEHitStationMDgR);
      instance.SetNewArray(&newArray_vectorlEHitStationMDgR);
      instance.SetDelete(&delete_vectorlEHitStationMDgR);
      instance.SetDeleteArray(&deleteArray_vectorlEHitStationMDgR);
      instance.SetDestructor(&destruct_vectorlEHitStationMDgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<HitStationMD> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<HitStationMD>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEHitStationMDgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<HitStationMD>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEHitStationMDgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<HitStationMD> : new vector<HitStationMD>;
   }
   static void *newArray_vectorlEHitStationMDgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<HitStationMD>[nElements] : new vector<HitStationMD>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEHitStationMDgR(void *p) {
      delete ((vector<HitStationMD>*)p);
   }
   static void deleteArray_vectorlEHitStationMDgR(void *p) {
      delete [] ((vector<HitStationMD>*)p);
   }
   static void destruct_vectorlEHitStationMDgR(void *p) {
      typedef vector<HitStationMD> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<HitStationMD>

namespace ROOT {
   void vectorlEParticlegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEParticlegR_Dictionary();
   static void *new_vectorlEParticlegR(void *p = 0);
   static void *newArray_vectorlEParticlegR(Long_t size, void *p);
   static void delete_vectorlEParticlegR(void *p);
   static void deleteArray_vectorlEParticlegR(void *p);
   static void destruct_vectorlEParticlegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<Particle>*)
   {
      vector<Particle> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Particle>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Particle>", -2, "prec_stl/vector", 49,
                  typeid(vector<Particle>), DefineBehavior(ptr, ptr),
                  0, &vectorlEParticlegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<Particle>) );
      instance.SetNew(&new_vectorlEParticlegR);
      instance.SetNewArray(&newArray_vectorlEParticlegR);
      instance.SetDelete(&delete_vectorlEParticlegR);
      instance.SetDeleteArray(&deleteArray_vectorlEParticlegR);
      instance.SetDestructor(&destruct_vectorlEParticlegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<Particle> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Particle>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEParticlegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<Particle>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEParticlegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Particle> : new vector<Particle>;
   }
   static void *newArray_vectorlEParticlegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Particle>[nElements] : new vector<Particle>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEParticlegR(void *p) {
      delete ((vector<Particle>*)p);
   }
   static void deleteArray_vectorlEParticlegR(void *p) {
      delete [] ((vector<Particle>*)p);
   }
   static void destruct_vectorlEParticlegR(void *p) {
      typedef vector<Particle> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<Particle>

namespace ROOT {
   void vectorlEStationgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEStationgR_Dictionary();
   static void *new_vectorlEStationgR(void *p = 0);
   static void *newArray_vectorlEStationgR(Long_t size, void *p);
   static void delete_vectorlEStationgR(void *p);
   static void deleteArray_vectorlEStationgR(void *p);
   static void destruct_vectorlEStationgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<Station>*)
   {
      vector<Station> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Station>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Station>", -2, "prec_stl/vector", 49,
                  typeid(vector<Station>), DefineBehavior(ptr, ptr),
                  0, &vectorlEStationgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<Station>) );
      instance.SetNew(&new_vectorlEStationgR);
      instance.SetNewArray(&newArray_vectorlEStationgR);
      instance.SetDelete(&delete_vectorlEStationgR);
      instance.SetDeleteArray(&deleteArray_vectorlEStationgR);
      instance.SetDestructor(&destruct_vectorlEStationgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<Station> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Station>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEStationgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<Station>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEStationgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Station> : new vector<Station>;
   }
   static void *newArray_vectorlEStationgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Station>[nElements] : new vector<Station>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEStationgR(void *p) {
      delete ((vector<Station>*)p);
   }
   static void deleteArray_vectorlEStationgR(void *p) {
      delete [] ((vector<Station>*)p);
   }
   static void destruct_vectorlEStationgR(void *p) {
      typedef vector<Station> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<Station>

namespace ROOT {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<int>

/********************************************************
* EventDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableEventDict();

extern "C" void G__set_cpp_environmentEventDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("../src/Event.h");
  G__add_compiledheader("../src/Station.h");
  G__add_compiledheader("../src/Array.h");
  G__add_compiledheader("../src/Particle.h");
  G__cpp_reset_tagtableEventDict();
}
#include <new>
extern "C" int G__cpp_dllrevEventDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Particle */
static int G__EventDict_403_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Particle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Particle[n];
     } else {
       p = new((void*) gvp) Particle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Particle;
     } else {
       p = new((void*) gvp) Particle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_Particle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_403_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Particle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Particle(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Float_t) G__double(libp->para[7])
, (Float_t) G__double(libp->para[8]));
   } else {
     p = new((void*) gvp) Particle(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Float_t) G__double(libp->para[7])
, (Float_t) G__double(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_Particle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_403_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Particle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_403_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Particle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_403_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Particle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_403_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Particle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_403_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Particle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_403_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Particle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_403_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Particle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_403_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Particle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_403_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Particle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EventDict_403_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Particle* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Particle(*(Particle*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_Particle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Particle G__TParticle;
static int G__EventDict_403_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Particle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Particle*) (soff+(sizeof(Particle)*i)))->~G__TParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Particle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Particle*) (soff))->~G__TParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EventDict_403_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Particle* dest = (Particle*) G__getstructoffset();
   *dest = *(Particle*) libp->para[0].ref;
   const Particle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ParticleInTank */
static int G__EventDict_404_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ParticleInTank* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ParticleInTank[n];
     } else {
       p = new((void*) gvp) ParticleInTank[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ParticleInTank;
     } else {
       p = new((void*) gvp) ParticleInTank;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_ParticleInTank));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_404_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ParticleInTank* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 11
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ParticleInTank(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]));
   } else {
     p = new((void*) gvp) ParticleInTank(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_ParticleInTank));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_404_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ParticleInTank* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 12
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ParticleInTank(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11]));
   } else {
     p = new((void*) gvp) ParticleInTank(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_ParticleInTank));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_404_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleInTank*) G__getstructoffset())->GeomLength();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_404_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleInTank*) G__getstructoffset())->CherPhot((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_404_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ParticleInTank*) G__getstructoffset())->Follow(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_404_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ParticleInTank*) G__getstructoffset())->GenerateDeltaRays((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_404_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleInTank*) G__getstructoffset())->MultipleScattering((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_404_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ParticleInTank*) G__getstructoffset())->Bremstrahlung((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_404_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ParticleInTank*) G__getstructoffset())->MuonDecay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_404_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleInTank*) G__getstructoffset())->PairProbability();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_404_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleInTank*) G__getstructoffset())->PairProduction();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_404_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleInTank*) G__getstructoffset())->ComptonScattering();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_404_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleInTank*) G__getstructoffset())->DoDetSim();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_404_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleInTank*) G__getstructoffset())->ComputeStepParameters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_404_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ParticleInTank*) G__getstructoffset())->DoProcesses());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_404_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleInTank*) G__getstructoffset())->Propagate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_404_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ParticleInTank*) G__getstructoffset())->DoNextStep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_404_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ParticleInTank::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_404_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ParticleInTank::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_404_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ParticleInTank::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_404_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ParticleInTank::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_404_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleInTank*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_404_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ParticleInTank::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_404_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ParticleInTank::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_404_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ParticleInTank::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_404_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ParticleInTank::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EventDict_404_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ParticleInTank* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ParticleInTank(*(ParticleInTank*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_ParticleInTank));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ParticleInTank G__TParticleInTank;
static int G__EventDict_404_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ParticleInTank*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ParticleInTank*) (soff+(sizeof(ParticleInTank)*i)))->~G__TParticleInTank();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ParticleInTank*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ParticleInTank*) (soff))->~G__TParticleInTank();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EventDict_404_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ParticleInTank* dest = (ParticleInTank*) G__getstructoffset();
   *dest = *(ParticleInTank*) libp->para[0].ref;
   const ParticleInTank& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ParticleInScint */
static int G__EventDict_409_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ParticleInScint* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ParticleInScint[n];
     } else {
       p = new((void*) gvp) ParticleInScint[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ParticleInScint;
     } else {
       p = new((void*) gvp) ParticleInScint;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_ParticleInScint));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_409_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ParticleInScint* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 11
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ParticleInScint(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]));
   } else {
     p = new((void*) gvp) ParticleInScint(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_ParticleInScint));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_409_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ParticleInScint* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 12
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ParticleInScint(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11]));
   } else {
     p = new((void*) gvp) ParticleInScint(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_ParticleInScint));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_409_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleInScint*) G__getstructoffset())->DoLeadSim();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_409_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleInScint*) G__getstructoffset())->DoScintSim();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_409_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleInScint*) G__getstructoffset())->DoScintAfterDR();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_409_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleInScint*) G__getstructoffset())->GeomLengthLead();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_409_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleInScint*) G__getstructoffset())->GeomLengthScint();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_409_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleInScint*) G__getstructoffset())->InteractionProbabilityInLead();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_409_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleInScint*) G__getstructoffset())->InteractionProbabilityInScint();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_409_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleInScint*) G__getstructoffset())->DoGammaProcesses_Lead();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_409_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleInScint*) G__getstructoffset())->DoGammaProcesses_Scint();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_409_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleInScint*) G__getstructoffset())->ProbabilityProcess();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_409_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleInScint*) G__getstructoffset())->PairProbability();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_409_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleInScint*) G__getstructoffset())->PairProduction();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_409_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleInScint*) G__getstructoffset())->ComptonScattering();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_409_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleInScint*) G__getstructoffset())->PhotoElectricEffect();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_409_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleInScint*) G__getstructoffset())->PositionEnterScint();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_409_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleInScint*) G__getstructoffset())->PositionExitLead();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_409_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ParticleInScint*) G__getstructoffset())->EnergyLossInLead());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_409_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleInScint*) G__getstructoffset())->GenerateDeltaRays();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_409_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ParticleInScint*) G__getstructoffset())->EnergyLossInScint());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_409_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleInScint*) G__getstructoffset())->GeneratePhoton();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_409_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ParticleInScint::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_409_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ParticleInScint::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_409_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ParticleInScint::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_409_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ParticleInScint::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_409_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleInScint*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_409_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ParticleInScint::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_409_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ParticleInScint::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_409_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ParticleInScint::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_409_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ParticleInScint::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EventDict_409_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ParticleInScint* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ParticleInScint(*(ParticleInScint*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_ParticleInScint));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ParticleInScint G__TParticleInScint;
static int G__EventDict_409_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ParticleInScint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ParticleInScint*) (soff+(sizeof(ParticleInScint)*i)))->~G__TParticleInScint();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ParticleInScint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ParticleInScint*) (soff))->~G__TParticleInScint();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EventDict_409_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ParticleInScint* dest = (ParticleInScint*) G__getstructoffset();
   *dest = *(ParticleInScint*) libp->para[0].ref;
   const ParticleInScint& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Station */
static int G__EventDict_410_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Station* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Station[n];
     } else {
       p = new((void*) gvp) Station[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Station;
     } else {
       p = new((void*) gvp) Station;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_Station));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_410_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Station* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Station(
(Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) Station(
(Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_Station));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_410_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Station* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Station(
(Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) Station(
(Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_Station));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_410_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Station*) G__getstructoffset())->X());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_410_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Station*) G__getstructoffset())->Y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_410_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Station*) G__getstructoffset())->Z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_410_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Station*) G__getstructoffset())->X_sf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_410_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Station*) G__getstructoffset())->Y_sf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_410_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Station*) G__getstructoffset())->Z_sf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_410_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Station*) G__getstructoffset())->R_sf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_410_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Station*) G__getstructoffset())->Azim_sf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_410_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Station::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_410_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Station::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_410_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Station::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_410_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Station::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_410_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Station*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_410_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Station*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_410_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Station*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_410_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Station*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_410_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Station::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_410_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Station::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_410_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Station::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_410_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Station::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EventDict_410_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Station* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Station(*(Station*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_Station));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Station G__TStation;
static int G__EventDict_410_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Station*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Station*) (soff+(sizeof(Station)*i)))->~G__TStation();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Station*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Station*) (soff))->~G__TStation();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EventDict_410_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Station* dest = (Station*) G__getstructoffset();
   *dest = *(Station*) libp->para[0].ref;
   const Station& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SampStation */
static int G__EventDict_411_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SampStation* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SampStation[n];
     } else {
       p = new((void*) gvp) SampStation[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SampStation;
     } else {
       p = new((void*) gvp) SampStation;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_SampStation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_411_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SampStation* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SampStation(
(Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) SampStation(
(Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_SampStation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_411_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SampStation* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SampStation(
(Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) SampStation(
(Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_SampStation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_411_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SampStation*) G__getstructoffset())->AddEntry((Particle*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_411_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SampStation::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_411_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SampStation::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_411_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SampStation::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_411_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SampStation::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_411_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SampStation*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_411_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SampStation::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_411_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SampStation::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_411_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SampStation::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_411_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SampStation::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EventDict_411_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SampStation* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SampStation(*(SampStation*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_SampStation));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SampStation G__TSampStation;
static int G__EventDict_411_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SampStation*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SampStation*) (soff+(sizeof(SampStation)*i)))->~G__TSampStation();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SampStation*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SampStation*) (soff))->~G__TSampStation();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EventDict_411_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SampStation* dest = (SampStation*) G__getstructoffset();
   *dest = *(SampStation*) libp->para[0].ref;
   const SampStation& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* PMT_MD */
static int G__EventDict_416_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PMT_MD* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PMT_MD[n];
     } else {
       p = new((void*) gvp) PMT_MD[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PMT_MD;
     } else {
       p = new((void*) gvp) PMT_MD;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_PMT_MD));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_416_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMT_MD*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_416_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMT_MD*) G__getstructoffset())->WritePE((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_416_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMT_MD*) G__getstructoffset())->DirectLight((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_416_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMT_MD*) G__getstructoffset())->DoElecSim();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_416_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMT_MD*) G__getstructoffset())->PMTAmplification(*(map<Int_t,Double_t>*) libp->para[0].ref, *(map<Int_t,Double_t>*) libp->para[1].ref
, *(map<Int_t,Double_t>*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_416_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMT_MD*) G__getstructoffset())->FEFilter(*(map<Int_t,Double_t>*) libp->para[0].ref, (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_416_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMT_MD*) G__getstructoffset())->FADCSampling((Double_t*) G__int(libp->para[0]), (short*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_416_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMT_MD*) G__getstructoffset())->FADCSamplingSat((Double_t*) G__int(libp->para[0]), (short*) G__int(libp->para[1])
, (int*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_416_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PMT_MD::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_416_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PMT_MD::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_416_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PMT_MD::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_416_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PMT_MD::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_416_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const PMT_MD*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_416_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMT_MD*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_416_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMT_MD*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_416_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMT_MD*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_416_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PMT_MD::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_416_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PMT_MD::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_416_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PMT_MD::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_416_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PMT_MD::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EventDict_416_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   PMT_MD* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new PMT_MD(*(PMT_MD*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_PMT_MD));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PMT_MD G__TPMT_MD;
static int G__EventDict_416_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PMT_MD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PMT_MD*) (soff+(sizeof(PMT_MD)*i)))->~G__TPMT_MD();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PMT_MD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PMT_MD*) (soff))->~G__TPMT_MD();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EventDict_416_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PMT_MD* dest = (PMT_MD*) G__getstructoffset();
   *dest = *(PMT_MD*) libp->para[0].ref;
   const PMT_MD& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HitStationMD */
static int G__EventDict_424_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HitStationMD* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HitStationMD[n];
     } else {
       p = new((void*) gvp) HitStationMD[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HitStationMD;
     } else {
       p = new((void*) gvp) HitStationMD;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_HitStationMD));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_424_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HitStationMD* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HitStationMD(
(Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) HitStationMD(
(Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_HitStationMD));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_424_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HitStationMD* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HitStationMD(
(Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) HitStationMD(
(Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_HitStationMD));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_424_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitStationMD*) G__getstructoffset())->WriteSamplingFactor((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_424_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitStationMD*) G__getstructoffset())->WritePE((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_424_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitStationMD*) G__getstructoffset())->WriteADCBin((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_424_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitStationMD*) G__getstructoffset())->WriteDoubleADCBin((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_424_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitStationMD*) G__getstructoffset())->CountPart((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_424_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitStationMD*) G__getstructoffset())->SumADCTraces();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_424_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitStationMD*) G__getstructoffset())->DoDetSim(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), *(SampStation*) libp->para[5].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_424_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitStationMD*) G__getstructoffset())->WriteShortADCTraces();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_424_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitStationMD*) G__getstructoffset())->DoElecSim();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_424_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitStationMD*) G__getstructoffset())->SetTime0();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_424_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitStationMD*) G__getstructoffset())->SetTime0((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_424_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HitStationMD*) G__getstructoffset())->SignalInVem());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_424_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitStationMD*) G__getstructoffset())->ReadParticleInTank((ParticleInTank*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_424_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HitStationMD*) G__getstructoffset())->DoTrigSim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_424_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HitStationMD*) G__getstructoffset())->TestToT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_424_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HitStationMD*) G__getstructoffset())->TestThreshold((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_424_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HitStationMD*) G__getstructoffset())->GetChargeInVEM());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_424_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HitStationMD::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_424_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HitStationMD::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_424_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HitStationMD::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_424_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HitStationMD::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_424_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitStationMD*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_424_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HitStationMD::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_424_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HitStationMD::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_424_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HitStationMD::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_424_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HitStationMD::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EventDict_424_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HitStationMD* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HitStationMD(*(HitStationMD*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_HitStationMD));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HitStationMD G__THitStationMD;
static int G__EventDict_424_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HitStationMD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HitStationMD*) (soff+(sizeof(HitStationMD)*i)))->~G__THitStationMD();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HitStationMD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HitStationMD*) (soff))->~G__THitStationMD();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EventDict_424_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HitStationMD* dest = (HitStationMD*) G__getstructoffset();
   *dest = *(HitStationMD*) libp->para[0].ref;
   const HitStationMD& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* PMT_ED */
static int G__EventDict_425_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PMT_ED* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PMT_ED[n];
     } else {
       p = new((void*) gvp) PMT_ED[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PMT_ED;
     } else {
       p = new((void*) gvp) PMT_ED;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_PMT_ED));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_425_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMT_ED*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_425_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMT_ED*) G__getstructoffset())->WritePE((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_425_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMT_ED*) G__getstructoffset())->DirectLight((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_425_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMT_ED*) G__getstructoffset())->DoElecSim();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_425_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMT_ED*) G__getstructoffset())->PMTAmplification(*(map<Int_t,Double_t>*) libp->para[0].ref, *(map<Int_t,Double_t>*) libp->para[1].ref
, *(map<Int_t,Double_t>*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_425_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMT_ED*) G__getstructoffset())->FEFilter(*(map<Int_t,Double_t>*) libp->para[0].ref, (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_425_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMT_ED*) G__getstructoffset())->FADCSampling((Double_t*) G__int(libp->para[0]), (short*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_425_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMT_ED*) G__getstructoffset())->FADCSamplingSat((Double_t*) G__int(libp->para[0]), (short*) G__int(libp->para[1])
, (int*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_425_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PMT_ED::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_425_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PMT_ED::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_425_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PMT_ED::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_425_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PMT_ED::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_425_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const PMT_ED*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_425_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMT_ED*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_425_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMT_ED*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_425_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMT_ED*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_425_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PMT_ED::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_425_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PMT_ED::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_425_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PMT_ED::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_425_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PMT_ED::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EventDict_425_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   PMT_ED* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new PMT_ED(*(PMT_ED*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_PMT_ED));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PMT_ED G__TPMT_ED;
static int G__EventDict_425_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PMT_ED*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PMT_ED*) (soff+(sizeof(PMT_ED)*i)))->~G__TPMT_ED();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PMT_ED*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PMT_ED*) (soff))->~G__TPMT_ED();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EventDict_425_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PMT_ED* dest = (PMT_ED*) G__getstructoffset();
   *dest = *(PMT_ED*) libp->para[0].ref;
   const PMT_ED& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HitStationED */
static int G__EventDict_426_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HitStationED* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HitStationED[n];
     } else {
       p = new((void*) gvp) HitStationED[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HitStationED;
     } else {
       p = new((void*) gvp) HitStationED;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_HitStationED));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_426_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HitStationED* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HitStationED(
(Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) HitStationED(
(Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_HitStationED));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_426_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HitStationED* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HitStationED(
(Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) HitStationED(
(Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_HitStationED));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_426_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitStationED*) G__getstructoffset())->WriteSamplingFactor((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_426_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitStationED*) G__getstructoffset())->WritePE((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_426_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitStationED*) G__getstructoffset())->CountPart((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_426_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitStationED*) G__getstructoffset())->DoDetSim(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), *(SampStation*) libp->para[5].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_426_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitStationED*) G__getstructoffset())->SetTime0();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_426_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitStationED*) G__getstructoffset())->SetTime0((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_426_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitStationED*) G__getstructoffset())->ReadParticleInScint((ParticleInScint*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_426_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HitStationED*) G__getstructoffset())->TestToT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_426_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HitStationED*) G__getstructoffset())->TestThreshold((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_426_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HitStationED*) G__getstructoffset())->DoTrigSim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_426_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HitStationED::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_426_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HitStationED::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_426_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HitStationED::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_426_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HitStationED::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_426_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitStationED*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_426_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HitStationED::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_426_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HitStationED::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_426_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HitStationED::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_426_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HitStationED::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EventDict_426_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HitStationED* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HitStationED(*(HitStationED*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_HitStationED));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HitStationED G__THitStationED;
static int G__EventDict_426_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HitStationED*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HitStationED*) (soff+(sizeof(HitStationED)*i)))->~G__THitStationED();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HitStationED*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HitStationED*) (soff))->~G__THitStationED();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EventDict_426_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HitStationED* dest = (HitStationED*) G__getstructoffset();
   *dest = *(HitStationED*) libp->para[0].ref;
   const HitStationED& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HitStationLightED */
static int G__EventDict_427_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HitStationLightED* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HitStationLightED[n];
     } else {
       p = new((void*) gvp) HitStationLightED[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HitStationLightED;
     } else {
       p = new((void*) gvp) HitStationLightED;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_HitStationLightED));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_427_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HitStationLightED* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HitStationLightED(*(HitStationED*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) HitStationLightED(*(HitStationED*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_HitStationLightED));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_427_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HitStationLightED::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_427_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HitStationLightED::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_427_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HitStationLightED::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_427_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HitStationLightED::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_427_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitStationLightED*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_427_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HitStationLightED::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_427_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HitStationLightED::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_427_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HitStationLightED::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_427_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HitStationLightED::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EventDict_427_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HitStationLightED* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HitStationLightED(*(HitStationLightED*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_HitStationLightED));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HitStationLightED G__THitStationLightED;
static int G__EventDict_427_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HitStationLightED*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HitStationLightED*) (soff+(sizeof(HitStationLightED)*i)))->~G__THitStationLightED();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HitStationLightED*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HitStationLightED*) (soff))->~G__THitStationLightED();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EventDict_427_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HitStationLightED* dest = (HitStationLightED*) G__getstructoffset();
   *dest = *(HitStationLightED*) libp->para[0].ref;
   const HitStationLightED& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Event */
static int G__EventDict_428_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Event* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Event[n];
     } else {
       p = new((void*) gvp) Event[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Event;
     } else {
       p = new((void*) gvp) Event;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_Event));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_428_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Event* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Event(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) Event(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_Event));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_428_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Event* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Event(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   } else {
     p = new((void*) gvp) Event(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_Event));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_428_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Event* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Event((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
   } else {
     p = new((void*) gvp) Event((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_Event));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_428_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Event* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Event(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
   } else {
     p = new((void*) gvp) Event(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_Event));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_428_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Event*) G__getstructoffset())->CountTanks();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_428_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Event*) G__getstructoffset())->CountScints();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_428_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Event*) G__getstructoffset())->AddTank((HitStationMD*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_428_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Event*) G__getstructoffset())->AddScint((HitStationED*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_428_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Event*) G__getstructoffset())->SetDepth((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_428_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Event*) G__getstructoffset())->DoT3Sim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_428_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Event*) G__getstructoffset())->DoT4Sim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_428_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Event::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_428_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Event::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_428_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Event::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_428_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Event::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_428_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Event*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_428_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Event::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_428_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Event::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_428_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Event::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_428_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Event::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EventDict_428_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Event* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Event(*(Event*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_Event));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Event G__TEvent;
static int G__EventDict_428_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Event*) (soff+(sizeof(Event)*i)))->~G__TEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Event*) (soff))->~G__TEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EventDict_428_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Event* dest = (Event*) G__getstructoffset();
   *dest = *(Event*) libp->para[0].ref;
   const Event& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EventRec */
static int G__EventDict_437_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EventRec*) G__getstructoffset())->CountTrigMDStaVEM((float) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_437_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EventRec*) G__getstructoffset())->CountTrigMDStaMu((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_437_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EventRec*) G__getstructoffset())->CountTrigMDSta((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_437_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EventRec*) G__getstructoffset())->CountTrigEDSta((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_437_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EventRec* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EventRec[n];
     } else {
       p = new((void*) gvp) EventRec[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EventRec;
     } else {
       p = new((void*) gvp) EventRec;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_EventRec));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_437_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EventRec* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new EventRec(*(Event*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) EventRec(*(Event*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_EventRec));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_437_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EventRec::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_437_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventRec::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_437_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EventRec::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_437_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EventRec::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_437_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventRec*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_437_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventRec::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_437_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EventRec::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_437_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventRec::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_437_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EventRec::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EventDict_437_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EventRec* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EventRec(*(EventRec*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_EventRec));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EventRec G__TEventRec;
static int G__EventDict_437_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EventRec*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EventRec*) (soff+(sizeof(EventRec)*i)))->~G__TEventRec();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EventRec*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EventRec*) (soff))->~G__TEventRec();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EventDict_437_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EventRec* dest = (EventRec*) G__getstructoffset();
   *dest = *(EventRec*) libp->para[0].ref;
   const EventRec& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Array */
static int G__EventDict_451_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Array* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Array[n];
     } else {
       p = new((void*) gvp) Array[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Array;
     } else {
       p = new((void*) gvp) Array;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_Array));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_451_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Array* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Array(*((vector<Station>*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) Array(*((vector<Station>*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_Array));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_451_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Array* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Array((Int_t) G__int(libp->para[0]), (int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) Array((Int_t) G__int(libp->para[0]), (int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_Array));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_451_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Array* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Array(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) Array(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_Array));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_451_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Array* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Array(*((string*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) Array(*((string*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_Array));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_451_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Array*) G__getstructoffset())->Fill((Station*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_451_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Array*) G__getstructoffset())->Size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_451_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Array::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_451_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Array::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_451_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Array::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_451_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Array::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_451_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Array*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_451_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Array::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_451_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Array::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_451_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Array::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDict_451_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Array::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EventDict_451_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Array* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Array(*(Array*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDictLN_Array));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Array G__TArray;
static int G__EventDict_451_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Array*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Array*) (soff+(sizeof(Array)*i)))->~G__TArray();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Array*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Array*) (soff))->~G__TArray();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EventDict_451_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Array* dest = (Array*) G__getstructoffset();
   *dest = *(Array*) libp->para[0].ref;
   const Array& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* Particle */

/* ParticleInTank */

/* ParticleInScint */

/* Station */

/* SampStation */

/* PMT_MD */

/* HitStationMD */

/* PMT_ED */

/* HitStationED */

/* HitStationLightED */

/* Event */

/* EventRec */

/* Array */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncEventDict {
 public:
  G__Sizep2memfuncEventDict(): p(&G__Sizep2memfuncEventDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncEventDict::*p)();
};

size_t G__get_sizep2memfuncEventDict()
{
  G__Sizep2memfuncEventDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceEventDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDictLN_Particle))) {
     Particle *G__Lderived;
     G__Lderived=(Particle*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDictLN_Particle),G__get_linked_tagnum(&G__EventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDictLN_ParticleInTank))) {
     ParticleInTank *G__Lderived;
     G__Lderived=(ParticleInTank*)0x1000;
     {
       Particle *G__Lpbase=(Particle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDictLN_ParticleInTank),G__get_linked_tagnum(&G__EventDictLN_Particle),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDictLN_ParticleInTank),G__get_linked_tagnum(&G__EventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDictLN_ParticleInScint))) {
     ParticleInScint *G__Lderived;
     G__Lderived=(ParticleInScint*)0x1000;
     {
       Particle *G__Lpbase=(Particle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDictLN_ParticleInScint),G__get_linked_tagnum(&G__EventDictLN_Particle),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDictLN_ParticleInScint),G__get_linked_tagnum(&G__EventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDictLN_SampStation))) {
     SampStation *G__Lderived;
     G__Lderived=(SampStation*)0x1000;
     {
       Station *G__Lpbase=(Station*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDictLN_SampStation),G__get_linked_tagnum(&G__EventDictLN_Station),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDictLN_HitStationMD))) {
     HitStationMD *G__Lderived;
     G__Lderived=(HitStationMD*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDictLN_HitStationMD),G__get_linked_tagnum(&G__EventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       SampStation *G__Lpbase=(SampStation*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDictLN_HitStationMD),G__get_linked_tagnum(&G__EventDictLN_SampStation),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       Station *G__Lpbase=(Station*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDictLN_HitStationMD),G__get_linked_tagnum(&G__EventDictLN_Station),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDictLN_HitStationED))) {
     HitStationED *G__Lderived;
     G__Lderived=(HitStationED*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDictLN_HitStationED),G__get_linked_tagnum(&G__EventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       SampStation *G__Lpbase=(SampStation*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDictLN_HitStationED),G__get_linked_tagnum(&G__EventDictLN_SampStation),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       Station *G__Lpbase=(Station*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDictLN_HitStationED),G__get_linked_tagnum(&G__EventDictLN_Station),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDictLN_HitStationLightED))) {
     HitStationLightED *G__Lderived;
     G__Lderived=(HitStationLightED*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDictLN_HitStationLightED),G__get_linked_tagnum(&G__EventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDictLN_Event))) {
     Event *G__Lderived;
     G__Lderived=(Event*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDictLN_Event),G__get_linked_tagnum(&G__EventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDictLN_EventRec))) {
     EventRec *G__Lderived;
     G__Lderived=(EventRec*)0x1000;
     {
       Event *G__Lpbase=(Event*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDictLN_EventRec),G__get_linked_tagnum(&G__EventDictLN_Event),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDictLN_EventRec),G__get_linked_tagnum(&G__EventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDictLN_Array))) {
     Array *G__Lderived;
     G__Lderived=(Array*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDictLN_Array),G__get_linked_tagnum(&G__EventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableEventDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__EventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__EventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__EventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__EventDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EventDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EventDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__EventDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Particle>",117,G__get_linked_tagnum(&G__EventDictLN_vectorlEParticlecOallocatorlEParticlegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EventDictLN_reverse_iteratorlEvectorlEParticlecOallocatorlEParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventDictLN_vectorlEParticlecOallocatorlEParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EventDictLN_reverse_iteratorlEvectorlEParticlecOallocatorlEParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventDictLN_vectorlEParticlecOallocatorlEParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,Double_t>",117,G__get_linked_tagnum(&G__EventDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,double>",117,G__get_linked_tagnum(&G__EventDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,double,less<int> >",117,G__get_linked_tagnum(&G__EventDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HitStationED>",117,G__get_linked_tagnum(&G__EventDictLN_vectorlEHitStationEDcOallocatorlEHitStationEDgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EventDictLN_reverse_iteratorlEvectorlEHitStationEDcOallocatorlEHitStationEDgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventDictLN_vectorlEHitStationEDcOallocatorlEHitStationEDgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EventDictLN_reverse_iteratorlEvectorlEHitStationEDcOallocatorlEHitStationEDgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventDictLN_vectorlEHitStationEDcOallocatorlEHitStationEDgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HitStationMD>",117,G__get_linked_tagnum(&G__EventDictLN_vectorlEHitStationMDcOallocatorlEHitStationMDgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EventDictLN_reverse_iteratorlEvectorlEHitStationMDcOallocatorlEHitStationMDgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventDictLN_vectorlEHitStationMDcOallocatorlEHitStationMDgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EventDictLN_reverse_iteratorlEvectorlEHitStationMDcOallocatorlEHitStationMDgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventDictLN_vectorlEHitStationMDcOallocatorlEHitStationMDgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<float,int>",117,G__get_linked_tagnum(&G__EventDictLN_maplEfloatcOintcOlesslEfloatgRcOallocatorlEpairlEconstsPfloatcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<float,int,less<float> >",117,G__get_linked_tagnum(&G__EventDictLN_maplEfloatcOintcOlesslEfloatgRcOallocatorlEpairlEconstsPfloatcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HitStationLightED>",117,G__get_linked_tagnum(&G__EventDictLN_vectorlEHitStationLightEDcOallocatorlEHitStationLightEDgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EventDictLN_reverse_iteratorlEvectorlEHitStationLightEDcOallocatorlEHitStationLightEDgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventDictLN_vectorlEHitStationLightEDcOallocatorlEHitStationLightEDgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EventDictLN_reverse_iteratorlEvectorlEHitStationLightEDcOallocatorlEHitStationLightEDgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventDictLN_vectorlEHitStationLightEDcOallocatorlEHitStationLightEDgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Station>",117,G__get_linked_tagnum(&G__EventDictLN_vectorlEStationcOallocatorlEStationgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EventDictLN_reverse_iteratorlEvectorlEStationcOallocatorlEStationgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventDictLN_vectorlEStationcOallocatorlEStationgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EventDictLN_reverse_iteratorlEvectorlEStationcOallocatorlEStationgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventDictLN_vectorlEStationcOallocatorlEStationgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* Particle */
static void G__setup_memvarParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDictLN_Particle));
   { Particle *p; p=(Particle*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fId)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fId=",0,"Aires code */");
   G__memvar_setup((void*)((long)(&p->fUX)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fUX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fUY)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fUY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fUZ)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fUZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fT)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fT=",0,"T: time of arrival */");
   G__memvar_setup((void*)((long)(&p->fT_plane)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fT_plane=",0,"T: time of  */");
   G__memvar_setup((void*)((long)(&p->fE)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fE=",0,"En: energy in Gev */");
   G__memvar_setup((void*)((long)(&p->fWtop)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fWtop=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fWside)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fWside=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ParticleInTank */
static void G__setup_memvarParticleInTank(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDictLN_ParticleInTank));
   { ParticleInTank *p; p=(ParticleInTank*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Beta)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Beta=",0,"!");
   G__memvar_setup((void*)((long)(&p->Range)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Range=",0,"!");
   G__memvar_setup((void*)((long)(&p->DxStep)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"DxStep=",0,"!");
   G__memvar_setup((void*)((long)(&p->IStep)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"IStep=",0,"!");
   G__memvar_setup((void*)((long)(&p->GLength)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"GLength=",0,"!");
   G__memvar_setup((void*)((long)(&p->MeanIntLength)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"MeanIntLength=",0,"!");
   G__memvar_setup((void*)((long)(&p->IntLength)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"IntLength=",0,"!");
   G__memvar_setup((void*)((long)(&p->ProbPair)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ProbPair=",0,"!");
   G__memvar_setup((void*)((long)(&p->fISta)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fISta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMotherId)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMotherId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fX)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fY)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fY=",0,"X,Y : position in m */");
   G__memvar_setup((void*)((long)(&p->fZ)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fW)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fW=",0,"W : weight */");
   G__memvar_setup((void*)((long)(&p->fNCherPhot)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNCherPhot=",0,"Number of Cherenkov photons induced */");
   G__memvar_setup((void*)((long)(&p->fTCherPhot)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,1,"fTCherPhot=",0,"!");
   G__memvar_setup((void*)((long)(&p->fNReflexions)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,1,"fNReflexions=",0,"!");
   G__memvar_setup((void*)((long)(&p->fIpm)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,1,"fIpm=",0,"!");
   G__memvar_setup((void*)((long)(&p->fBinContent)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,1,"fBinContent=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ParticleInScint */
static void G__setup_memvarParticleInScint(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDictLN_ParticleInScint));
   { ParticleInScint *p; p=(ParticleInScint*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ElectronEnergyLossLead)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ElectronEnergyLossLead=",0,"!");
   G__memvar_setup((void*)((long)(&p->MuonEnergyLossLead)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"MuonEnergyLossLead=",0,"!");
   G__memvar_setup((void*)((long)(&p->ElectronEnergyLoss)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ElectronEnergyLoss=",0,"!");
   G__memvar_setup((void*)((long)(&p->MuonEnergyLoss)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"MuonEnergyLoss=",0,"!");
   G__memvar_setup((void*)((long)(&p->GLength)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"GLength=",0,"!");
   G__memvar_setup((void*)((long)(&p->GammaEnergyLoss)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"GammaEnergyLoss=",0,"!");
   G__memvar_setup((void*)((long)(&p->ProbNoInt)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ProbNoInt=",0,"!");
   G__memvar_setup((void*)((long)(&p->ProbPair)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ProbPair=",0,"!");
   G__memvar_setup((void*)((long)(&p->ProbIntLead)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ProbIntLead=",0,"!");
   G__memvar_setup((void*)((long)(&p->ProbPairLead)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ProbPairLead=",0,"!");
   G__memvar_setup((void*)((long)(&p->ProbComptLead)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ProbComptLead=",0,"!");
   G__memvar_setup((void*)((long)(&p->ProbPhotLead)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ProbPhotLead=",0,"!");
   G__memvar_setup((void*)((long)(&p->fISta)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fISta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMotherId)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fMotherId=",0,"ID mother particle */");
   G__memvar_setup((void*)((long)(&p->fX)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fX=",0,"X : position in m */");
   G__memvar_setup((void*)((long)(&p->fY)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fY=",0,"Y : position in m */");
   G__memvar_setup((void*)((long)(&p->fZ)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fZ=",0,"Z : position in m */");
   G__memvar_setup((void*)((long)(&p->fW)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fW=",0,"W : weight */");
   G__memvar_setup((void*)((long)(&p->fNPhot)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNPhot=",0,"Number of photons induced */");
   G__memvar_setup((void*)((long)(&p->WhereAmI)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"WhereAmI=",0,"1->Pb, 2->Scint */");
   G__memvar_setup((void*)((long)(&p->AfterOneDR)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"AfterOneDR=",0,"0->Pas passé dans DR, 1-> 1 DR */");
   G__memvar_setup((void*)((long)(&p->fBinContent)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,1,"fBinContent=",0,"!");
   G__memvar_setup((void*)((long)(&p->fTPhot)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,1,"fTPhot=",0,"!");
   G__memvar_setup((void*)((long)(&p->fNPhotList)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,1,"fNPhotList=",0,"!");
   G__memvar_setup((void*)((long)(&p->fCodePhot)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,1,"fCodePhot=",0,"!");
   G__memvar_setup((void*)((long)(&p->fIpm)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,1,"fIpm=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Station */
static void G__setup_memvarStation(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDictLN_Station));
   { Station *p; p=(Station*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fId)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_string),-1,-1,1,"fName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNorthing)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fNorthing=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fEasting)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fEasting=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fAltitude)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fAltitude=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fX_sf)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fX_sf=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fY_sf)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fY_sf=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fZ_sf)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fZ_sf=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fR_sf)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fR_sf=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fAzim_sf)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fAzim_sf=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SampStation */
static void G__setup_memvarSampStation(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDictLN_SampStation));
   { SampStation *p; p=(SampStation*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fNmu)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNmu=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNph)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNph=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNel)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNel=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNPartTot)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNPartTot=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPartList)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_vectorlEParticlecOallocatorlEParticlegRsPgR),G__defined_typename("vector<Particle>"),-1,1,"fPartList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* PMT_MD */
static void G__setup_memvarPMT_MD(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDictLN_PMT_MD));
   { PMT_MD *p; p=(PMT_MD*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fNpe)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fNpe=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNpe_direct)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fNpe_direct=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNpe_mu)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fNpe_mu=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNpe_ph)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fNpe_ph=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNpe_el)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fNpe_el=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFirstADCBin)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fFirstADCBin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSampFact)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fSampFact=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTimeProfile)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("map<Int_t,Double_t>"),-1,1,"fTimeProfile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTimeProfile_mu)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("map<Int_t,Double_t>"),-1,1,"fTimeProfile_mu=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTimeProfile_em)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("map<Int_t,Double_t>"),-1,1,"fTimeProfile_em=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPMTSignal_hi)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("map<Int_t,Double_t>"),-1,1,"fPMTSignal_hi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPMTSignal_lo)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("map<Int_t,Double_t>"),-1,1,"fPMTSignal_lo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPMTSignal_hi_mu)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("map<Int_t,Double_t>"),-1,1,"fPMTSignal_hi_mu=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFEFilter_hi)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fFEFilter_hi[19200]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFEFilter_lo)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fFEFilter_lo[19200]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fADC)-(long)(p)),115,0,0,-1,-1,-1,1,"fADC[2][768]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fADC_ns)-(long)(p)),105,0,0,-1,-1,-1,1,"fADC_ns[768]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fADC_mu)-(long)(p)),115,0,0,-1,-1,-1,1,"fADC_mu[2][768]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fADC_em)-(long)(p)),115,0,0,-1,-1,-1,1,"fADC_em[2][768]=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HitStationMD */
static void G__setup_memvarHitStationMD(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDictLN_HitStationMD));
   { HitStationMD *p; p=(HitStationMD*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fT2ToT)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fT2ToT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fT1Threshold)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fT1Threshold=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fT2Threshold)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fT2Threshold=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTriggerBin)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fTriggerBin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTime0)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fTime0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNtop)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNtop=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNside)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNside=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNpe)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fNpe=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNpe_direct)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fNpe_direct=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNpe_mu)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fNpe_mu=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNpe_ph)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fNpe_ph=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNpe_el)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fNpe_el=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSignalInVem)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fSignalInVem=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSampFact)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fSampFact=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNbOfBinsOverThres)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNbOfBinsOverThres=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMuTimes)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,1,"fMuTimes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTimeProfile)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("map<Int_t,Double_t>"),-1,1,"fTimeProfile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTimeProfile_mu)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("map<Int_t,Double_t>"),-1,1,"fTimeProfile_mu=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTimeProfile_em)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("map<Int_t,Double_t>"),-1,1,"fTimeProfile_em=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fADC)-(long)(p)),115,0,0,-1,-1,-1,1,"fADC[2][768]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fADC_ns)-(long)(p)),115,0,0,-1,-1,-1,1,"fADC_ns[768]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fADC_mu)-(long)(p)),115,0,0,-1,-1,-1,1,"fADC_mu[2][768]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fADC_em)-(long)(p)),115,0,0,-1,-1,-1,1,"fADC_em[2][768]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fDoubleADC)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fDoubleADC[2][768]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fDoubleADC_mu)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fDoubleADC_mu[2][768]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fDoubleADC_em)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fDoubleADC_em[2][768]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPMT)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_PMT_MD),-1,-1,1,"fPMT[1]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* PMT_ED */
static void G__setup_memvarPMT_ED(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDictLN_PMT_ED));
   { PMT_ED *p; p=(PMT_ED*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fNpe)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fNpe=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNpe_direct)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fNpe_direct=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNpe_mu)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fNpe_mu=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNpe_ph)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fNpe_ph=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNpe_el)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fNpe_el=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFirstADCBin)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fFirstADCBin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSampFact)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fSampFact=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTimeProfile)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("map<Int_t,Double_t>"),-1,1,"fTimeProfile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTimeProfile_mu)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("map<Int_t,Double_t>"),-1,1,"fTimeProfile_mu=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTimeProfile_em)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("map<Int_t,Double_t>"),-1,1,"fTimeProfile_em=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPMTSignal_hi)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("map<Int_t,Double_t>"),-1,1,"fPMTSignal_hi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPMTSignal_lo)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("map<Int_t,Double_t>"),-1,1,"fPMTSignal_lo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPMTSignal_hi_mu)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("map<Int_t,Double_t>"),-1,1,"fPMTSignal_hi_mu=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFEFilter_hi)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fFEFilter_hi[19200]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fFEFilter_lo)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fFEFilter_lo[19200]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fADC)-(long)(p)),115,0,0,-1,-1,-1,1,"fADC[2][768]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fADC_ns)-(long)(p)),105,0,0,-1,-1,-1,1,"fADC_ns[768]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fADC_mu)-(long)(p)),115,0,0,-1,-1,-1,1,"fADC_mu[2][768]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fADC_em)-(long)(p)),115,0,0,-1,-1,-1,1,"fADC_em[2][768]=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HitStationED */
static void G__setup_memvarHitStationED(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDictLN_HitStationED));
   { HitStationED *p; p=(HitStationED*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fT2ToT)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fT2ToT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fT1Threshold)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fT1Threshold=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fT2Threshold)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fT2Threshold=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTriggerBin)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fTriggerBin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTime0)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fTime0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNtop)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNtop=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNside)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNside=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNpe)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fNpe=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNpe_direct)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fNpe_direct=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNpe_mu)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fNpe_mu=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNpe_ph)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fNpe_ph=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNpe_el)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fNpe_el=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSignalInVem)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fSignalInVem=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSampFact)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fSampFact=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNbOfBinsOverThres)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNbOfBinsOverThres=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMuTimes)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,1,"fMuTimes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTimeProfile)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("map<Int_t,Double_t>"),-1,1,"fTimeProfile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTimeProfile_mu)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("map<Int_t,Double_t>"),-1,1,"fTimeProfile_mu=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTimeProfile_em)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("map<Int_t,Double_t>"),-1,1,"fTimeProfile_em=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fADC)-(long)(p)),115,0,0,-1,-1,-1,1,"fADC[2][768]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fADC_ns)-(long)(p)),115,0,0,-1,-1,-1,1,"fADC_ns[768]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fADC_mu)-(long)(p)),115,0,0,-1,-1,-1,1,"fADC_mu[2][768]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fADC_em)-(long)(p)),115,0,0,-1,-1,-1,1,"fADC_em[2][768]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fDoubleADC)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fDoubleADC[2][768]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fDoubleADC_mu)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fDoubleADC_mu[2][768]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fDoubleADC_em)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fDoubleADC_em[2][768]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPMT)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_PMT_ED),-1,-1,1,"fPMT[1]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HitStationLightED */
static void G__setup_memvarHitStationLightED(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDictLN_HitStationLightED));
   { HitStationLightED *p; p=(HitStationLightED*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fTime0)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fTime0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNpe)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fNpe=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNpe_mu)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fNpe_mu=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNpe_ph)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fNpe_ph=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNpe_el)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fNpe_el=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fSignal)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fSignal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->IsTriggered)-(long)(p)),105,0,0,-1,-1,-1,1,"IsTriggered=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Event */
static void G__setup_memvarEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDictLN_Event));
   { Event *p; p=(Event*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fId)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPrimary)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fPrimary=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fEnergy)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTheta)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fTheta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fAzim)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fAzim=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNorCore)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fNorCore=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fEasCore)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fEasCore=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPhiRot)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fPhiRot=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fXCore)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fXCore=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fYCore)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fYCore=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fZCore)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fZCore=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fXmax)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fXmax=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fX0)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fX0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNombTank)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNombTank=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNombScint)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNombScint=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fT3Algo)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fT3Algo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fT4Algo)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fT4Algo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fHitStationListED)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_vectorlEHitStationEDcOallocatorlEHitStationEDgRsPgR),G__defined_typename("vector<HitStationED>"),-1,1,"fHitStationListED=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fHitStationListMD)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_vectorlEHitStationMDcOallocatorlEHitStationMDgRsPgR),G__defined_typename("vector<HitStationMD>"),-1,1,"fHitStationListMD=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EventRec */
static void G__setup_memvarEventRec(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDictLN_EventRec));
   { EventRec *p; p=(EventRec*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fNTrigMDStaVEM)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_maplEfloatcOintcOlesslEfloatgRcOallocatorlEpairlEconstsPfloatcOintgRsPgRsPgR),G__defined_typename("map<float,int>"),-1,1,"fNTrigMDStaVEM=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNTrigMDStaMu)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<int,int>"),-1,1,"fNTrigMDStaMu=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNTrigMDSta)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<int,int>"),-1,1,"fNTrigMDSta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNTrigEDSta)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<int,int>"),-1,1,"fNTrigEDSta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fEnergyRec)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fEnergyRec=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fThetaRec)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fThetaRec=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fAzimRec)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fAzimRec=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNorCoreRec)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fNorCoreRec=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fEasCoreRec)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fEasCoreRec=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fXCoreRec)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fXCoreRec=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fYCoreRec)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fYCoreRec=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fZCoreRec)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fZCoreRec=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fHitStationLightListED)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_vectorlEHitStationLightEDcOallocatorlEHitStationLightEDgRsPgR),G__defined_typename("vector<HitStationLightED>"),-1,1,"fHitStationLightListED=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Array */
static void G__setup_memvarArray(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDictLN_Array));
   { Array *p; p=(Array*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fStationList)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDictLN_vectorlEStationcOallocatorlEStationgRsPgR),G__defined_typename("vector<Station>"),-1,1,"fStationList=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNorMin)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fNorMin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNorMax)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fNorMax=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fEasMin)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fEasMin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fEasMax)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fEasMax=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNorMean)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fNorMean=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fEasMean)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fEasMean=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNorWidth)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fNorWidth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fEasWidth)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fEasWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarEventDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncParticle(void) {
   /* Particle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDictLN_Particle));
   G__memfunc_setup("Particle",820,G__EventDict_403_0_1, 105, G__get_linked_tagnum(&G__EventDictLN_Particle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Particle",820,G__EventDict_403_0_2, 105, G__get_linked_tagnum(&G__EventDictLN_Particle), -1, 0, 9, 1, 1, 0, 
"i - 'Int_t' 0 - idpart i - 'Int_t' 0 - ntop "
"i - 'Int_t' 0 - nside f - 'Float_t' 0 - time_plane "
"f - 'Float_t' 0 - timepart f - 'Float_t' 0 - energy "
"f - 'Float_t' 0 - cx f - 'Float_t' 0 - cy "
"f - 'Float_t' 0 - cz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDict_403_0_3, 85, G__get_linked_tagnum(&G__EventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Particle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDict_403_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Particle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDict_403_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Particle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDict_403_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Particle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDict_403_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDict_403_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Particle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDict_403_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Particle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDict_403_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Particle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDict_403_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Particle::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Particle", 820, G__EventDict_403_0_15, (int) ('i'), G__get_linked_tagnum(&G__EventDictLN_Particle), -1, 0, 1, 1, 1, 0, "u 'Particle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Particle", 946, G__EventDict_403_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EventDict_403_0_17, (int) ('u'), G__get_linked_tagnum(&G__EventDictLN_Particle), -1, 1, 1, 1, 1, 0, "u 'Particle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncParticleInTank(void) {
   /* ParticleInTank */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDictLN_ParticleInTank));
   G__memfunc_setup("ParticleInTank",1401,G__EventDict_404_0_1, 105, G__get_linked_tagnum(&G__EventDictLN_ParticleInTank), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParticleInTank",1401,G__EventDict_404_0_2, 105, G__get_linked_tagnum(&G__EventDictLN_ParticleInTank), -1, 0, 11, 1, 1, 0, 
"i - 'Int_t' 0 - ist i - 'Int_t' 0 - id "
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z d - 'Double_t' 0 - cx "
"d - 'Double_t' 0 - cy d - 'Double_t' 0 - cz "
"d - 'Double_t' 0 - tim d - 'Double_t' 0 - en "
"d - 'Double_t' 0 - weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParticleInTank",1401,G__EventDict_404_0_3, 105, G__get_linked_tagnum(&G__EventDictLN_ParticleInTank), -1, 0, 12, 1, 1, 0, 
"i - 'Int_t' 0 - ist i - 'Int_t' 0 - id "
"i - 'Int_t' 0 - motherid d - 'Double_t' 0 - x "
"d - 'Double_t' 0 - y d - 'Double_t' 0 - z "
"d - 'Double_t' 0 - cx d - 'Double_t' 0 - cy "
"d - 'Double_t' 0 - cz d - 'Double_t' 0 - tim "
"d - 'Double_t' 0 - en d - 'Double_t' 0 - weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GeomLength",1002,G__EventDict_404_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CherPhot",797,G__EventDict_404_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - beta d - 'Double_t' 0 - range", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Follow",627,G__EventDict_404_0_6, 105, -1, G__defined_typename("Int_t"), 0, 9, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z d - 'Double_t' 0 - cosx "
"d - 'Double_t' 0 - cosy d - 'Double_t' 0 - cosz "
"d - 'Double_t' 0 - prb_refdif d - 'Double_t' 0 - prb_spec "
"d - 'Double_t' 0 - abslen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenerateDeltaRays",1716,G__EventDict_404_0_7, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - beta d - 'Double_t' 0 - xstep", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MultipleScattering",1888,G__EventDict_404_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - beta d - 'Double_t' 0 - xstep", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Bremstrahlung",1374,G__EventDict_404_0_9, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - istep d - 'Double_t' 0 - dxstep "
"d - 'Double_t' 0 - beta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MuonDecay",901,G__EventDict_404_0_10, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PairProbability",1549,G__EventDict_404_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PairProduction",1459,G__EventDict_404_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ComptonScattering",1780,G__EventDict_404_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoDetSim",761,G__EventDict_404_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ComputeStepParameters",2189,G__EventDict_404_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoProcesses",1130,G__EventDict_404_0_16, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Propagate",931,G__EventDict_404_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoNextStep",1006,G__EventDict_404_0_18, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDict_404_0_19, 85, G__get_linked_tagnum(&G__EventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ParticleInTank::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDict_404_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ParticleInTank::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDict_404_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ParticleInTank::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDict_404_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ParticleInTank::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDict_404_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDict_404_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ParticleInTank::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDict_404_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ParticleInTank::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDict_404_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ParticleInTank::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDict_404_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ParticleInTank::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ParticleInTank", 1401, G__EventDict_404_0_31, (int) ('i'), G__get_linked_tagnum(&G__EventDictLN_ParticleInTank), -1, 0, 1, 1, 1, 0, "u 'ParticleInTank' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ParticleInTank", 1527, G__EventDict_404_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EventDict_404_0_33, (int) ('u'), G__get_linked_tagnum(&G__EventDictLN_ParticleInTank), -1, 1, 1, 1, 1, 0, "u 'ParticleInTank' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncParticleInScint(void) {
   /* ParticleInScint */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDictLN_ParticleInScint));
   G__memfunc_setup("ParticleInScint",1516,G__EventDict_409_0_1, 105, G__get_linked_tagnum(&G__EventDictLN_ParticleInScint), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParticleInScint",1516,G__EventDict_409_0_2, 105, G__get_linked_tagnum(&G__EventDictLN_ParticleInScint), -1, 0, 11, 1, 1, 0, 
"i - 'Int_t' 0 - ist i - 'Int_t' 0 - id "
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z d - 'Double_t' 0 - cx "
"d - 'Double_t' 0 - cy d - 'Double_t' 0 - cz "
"d - 'Double_t' 0 - tim d - 'Double_t' 0 - en "
"d - 'Double_t' 0 - weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParticleInScint",1516,G__EventDict_409_0_3, 105, G__get_linked_tagnum(&G__EventDictLN_ParticleInScint), -1, 0, 12, 1, 1, 0, 
"i - 'Int_t' 0 - ist i - 'Int_t' 0 - id "
"i - 'Int_t' 0 - motherid d - 'Double_t' 0 - x "
"d - 'Double_t' 0 - y d - 'Double_t' 0 - z "
"d - 'Double_t' 0 - cx d - 'Double_t' 0 - cy "
"d - 'Double_t' 0 - cz d - 'Double_t' 0 - tim "
"d - 'Double_t' 0 - en d - 'Double_t' 0 - weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoLeadSim",850,G__EventDict_409_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoScintSim",989,G__EventDict_409_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoScintAfterDR",1340,G__EventDict_409_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GeomLengthLead",1376,G__EventDict_409_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GeomLengthScint",1515,G__EventDict_409_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InteractionProbabilityInLead",2862,G__EventDict_409_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InteractionProbabilityInScint",3001,G__EventDict_409_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoGammaProcesses_Lead",2082,G__EventDict_409_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoGammaProcesses_Scint",2221,G__EventDict_409_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProbabilityProcess",1888,G__EventDict_409_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PairProbability",1549,G__EventDict_409_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PairProduction",1459,G__EventDict_409_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ComptonScattering",1780,G__EventDict_409_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PhotoElectricEffect",1922,G__EventDict_409_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PositionEnterScint",1876,G__EventDict_409_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PositionExitLead",1637,G__EventDict_409_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EnergyLossInLead",1592,G__EventDict_409_0_20, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenerateDeltaRays",1716,G__EventDict_409_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EnergyLossInScint",1731,G__EventDict_409_0_22, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GeneratePhoton",1443,G__EventDict_409_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDict_409_0_24, 85, G__get_linked_tagnum(&G__EventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ParticleInScint::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDict_409_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ParticleInScint::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDict_409_0_26, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ParticleInScint::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDict_409_0_27, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ParticleInScint::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDict_409_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDict_409_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ParticleInScint::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDict_409_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ParticleInScint::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDict_409_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ParticleInScint::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDict_409_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ParticleInScint::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ParticleInScint", 1516, G__EventDict_409_0_36, (int) ('i'), G__get_linked_tagnum(&G__EventDictLN_ParticleInScint), -1, 0, 1, 1, 1, 0, "u 'ParticleInScint' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ParticleInScint", 1642, G__EventDict_409_0_37, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EventDict_409_0_38, (int) ('u'), G__get_linked_tagnum(&G__EventDictLN_ParticleInScint), -1, 1, 1, 1, 1, 0, "u 'ParticleInScint' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStation(void) {
   /* Station */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDictLN_Station));
   G__memfunc_setup("Station",738,G__EventDict_410_0_1, 105, G__get_linked_tagnum(&G__EventDictLN_Station), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Station",738,G__EventDict_410_0_2, 105, G__get_linked_tagnum(&G__EventDictLN_Station), -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - id f - 'Float_t' 0 - north "
"f - 'Float_t' 0 - east f - 'Float_t' 0 - alt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Station",738,G__EventDict_410_0_3, 105, G__get_linked_tagnum(&G__EventDictLN_Station), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - id f - 'Float_t' 0 - north "
"f - 'Float_t' 0 - east", "used to have an array of event cores", (void*) NULL, 0);
   G__memfunc_setup("X",88,G__EventDict_410_0_4, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__EventDict_410_0_5, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Z",90,G__EventDict_410_0_6, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("X_sf",400,G__EventDict_410_0_7, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y_sf",401,G__EventDict_410_0_8, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Z_sf",402,G__EventDict_410_0_9, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("R_sf",394,G__EventDict_410_0_10, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Azim_sf",713,G__EventDict_410_0_11, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDict_410_0_12, 85, G__get_linked_tagnum(&G__EventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Station::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDict_410_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Station::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDict_410_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Station::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDict_410_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Station::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__EventDict_410_0_16, 85, G__get_linked_tagnum(&G__EventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__EventDict_410_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__EventDict_410_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDict_410_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDict_410_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Station::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDict_410_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Station::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDict_410_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Station::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDict_410_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Station::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Station", 738, G__EventDict_410_0_24, (int) ('i'), G__get_linked_tagnum(&G__EventDictLN_Station), -1, 0, 1, 1, 1, 0, "u 'Station' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Station", 864, G__EventDict_410_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EventDict_410_0_26, (int) ('u'), G__get_linked_tagnum(&G__EventDictLN_Station), -1, 1, 1, 1, 1, 0, "u 'Station' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSampStation(void) {
   /* SampStation */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDictLN_SampStation));
   G__memfunc_setup("SampStation",1139,G__EventDict_411_0_1, 105, G__get_linked_tagnum(&G__EventDictLN_SampStation), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SampStation",1139,G__EventDict_411_0_2, 105, G__get_linked_tagnum(&G__EventDictLN_SampStation), -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - id f - 'Float_t' 0 - north "
"f - 'Float_t' 0 - east f - 'Float_t' 0 - alt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SampStation",1139,G__EventDict_411_0_3, 105, G__get_linked_tagnum(&G__EventDictLN_SampStation), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - id f - 'Float_t' 0 - north "
"f - 'Float_t' 0 - east", "used to have an array of event cores", (void*) NULL, 0);
   G__memfunc_setup("AddEntry",795,G__EventDict_411_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'Particle' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDict_411_0_5, 85, G__get_linked_tagnum(&G__EventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SampStation::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDict_411_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SampStation::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDict_411_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SampStation::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDict_411_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SampStation::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDict_411_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDict_411_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SampStation::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDict_411_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SampStation::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDict_411_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SampStation::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDict_411_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SampStation::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SampStation", 1139, G__EventDict_411_0_17, (int) ('i'), G__get_linked_tagnum(&G__EventDictLN_SampStation), -1, 0, 1, 1, 1, 0, "u 'SampStation' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SampStation", 1265, G__EventDict_411_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EventDict_411_0_19, (int) ('u'), G__get_linked_tagnum(&G__EventDictLN_SampStation), -1, 1, 1, 1, 1, 0, "u 'SampStation' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPMT_MD(void) {
   /* PMT_MD */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDictLN_PMT_MD));
   G__memfunc_setup("PMT_MD",481,G__EventDict_416_0_1, 105, G__get_linked_tagnum(&G__EventDictLN_PMT_MD), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__EventDict_416_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WritePE",672,G__EventDict_416_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - idpart i - 'Int_t' 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DirectLight",1107,G__EventDict_416_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - npe_direct", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoElecSim",853,G__EventDict_416_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PMTAmplification",1585,G__EventDict_416_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'map<int,double,less<int>,allocator<pair<const int,double> > >' 'map<Int_t,Double_t>' 1 - spec u 'map<int,double,less<int>,allocator<pair<const int,double> > >' 'map<Int_t,Double_t>' 1 - specAn "
"u 'map<int,double,less<int>,allocator<pair<const int,double> > >' 'map<Int_t,Double_t>' 1 - specDy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FEFilter",753,G__EventDict_416_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<int,double,less<int>,allocator<pair<const int,double> > >' 'map<Int_t,Double_t>' 1 - spec1 D - 'Double_t' 0 - spec2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FADCSampling",1097,G__EventDict_416_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - spec1 S - - 0 - spec2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FADCSamplingSat",1393,G__EventDict_416_0_9, 121, -1, -1, 0, 3, 1, 1, 0, 
"D - 'Double_t' 0 - spec1 S - - 0 - spec2 "
"I - - 0 - spec3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDict_416_0_10, 85, G__get_linked_tagnum(&G__EventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PMT_MD::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDict_416_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PMT_MD::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDict_416_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PMT_MD::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDict_416_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PMT_MD::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__EventDict_416_0_14, 85, G__get_linked_tagnum(&G__EventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__EventDict_416_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__EventDict_416_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDict_416_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDict_416_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PMT_MD::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDict_416_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PMT_MD::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDict_416_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PMT_MD::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDict_416_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PMT_MD::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("PMT_MD", 481, G__EventDict_416_0_22, (int) ('i'), G__get_linked_tagnum(&G__EventDictLN_PMT_MD), -1, 0, 1, 1, 1, 0, "u 'PMT_MD' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PMT_MD", 607, G__EventDict_416_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EventDict_416_0_24, (int) ('u'), G__get_linked_tagnum(&G__EventDictLN_PMT_MD), -1, 1, 1, 1, 1, 0, "u 'PMT_MD' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHitStationMD(void) {
   /* HitStationMD */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDictLN_HitStationMD));
   G__memfunc_setup("HitStationMD",1176,G__EventDict_424_0_1, 105, G__get_linked_tagnum(&G__EventDictLN_HitStationMD), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HitStationMD",1176,G__EventDict_424_0_2, 105, G__get_linked_tagnum(&G__EventDictLN_HitStationMD), -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - id f - 'Float_t' 0 - north "
"f - 'Float_t' 0 - east f - 'Float_t' 0 - alt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HitStationMD",1176,G__EventDict_424_0_3, 105, G__get_linked_tagnum(&G__EventDictLN_HitStationMD), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - id f - 'Float_t' 0 - north "
"f - 'Float_t' 0 - east", "used to have an array of event cores", (void*) NULL, 0);
   G__memfunc_setup("WriteSamplingFactor",1957,G__EventDict_424_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - sampfact", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WritePE",672,G__EventDict_424_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - idpart i - 'Int_t' 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteADCBin",1004,G__EventDict_424_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - idpart i - 'Int_t' 0 - bin "
"d - 'Double_t' 0 - bincontent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteDoubleADCBin",1607,G__EventDict_424_0_7, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - idpart i - 'Int_t' 0 - bin "
"d - 'Double_t' 0 - bincontent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CountPart",928,G__EventDict_424_0_8, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - idpart d - 'Double_t' 0 - wpart_det "
"d - 'Double_t' 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SumADCTraces",1119,G__EventDict_424_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoDetSim",761,G__EventDict_424_0_10, 121, -1, -1, 0, 6, 1, 1, 0, 
"u 'string' - 0 - simmode d - - 0 - costheta_sh "
"d - - 0 - sintheta_sh d - - 0 - cosphi_sh "
"d - - 0 - sinphi_sh u 'SampStation' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteShortADCTraces",1861,G__EventDict_424_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoElecSim",853,G__EventDict_424_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTime0",747,G__EventDict_424_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTime0",747,G__EventDict_424_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - time0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SignalInVem",1085,G__EventDict_424_0_15, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadParticleInTank",1781,G__EventDict_424_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "U 'ParticleInTank' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoTrigSim",882,G__EventDict_424_0_17, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TestToT",695,G__EventDict_424_0_18, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TestThreshold",1357,G__EventDict_424_0_19, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - th", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChargeInVEM",1289,G__EventDict_424_0_20, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDict_424_0_21, 85, G__get_linked_tagnum(&G__EventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HitStationMD::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDict_424_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HitStationMD::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDict_424_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HitStationMD::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDict_424_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HitStationMD::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDict_424_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDict_424_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HitStationMD::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDict_424_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HitStationMD::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDict_424_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HitStationMD::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDict_424_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HitStationMD::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HitStationMD", 1176, G__EventDict_424_0_33, (int) ('i'), G__get_linked_tagnum(&G__EventDictLN_HitStationMD), -1, 0, 1, 1, 1, 0, "u 'HitStationMD' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HitStationMD", 1302, G__EventDict_424_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EventDict_424_0_35, (int) ('u'), G__get_linked_tagnum(&G__EventDictLN_HitStationMD), -1, 1, 1, 1, 1, 0, "u 'HitStationMD' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPMT_ED(void) {
   /* PMT_ED */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDictLN_PMT_ED));
   G__memfunc_setup("PMT_ED",473,G__EventDict_425_0_1, 105, G__get_linked_tagnum(&G__EventDictLN_PMT_ED), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__EventDict_425_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WritePE",672,G__EventDict_425_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - idpart i - 'Int_t' 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DirectLight",1107,G__EventDict_425_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - npe_direct", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoElecSim",853,G__EventDict_425_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PMTAmplification",1585,G__EventDict_425_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'map<int,double,less<int>,allocator<pair<const int,double> > >' 'map<Int_t,Double_t>' 1 - spec u 'map<int,double,less<int>,allocator<pair<const int,double> > >' 'map<Int_t,Double_t>' 1 - specAn "
"u 'map<int,double,less<int>,allocator<pair<const int,double> > >' 'map<Int_t,Double_t>' 1 - specDy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FEFilter",753,G__EventDict_425_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<int,double,less<int>,allocator<pair<const int,double> > >' 'map<Int_t,Double_t>' 1 - spec1 D - 'Double_t' 0 - spec2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FADCSampling",1097,G__EventDict_425_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - spec1 S - - 0 - spec2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FADCSamplingSat",1393,G__EventDict_425_0_9, 121, -1, -1, 0, 3, 1, 1, 0, 
"D - 'Double_t' 0 - spec1 S - - 0 - spec2 "
"I - - 0 - spec3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDict_425_0_10, 85, G__get_linked_tagnum(&G__EventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PMT_ED::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDict_425_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PMT_ED::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDict_425_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PMT_ED::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDict_425_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PMT_ED::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__EventDict_425_0_14, 85, G__get_linked_tagnum(&G__EventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__EventDict_425_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__EventDict_425_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDict_425_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDict_425_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PMT_ED::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDict_425_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PMT_ED::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDict_425_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PMT_ED::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDict_425_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PMT_ED::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("PMT_ED", 473, G__EventDict_425_0_22, (int) ('i'), G__get_linked_tagnum(&G__EventDictLN_PMT_ED), -1, 0, 1, 1, 1, 0, "u 'PMT_ED' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PMT_ED", 599, G__EventDict_425_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EventDict_425_0_24, (int) ('u'), G__get_linked_tagnum(&G__EventDictLN_PMT_ED), -1, 1, 1, 1, 1, 0, "u 'PMT_ED' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHitStationED(void) {
   /* HitStationED */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDictLN_HitStationED));
   G__memfunc_setup("HitStationED",1168,G__EventDict_426_0_1, 105, G__get_linked_tagnum(&G__EventDictLN_HitStationED), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HitStationED",1168,G__EventDict_426_0_2, 105, G__get_linked_tagnum(&G__EventDictLN_HitStationED), -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - id f - 'Float_t' 0 - north "
"f - 'Float_t' 0 - east f - 'Float_t' 0 - alt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HitStationED",1168,G__EventDict_426_0_3, 105, G__get_linked_tagnum(&G__EventDictLN_HitStationED), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - id f - 'Float_t' 0 - north "
"f - 'Float_t' 0 - east", "used to have an array of event cores", (void*) NULL, 0);
   G__memfunc_setup("WriteSamplingFactor",1957,G__EventDict_426_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - sampfact", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WritePE",672,G__EventDict_426_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - idpart i - 'Int_t' 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CountPart",928,G__EventDict_426_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - idpart d - 'Double_t' 0 - wpart_det "
"d - 'Double_t' 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoDetSim",761,G__EventDict_426_0_7, 121, -1, -1, 0, 6, 1, 1, 0, 
"u 'string' - 0 - simmode d - - 0 - costheta_sh "
"d - - 0 - sintheta_sh d - - 0 - cosphi_sh "
"d - - 0 - sinphi_sh u 'SampStation' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTime0",747,G__EventDict_426_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTime0",747,G__EventDict_426_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - time0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadParticleInScint",1896,G__EventDict_426_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "U 'ParticleInScint' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TestToT",695,G__EventDict_426_0_11, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TestThreshold",1357,G__EventDict_426_0_12, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - th", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoTrigSim",882,G__EventDict_426_0_13, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDict_426_0_14, 85, G__get_linked_tagnum(&G__EventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HitStationED::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDict_426_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HitStationED::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDict_426_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HitStationED::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDict_426_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HitStationED::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDict_426_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDict_426_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HitStationED::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDict_426_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HitStationED::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDict_426_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HitStationED::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDict_426_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HitStationED::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HitStationED", 1168, G__EventDict_426_0_26, (int) ('i'), G__get_linked_tagnum(&G__EventDictLN_HitStationED), -1, 0, 1, 1, 1, 0, "u 'HitStationED' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HitStationED", 1294, G__EventDict_426_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EventDict_426_0_28, (int) ('u'), G__get_linked_tagnum(&G__EventDictLN_HitStationED), -1, 1, 1, 1, 1, 0, "u 'HitStationED' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHitStationLightED(void) {
   /* HitStationLightED */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDictLN_HitStationLightED));
   G__memfunc_setup("HitStationLightED",1672,G__EventDict_427_0_1, 105, G__get_linked_tagnum(&G__EventDictLN_HitStationLightED), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HitStationLightED",1672,G__EventDict_427_0_2, 105, G__get_linked_tagnum(&G__EventDictLN_HitStationLightED), -1, 0, 1, 1, 1, 0, "u 'HitStationED' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDict_427_0_3, 85, G__get_linked_tagnum(&G__EventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HitStationLightED::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDict_427_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HitStationLightED::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDict_427_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HitStationLightED::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDict_427_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HitStationLightED::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDict_427_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDict_427_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HitStationLightED::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDict_427_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HitStationLightED::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDict_427_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HitStationLightED::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDict_427_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HitStationLightED::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HitStationLightED", 1672, G__EventDict_427_0_15, (int) ('i'), G__get_linked_tagnum(&G__EventDictLN_HitStationLightED), -1, 0, 1, 1, 1, 0, "u 'HitStationLightED' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HitStationLightED", 1798, G__EventDict_427_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EventDict_427_0_17, (int) ('u'), G__get_linked_tagnum(&G__EventDictLN_HitStationLightED), -1, 1, 1, 1, 1, 0, "u 'HitStationLightED' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEvent(void) {
   /* Event */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDictLN_Event));
   G__memfunc_setup("Event",514,G__EventDict_428_0_1, 105, G__get_linked_tagnum(&G__EventDictLN_Event), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Event",514,G__EventDict_428_0_2, 105, G__get_linked_tagnum(&G__EventDictLN_Event), -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - primary d - 'Double_t' 0 - energy "
"d - 'Double_t' 0 - theta d - 'Double_t' 0 - azim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Event",514,G__EventDict_428_0_3, 105, G__get_linked_tagnum(&G__EventDictLN_Event), -1, 0, 7, 1, 1, 0, 
"i - 'Int_t' 0 - primary d - 'Double_t' 0 - energy "
"d - 'Double_t' 0 - theta d - 'Double_t' 0 - azim "
"d - 'Double_t' 0 - xcore d - 'Double_t' 0 - ycore "
"d - 'Double_t' 0 - zcore", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Event",514,G__EventDict_428_0_4, 105, G__get_linked_tagnum(&G__EventDictLN_Event), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - primary d - 'Double_t' 0 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Event",514,G__EventDict_428_0_5, 105, G__get_linked_tagnum(&G__EventDictLN_Event), -1, 0, 8, 1, 1, 0, 
"i - 'Int_t' 0 - primary d - 'Double_t' 0 - energy "
"d - 'Double_t' 0 - theta d - 'Double_t' 0 - azim "
"d - 'Double_t' 0 - eas_avrg d - 'Double_t' 0 - eas_spread "
"d - 'Double_t' 0 - nor_avrg d - 'Double_t' 0 - nor_spread", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CountTanks",1034,G__EventDict_428_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CountScints",1149,G__EventDict_428_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTank",663,G__EventDict_428_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HitStationMD' - 0 - hst", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddScint",778,G__EventDict_428_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HitStationED' - 0 - hst2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDepth",801,G__EventDict_428_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - xmax d - 'Double_t' 0 - x0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoT3Sim",611,G__EventDict_428_0_11, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoT4Sim",612,G__EventDict_428_0_12, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDict_428_0_13, 85, G__get_linked_tagnum(&G__EventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Event::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDict_428_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Event::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDict_428_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Event::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDict_428_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Event::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDict_428_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDict_428_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Event::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDict_428_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Event::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDict_428_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Event::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDict_428_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Event::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Event", 514, G__EventDict_428_0_25, (int) ('i'), G__get_linked_tagnum(&G__EventDictLN_Event), -1, 0, 1, 1, 1, 0, "u 'Event' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Event", 640, G__EventDict_428_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EventDict_428_0_27, (int) ('u'), G__get_linked_tagnum(&G__EventDictLN_Event), -1, 1, 1, 1, 1, 0, "u 'Event' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEventRec(void) {
   /* EventRec */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDictLN_EventRec));
   G__memfunc_setup("CountTrigMDStaVEM",1600,G__EventDict_437_0_1, 105, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - threshold", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CountTrigMDStaMu",1562,G__EventDict_437_0_2, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - nmu", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CountTrigMDSta",1368,G__EventDict_437_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - th", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CountTrigEDSta",1360,G__EventDict_437_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - th", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EventRec",796,G__EventDict_437_0_5, 105, G__get_linked_tagnum(&G__EventDictLN_EventRec), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EventRec",796,G__EventDict_437_0_6, 105, G__get_linked_tagnum(&G__EventDictLN_EventRec), -1, 0, 1, 1, 1, 0, "u 'Event' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDict_437_0_7, 85, G__get_linked_tagnum(&G__EventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EventRec::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDict_437_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventRec::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDict_437_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EventRec::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDict_437_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EventRec::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDict_437_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDict_437_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventRec::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDict_437_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EventRec::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDict_437_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventRec::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDict_437_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EventRec::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EventRec", 796, G__EventDict_437_0_19, (int) ('i'), G__get_linked_tagnum(&G__EventDictLN_EventRec), -1, 0, 1, 1, 1, 0, "u 'EventRec' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EventRec", 922, G__EventDict_437_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EventDict_437_0_21, (int) ('u'), G__get_linked_tagnum(&G__EventDictLN_EventRec), -1, 1, 1, 1, 1, 0, "u 'EventRec' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncArray(void) {
   /* Array */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDictLN_Array));
   G__memfunc_setup("Array",511,G__EventDict_451_0_1, 105, G__get_linked_tagnum(&G__EventDictLN_Array), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__EventDict_451_0_2, 105, G__get_linked_tagnum(&G__EventDictLN_Array), -1, 0, 1, 1, 1, 0, "u 'vector<Station,allocator<Station> >' 'vector<Station>' 0 - tanklist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__EventDict_451_0_3, 105, G__get_linked_tagnum(&G__EventDictLN_Array), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - size i - - 0 - EDMD", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__EventDict_451_0_4, 105, G__get_linked_tagnum(&G__EventDictLN_Array), -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - theta d - 'Double_t' 0 - phi "
"d - 'Double_t' 0 - E0 d - 'Double_t' 0 - N0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Array",511,G__EventDict_451_0_5, 105, G__get_linked_tagnum(&G__EventDictLN_Array), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - arrayfilename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__EventDict_451_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'Station' - 0 - sta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Size",411,G__EventDict_451_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDict_451_0_8, 85, G__get_linked_tagnum(&G__EventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Array::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDict_451_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Array::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDict_451_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Array::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDict_451_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Array::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDict_451_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDict_451_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Array::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDict_451_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Array::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDict_451_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Array::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDict_451_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Array::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Array", 511, G__EventDict_451_0_20, (int) ('i'), G__get_linked_tagnum(&G__EventDictLN_Array), -1, 0, 1, 1, 1, 0, "u 'Array' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Array", 637, G__EventDict_451_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EventDict_451_0_22, (int) ('u'), G__get_linked_tagnum(&G__EventDictLN_Array), -1, 1, 1, 1, 1, 0, "u 'Array' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncEventDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalEventDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcEventDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__EventDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__EventDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__EventDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__EventDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__EventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__EventDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__EventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__EventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__EventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__EventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__EventDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR = { "map<int,int,less<int>,allocator<pair<const int,int> > >" , 99 , -1 };
G__linked_taginfo G__EventDictLN_Particle = { "Particle" , 99 , -1 };
G__linked_taginfo G__EventDictLN_ParticleInTank = { "ParticleInTank" , 99 , -1 };
G__linked_taginfo G__EventDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__EventDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__EventDictLN_ParticleInScint = { "ParticleInScint" , 99 , -1 };
G__linked_taginfo G__EventDictLN_Station = { "Station" , 99 , -1 };
G__linked_taginfo G__EventDictLN_SampStation = { "SampStation" , 99 , -1 };
G__linked_taginfo G__EventDictLN_vectorlEParticlecOallocatorlEParticlegRsPgR = { "vector<Particle,allocator<Particle> >" , 99 , -1 };
G__linked_taginfo G__EventDictLN_reverse_iteratorlEvectorlEParticlecOallocatorlEParticlegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Particle,allocator<Particle> >::iterator>" , 99 , -1 };
G__linked_taginfo G__EventDictLN_PMT_MD = { "PMT_MD" , 99 , -1 };
G__linked_taginfo G__EventDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR = { "map<int,double,less<int>,allocator<pair<const int,double> > >" , 99 , -1 };
G__linked_taginfo G__EventDictLN_HitStationMD = { "HitStationMD" , 99 , -1 };
G__linked_taginfo G__EventDictLN_PMT_ED = { "PMT_ED" , 99 , -1 };
G__linked_taginfo G__EventDictLN_HitStationED = { "HitStationED" , 99 , -1 };
G__linked_taginfo G__EventDictLN_HitStationLightED = { "HitStationLightED" , 99 , -1 };
G__linked_taginfo G__EventDictLN_Event = { "Event" , 99 , -1 };
G__linked_taginfo G__EventDictLN_vectorlEHitStationEDcOallocatorlEHitStationEDgRsPgR = { "vector<HitStationED,allocator<HitStationED> >" , 99 , -1 };
G__linked_taginfo G__EventDictLN_reverse_iteratorlEvectorlEHitStationEDcOallocatorlEHitStationEDgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HitStationED,allocator<HitStationED> >::iterator>" , 99 , -1 };
G__linked_taginfo G__EventDictLN_vectorlEHitStationMDcOallocatorlEHitStationMDgRsPgR = { "vector<HitStationMD,allocator<HitStationMD> >" , 99 , -1 };
G__linked_taginfo G__EventDictLN_reverse_iteratorlEvectorlEHitStationMDcOallocatorlEHitStationMDgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HitStationMD,allocator<HitStationMD> >::iterator>" , 99 , -1 };
G__linked_taginfo G__EventDictLN_EventRec = { "EventRec" , 99 , -1 };
G__linked_taginfo G__EventDictLN_maplEfloatcOintcOlesslEfloatgRcOallocatorlEpairlEconstsPfloatcOintgRsPgRsPgR = { "map<float,int,less<float>,allocator<pair<const float,int> > >" , 99 , -1 };
G__linked_taginfo G__EventDictLN_vectorlEHitStationLightEDcOallocatorlEHitStationLightEDgRsPgR = { "vector<HitStationLightED,allocator<HitStationLightED> >" , 99 , -1 };
G__linked_taginfo G__EventDictLN_reverse_iteratorlEvectorlEHitStationLightEDcOallocatorlEHitStationLightEDgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HitStationLightED,allocator<HitStationLightED> >::iterator>" , 99 , -1 };
G__linked_taginfo G__EventDictLN_Array = { "Array" , 99 , -1 };
G__linked_taginfo G__EventDictLN_vectorlEStationcOallocatorlEStationgRsPgR = { "vector<Station,allocator<Station> >" , 99 , -1 };
G__linked_taginfo G__EventDictLN_reverse_iteratorlEvectorlEStationcOallocatorlEStationgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Station,allocator<Station> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableEventDict() {
  G__EventDictLN_TClass.tagnum = -1 ;
  G__EventDictLN_TBuffer.tagnum = -1 ;
  G__EventDictLN_TMemberInspector.tagnum = -1 ;
  G__EventDictLN_TObject.tagnum = -1 ;
  G__EventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__EventDictLN_string.tagnum = -1 ;
  G__EventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__EventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__EventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EventDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__EventDictLN_Particle.tagnum = -1 ;
  G__EventDictLN_ParticleInTank.tagnum = -1 ;
  G__EventDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__EventDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EventDictLN_ParticleInScint.tagnum = -1 ;
  G__EventDictLN_Station.tagnum = -1 ;
  G__EventDictLN_SampStation.tagnum = -1 ;
  G__EventDictLN_vectorlEParticlecOallocatorlEParticlegRsPgR.tagnum = -1 ;
  G__EventDictLN_reverse_iteratorlEvectorlEParticlecOallocatorlEParticlegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EventDictLN_PMT_MD.tagnum = -1 ;
  G__EventDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__EventDictLN_HitStationMD.tagnum = -1 ;
  G__EventDictLN_PMT_ED.tagnum = -1 ;
  G__EventDictLN_HitStationED.tagnum = -1 ;
  G__EventDictLN_HitStationLightED.tagnum = -1 ;
  G__EventDictLN_Event.tagnum = -1 ;
  G__EventDictLN_vectorlEHitStationEDcOallocatorlEHitStationEDgRsPgR.tagnum = -1 ;
  G__EventDictLN_reverse_iteratorlEvectorlEHitStationEDcOallocatorlEHitStationEDgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EventDictLN_vectorlEHitStationMDcOallocatorlEHitStationMDgRsPgR.tagnum = -1 ;
  G__EventDictLN_reverse_iteratorlEvectorlEHitStationMDcOallocatorlEHitStationMDgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EventDictLN_EventRec.tagnum = -1 ;
  G__EventDictLN_maplEfloatcOintcOlesslEfloatgRcOallocatorlEpairlEconstsPfloatcOintgRsPgRsPgR.tagnum = -1 ;
  G__EventDictLN_vectorlEHitStationLightEDcOallocatorlEHitStationLightEDgRsPgR.tagnum = -1 ;
  G__EventDictLN_reverse_iteratorlEvectorlEHitStationLightEDcOallocatorlEHitStationLightEDgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EventDictLN_Array.tagnum = -1 ;
  G__EventDictLN_vectorlEStationcOallocatorlEStationgRsPgR.tagnum = -1 ;
  G__EventDictLN_reverse_iteratorlEvectorlEStationcOallocatorlEStationgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableEventDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__EventDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__EventDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__EventDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__EventDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__EventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__EventDictLN_string);
   G__get_linked_tagnum_fwd(&G__EventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__EventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__EventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__EventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__EventDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDictLN_Particle),sizeof(Particle),-1,324864,(char*)NULL,G__setup_memvarParticle,G__setup_memfuncParticle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDictLN_ParticleInTank),sizeof(ParticleInTank),-1,324864,(char*)NULL,G__setup_memvarParticleInTank,G__setup_memfuncParticleInTank);
   G__get_linked_tagnum_fwd(&G__EventDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__EventDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDictLN_ParticleInScint),sizeof(ParticleInScint),-1,324864,(char*)NULL,G__setup_memvarParticleInScint,G__setup_memfuncParticleInScint);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDictLN_Station),sizeof(Station),-1,296192,(char*)NULL,G__setup_memvarStation,G__setup_memfuncStation);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDictLN_SampStation),sizeof(SampStation),-1,296192,(char*)NULL,G__setup_memvarSampStation,G__setup_memfuncSampStation);
   G__get_linked_tagnum_fwd(&G__EventDictLN_vectorlEParticlecOallocatorlEParticlegRsPgR);
   G__get_linked_tagnum_fwd(&G__EventDictLN_reverse_iteratorlEvectorlEParticlecOallocatorlEParticlegRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDictLN_PMT_MD),sizeof(PMT_MD),-1,263424,(char*)NULL,G__setup_memvarPMT_MD,G__setup_memfuncPMT_MD);
   G__get_linked_tagnum_fwd(&G__EventDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDictLN_HitStationMD),sizeof(HitStationMD),-1,324864,(char*)NULL,G__setup_memvarHitStationMD,G__setup_memfuncHitStationMD);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDictLN_PMT_ED),sizeof(PMT_ED),-1,263424,(char*)NULL,G__setup_memvarPMT_ED,G__setup_memfuncPMT_ED);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDictLN_HitStationED),sizeof(HitStationED),-1,324864,(char*)NULL,G__setup_memvarHitStationED,G__setup_memfuncHitStationED);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDictLN_HitStationLightED),sizeof(HitStationLightED),-1,324864,(char*)NULL,G__setup_memvarHitStationLightED,G__setup_memfuncHitStationLightED);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDictLN_Event),sizeof(Event),-1,324864,(char*)NULL,G__setup_memvarEvent,G__setup_memfuncEvent);
   G__get_linked_tagnum_fwd(&G__EventDictLN_vectorlEHitStationEDcOallocatorlEHitStationEDgRsPgR);
   G__get_linked_tagnum_fwd(&G__EventDictLN_reverse_iteratorlEvectorlEHitStationEDcOallocatorlEHitStationEDgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__EventDictLN_vectorlEHitStationMDcOallocatorlEHitStationMDgRsPgR);
   G__get_linked_tagnum_fwd(&G__EventDictLN_reverse_iteratorlEvectorlEHitStationMDcOallocatorlEHitStationMDgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDictLN_EventRec),sizeof(EventRec),-1,324864,(char*)NULL,G__setup_memvarEventRec,G__setup_memfuncEventRec);
   G__get_linked_tagnum_fwd(&G__EventDictLN_maplEfloatcOintcOlesslEfloatgRcOallocatorlEpairlEconstsPfloatcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__EventDictLN_vectorlEHitStationLightEDcOallocatorlEHitStationLightEDgRsPgR);
   G__get_linked_tagnum_fwd(&G__EventDictLN_reverse_iteratorlEvectorlEHitStationLightEDcOallocatorlEHitStationLightEDgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDictLN_Array),sizeof(Array),-1,324864,(char*)NULL,G__setup_memvarArray,G__setup_memfuncArray);
   G__get_linked_tagnum_fwd(&G__EventDictLN_vectorlEStationcOallocatorlEStationgRsPgR);
   G__get_linked_tagnum_fwd(&G__EventDictLN_reverse_iteratorlEvectorlEStationcOallocatorlEStationgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupEventDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupEventDict()");
  G__set_cpp_environmentEventDict();
  G__cpp_setup_tagtableEventDict();

  G__cpp_setup_inheritanceEventDict();

  G__cpp_setup_typetableEventDict();

  G__cpp_setup_memvarEventDict();

  G__cpp_setup_memfuncEventDict();
  G__cpp_setup_globalEventDict();
  G__cpp_setup_funcEventDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncEventDict();
  return;
}
class G__cpp_setup_initEventDict {
  public:
    G__cpp_setup_initEventDict() { G__add_setup_func("EventDict",(G__incsetup)(&G__cpp_setupEventDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initEventDict() { G__remove_setup_func("EventDict"); }
};
G__cpp_setup_initEventDict G__cpp_setup_initializerEventDict;

