//
// File generated by /CERN/root/bin/rootcint at Wed Apr  5 17:05:53 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME ShowerROOTDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "ShowerROOTDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void Header_ROOT_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_Header_ROOT(void *p);
   static void deleteArray_Header_ROOT(void *p);
   static void destruct_Header_ROOT(void *p);
   static void streamer_Header_ROOT(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Header_ROOT*)
   {
      ::Header_ROOT *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Header_ROOT >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Header_ROOT", ::Header_ROOT::Class_Version(), "./../src/Header_ROOT.h", 29,
                  typeid(::Header_ROOT), DefineBehavior(ptr, ptr),
                  &::Header_ROOT::Dictionary, isa_proxy, 0,
                  sizeof(::Header_ROOT) );
      instance.SetDelete(&delete_Header_ROOT);
      instance.SetDeleteArray(&deleteArray_Header_ROOT);
      instance.SetDestructor(&destruct_Header_ROOT);
      instance.SetStreamerFunc(&streamer_Header_ROOT);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Header_ROOT*)
   {
      return GenerateInitInstanceLocal((::Header_ROOT*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Header_ROOT*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void PartGrnd_ROOT_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_PartGrnd_ROOT(void *p = 0);
   static void *newArray_PartGrnd_ROOT(Long_t size, void *p);
   static void delete_PartGrnd_ROOT(void *p);
   static void deleteArray_PartGrnd_ROOT(void *p);
   static void destruct_PartGrnd_ROOT(void *p);
   static void streamer_PartGrnd_ROOT(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::PartGrnd_ROOT*)
   {
      ::PartGrnd_ROOT *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PartGrnd_ROOT >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PartGrnd_ROOT", ::PartGrnd_ROOT::Class_Version(), "./../src/PartGrnd_ROOT.h", 27,
                  typeid(::PartGrnd_ROOT), DefineBehavior(ptr, ptr),
                  &::PartGrnd_ROOT::Dictionary, isa_proxy, 0,
                  sizeof(::PartGrnd_ROOT) );
      instance.SetNew(&new_PartGrnd_ROOT);
      instance.SetNewArray(&newArray_PartGrnd_ROOT);
      instance.SetDelete(&delete_PartGrnd_ROOT);
      instance.SetDeleteArray(&deleteArray_PartGrnd_ROOT);
      instance.SetDestructor(&destruct_PartGrnd_ROOT);
      instance.SetStreamerFunc(&streamer_PartGrnd_ROOT);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::PartGrnd_ROOT*)
   {
      return GenerateInitInstanceLocal((::PartGrnd_ROOT*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PartGrnd_ROOT*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void HeaderCorsika_ROOT_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HeaderCorsika_ROOT(void *p = 0);
   static void *newArray_HeaderCorsika_ROOT(Long_t size, void *p);
   static void delete_HeaderCorsika_ROOT(void *p);
   static void deleteArray_HeaderCorsika_ROOT(void *p);
   static void destruct_HeaderCorsika_ROOT(void *p);
   static void streamer_HeaderCorsika_ROOT(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HeaderCorsika_ROOT*)
   {
      ::HeaderCorsika_ROOT *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HeaderCorsika_ROOT >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HeaderCorsika_ROOT", ::HeaderCorsika_ROOT::Class_Version(), "./../src/HeaderCorsika_ROOT.h", 22,
                  typeid(::HeaderCorsika_ROOT), DefineBehavior(ptr, ptr),
                  &::HeaderCorsika_ROOT::Dictionary, isa_proxy, 0,
                  sizeof(::HeaderCorsika_ROOT) );
      instance.SetNew(&new_HeaderCorsika_ROOT);
      instance.SetNewArray(&newArray_HeaderCorsika_ROOT);
      instance.SetDelete(&delete_HeaderCorsika_ROOT);
      instance.SetDeleteArray(&deleteArray_HeaderCorsika_ROOT);
      instance.SetDestructor(&destruct_HeaderCorsika_ROOT);
      instance.SetStreamerFunc(&streamer_HeaderCorsika_ROOT);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HeaderCorsika_ROOT*)
   {
      return GenerateInitInstanceLocal((::HeaderCorsika_ROOT*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HeaderCorsika_ROOT*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ShowerGrnd_ROOT_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_ShowerGrnd_ROOT(void *p);
   static void deleteArray_ShowerGrnd_ROOT(void *p);
   static void destruct_ShowerGrnd_ROOT(void *p);
   static void streamer_ShowerGrnd_ROOT(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ShowerGrnd_ROOT*)
   {
      ::ShowerGrnd_ROOT *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ShowerGrnd_ROOT >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ShowerGrnd_ROOT", ::ShowerGrnd_ROOT::Class_Version(), "./../src/ShowerGrnd_ROOT.h", 22,
                  typeid(::ShowerGrnd_ROOT), DefineBehavior(ptr, ptr),
                  &::ShowerGrnd_ROOT::Dictionary, isa_proxy, 0,
                  sizeof(::ShowerGrnd_ROOT) );
      instance.SetDelete(&delete_ShowerGrnd_ROOT);
      instance.SetDeleteArray(&deleteArray_ShowerGrnd_ROOT);
      instance.SetDestructor(&destruct_ShowerGrnd_ROOT);
      instance.SetStreamerFunc(&streamer_ShowerGrnd_ROOT);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ShowerGrnd_ROOT*)
   {
      return GenerateInitInstanceLocal((::ShowerGrnd_ROOT*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ShowerGrnd_ROOT*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ShowerProf_ROOT_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ShowerProf_ROOT(void *p = 0);
   static void *newArray_ShowerProf_ROOT(Long_t size, void *p);
   static void delete_ShowerProf_ROOT(void *p);
   static void deleteArray_ShowerProf_ROOT(void *p);
   static void destruct_ShowerProf_ROOT(void *p);
   static void streamer_ShowerProf_ROOT(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ShowerProf_ROOT*)
   {
      ::ShowerProf_ROOT *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ShowerProf_ROOT >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ShowerProf_ROOT", ::ShowerProf_ROOT::Class_Version(), "./../src/ShowerProf_ROOT.h", 42,
                  typeid(::ShowerProf_ROOT), DefineBehavior(ptr, ptr),
                  &::ShowerProf_ROOT::Dictionary, isa_proxy, 1,
                  sizeof(::ShowerProf_ROOT) );
      instance.SetNew(&new_ShowerProf_ROOT);
      instance.SetNewArray(&newArray_ShowerProf_ROOT);
      instance.SetDelete(&delete_ShowerProf_ROOT);
      instance.SetDeleteArray(&deleteArray_ShowerProf_ROOT);
      instance.SetDestructor(&destruct_ShowerProf_ROOT);
      instance.SetStreamerFunc(&streamer_ShowerProf_ROOT);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ShowerProf_ROOT*)
   {
      return GenerateInitInstanceLocal((::ShowerProf_ROOT*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ShowerProf_ROOT*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Shower_ROOT_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Shower_ROOT(void *p = 0);
   static void *newArray_Shower_ROOT(Long_t size, void *p);
   static void delete_Shower_ROOT(void *p);
   static void deleteArray_Shower_ROOT(void *p);
   static void destruct_Shower_ROOT(void *p);
   static void streamer_Shower_ROOT(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Shower_ROOT*)
   {
      ::Shower_ROOT *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Shower_ROOT >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Shower_ROOT", ::Shower_ROOT::Class_Version(), "./../src/Shower_ROOT.h", 24,
                  typeid(::Shower_ROOT), DefineBehavior(ptr, ptr),
                  &::Shower_ROOT::Dictionary, isa_proxy, 0,
                  sizeof(::Shower_ROOT) );
      instance.SetNew(&new_Shower_ROOT);
      instance.SetNewArray(&newArray_Shower_ROOT);
      instance.SetDelete(&delete_Shower_ROOT);
      instance.SetDeleteArray(&deleteArray_Shower_ROOT);
      instance.SetDestructor(&destruct_Shower_ROOT);
      instance.SetStreamerFunc(&streamer_Shower_ROOT);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Shower_ROOT*)
   {
      return GenerateInitInstanceLocal((::Shower_ROOT*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Shower_ROOT*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
atomic_TClass_ptr Header_ROOT::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Header_ROOT::Class_Name()
{
   return "Header_ROOT";
}

//______________________________________________________________________________
const char *Header_ROOT::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Header_ROOT*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Header_ROOT::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Header_ROOT*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Header_ROOT::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Header_ROOT*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Header_ROOT::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Header_ROOT*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr PartGrnd_ROOT::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PartGrnd_ROOT::Class_Name()
{
   return "PartGrnd_ROOT";
}

//______________________________________________________________________________
const char *PartGrnd_ROOT::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PartGrnd_ROOT*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PartGrnd_ROOT::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PartGrnd_ROOT*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PartGrnd_ROOT::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PartGrnd_ROOT*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PartGrnd_ROOT::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PartGrnd_ROOT*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HeaderCorsika_ROOT::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HeaderCorsika_ROOT::Class_Name()
{
   return "HeaderCorsika_ROOT";
}

//______________________________________________________________________________
const char *HeaderCorsika_ROOT::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HeaderCorsika_ROOT*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HeaderCorsika_ROOT::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HeaderCorsika_ROOT*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HeaderCorsika_ROOT::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HeaderCorsika_ROOT*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HeaderCorsika_ROOT::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HeaderCorsika_ROOT*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ShowerGrnd_ROOT::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ShowerGrnd_ROOT::Class_Name()
{
   return "ShowerGrnd_ROOT";
}

//______________________________________________________________________________
const char *ShowerGrnd_ROOT::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ShowerGrnd_ROOT*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ShowerGrnd_ROOT::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ShowerGrnd_ROOT*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ShowerGrnd_ROOT::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ShowerGrnd_ROOT*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ShowerGrnd_ROOT::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ShowerGrnd_ROOT*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ShowerProf_ROOT::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ShowerProf_ROOT::Class_Name()
{
   return "ShowerProf_ROOT";
}

//______________________________________________________________________________
const char *ShowerProf_ROOT::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ShowerProf_ROOT*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ShowerProf_ROOT::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ShowerProf_ROOT*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ShowerProf_ROOT::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ShowerProf_ROOT*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ShowerProf_ROOT::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ShowerProf_ROOT*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Shower_ROOT::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Shower_ROOT::Class_Name()
{
   return "Shower_ROOT";
}

//______________________________________________________________________________
const char *Shower_ROOT::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Shower_ROOT*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Shower_ROOT::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Shower_ROOT*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Shower_ROOT::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Shower_ROOT*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Shower_ROOT::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Shower_ROOT*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void PartGrnd_ROOT::Streamer(TBuffer &R__b)
{
   // Stream an object of class PartGrnd_ROOT.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> Id;
      R__b >> UX;
      R__b >> UY;
      R__b >> UZ;
      R__b >> X;
      R__b >> Y;
      R__b >> Z;
      R__b >> T;
      R__b >> W;
      R__b >> E;
      R__b.CheckByteCount(R__s, R__c, PartGrnd_ROOT::IsA());
   } else {
      R__c = R__b.WriteVersion(PartGrnd_ROOT::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << Id;
      R__b << UX;
      R__b << UY;
      R__b << UZ;
      R__b << X;
      R__b << Y;
      R__b << Z;
      R__b << T;
      R__b << W;
      R__b << E;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void PartGrnd_ROOT::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class PartGrnd_ROOT.
      TClass *R__cl = ::PartGrnd_ROOT::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Id", &Id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UX", &UX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UY", &UY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UZ", &UZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "X", &X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Y", &Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Z", &Z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T", &T);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "W", &W);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E", &E);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_PartGrnd_ROOT(void *p) {
      return  p ? new(p) ::PartGrnd_ROOT : new ::PartGrnd_ROOT;
   }
   static void *newArray_PartGrnd_ROOT(Long_t nElements, void *p) {
      return p ? new(p) ::PartGrnd_ROOT[nElements] : new ::PartGrnd_ROOT[nElements];
   }
   // Wrapper around operator delete
   static void delete_PartGrnd_ROOT(void *p) {
      delete ((::PartGrnd_ROOT*)p);
   }
   static void deleteArray_PartGrnd_ROOT(void *p) {
      delete [] ((::PartGrnd_ROOT*)p);
   }
   static void destruct_PartGrnd_ROOT(void *p) {
      typedef ::PartGrnd_ROOT current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_PartGrnd_ROOT(TBuffer &buf, void *obj) {
      ((::PartGrnd_ROOT*)obj)->::PartGrnd_ROOT::Streamer(buf);
   }
} // end of namespace ROOT for class ::PartGrnd_ROOT

//______________________________________________________________________________
void Header_ROOT::Streamer(TBuffer &R__b)
{
   // Stream an object of class Header_ROOT.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      void *ptr_ProgFlag = (void*)&ProgFlag;
      R__b >> *reinterpret_cast<Int_t*>(ptr_ProgFlag);
      R__b.ReadStaticArray((char*)MotherProgram);
      R__b.ReadStaticArray((char*)ShowerName);
      R__b.CheckByteCount(R__s, R__c, Header_ROOT::IsA());
   } else {
      R__c = R__b.WriteVersion(Header_ROOT::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << (Int_t)ProgFlag;
      R__b.WriteArray(MotherProgram, 50);
      R__b.WriteArray(ShowerName, 10);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void Header_ROOT::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Header_ROOT.
      TClass *R__cl = ::Header_ROOT::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ProgFlag", &ProgFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MotherProgram[50]", MotherProgram);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ShowerName[10]", ShowerName);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_Header_ROOT(void *p) {
      delete ((::Header_ROOT*)p);
   }
   static void deleteArray_Header_ROOT(void *p) {
      delete [] ((::Header_ROOT*)p);
   }
   static void destruct_Header_ROOT(void *p) {
      typedef ::Header_ROOT current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_Header_ROOT(TBuffer &buf, void *obj) {
      ((::Header_ROOT*)obj)->::Header_ROOT::Streamer(buf);
   }
} // end of namespace ROOT for class ::Header_ROOT

//______________________________________________________________________________
void HeaderCorsika_ROOT::Streamer(TBuffer &R__b)
{
   // Stream an object of class HeaderCorsika_ROOT.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      Header_ROOT::Streamer(R__b);
      R__b.ReadStaticArray((char*)DateOfCreation);
      R__b >> NEv;
      R__b >> PrimaryType;
      R__b >> PrimEnGev;
      R__b >> StartAlt;
      R__b >> NbOfFirstTarg;
      R__b >> ZcoordFI;
      R__b >> PrimPx;
      R__b >> PrimPy;
      R__b >> PrimPz;
      R__b >> ZenAng;
      R__b >> AzAng;
      R__b >> NDRNS;
      R__b.ReadStaticArray((unsigned int*)ISSI);
      R__b.ReadStaticArray((unsigned int*)NOFRCM);
      R__b.ReadStaticArray((unsigned int*)NOFRCO);
      R__b >> NObsL;
      R__b.ReadStaticArray((float*)HObsL);
      R__b >> CHKG;
      R__b >> CMKG;
      R__b >> CEKG;
      R__b >> CPKG;
      R__b >> NFLAIN;
      R__b >> NFLDIF;
      R__b >> NFLPI0;
      R__b >> NFLPIF;
      R__b >> NFLCHE;
      R__b >> NFRAGM;
      R__b >> EMFx;
      R__b >> EMFz;
      R__b >> EGS4;
      R__b >> NKG;
      R__b >> GHEISHA;
      R__b >> VENUS;
      R__b >> CERENKOV;
      R__b >> NEUTRINO;
      R__b >> CURVED;
      R__b >> SIBYLL;
      R__b >> SIBYLLC;
      R__b >> QGSJET;
      R__b >> QGSJETC;
      R__b >> DPMJET;
      R__b >> DPMJETC;
      R__b >> VENUSC;
      R__b >> MUSF;
      R__b >> EFRCTHN;
      R__b >> NKGRD;
      R__b >> WNPh;
      R__b >> WNEl;
      R__b >> WNHad;
      R__b >> WNMu;
      R__b >> WNPart;
      R__b >> NbPart;
      R__b >> NbWPart;
      R__b >> NbGAM;
      R__b >> NbWGAM;
      R__b >> NbEm;
      R__b >> NbWEm;
      R__b >> NbEp;
      R__b >> NbWEp;
      R__b >> NbMUp;
      R__b >> NbWMUp;
      R__b >> NbMUm;
      R__b >> NbWMUm;
      R__b >> NbHad;
      R__b >> NbWHad;
      R__b.ReadStaticArray((float*)LDX1);
      R__b.ReadStaticArray((float*)LDY1);
      R__b.ReadStaticArray((float*)LDXY1);
      R__b.ReadStaticArray((float*)LDYX1);
      R__b.ReadStaticArray((float*)LDX2);
      R__b.ReadStaticArray((float*)LDY2);
      R__b.ReadStaticArray((float*)LDXY2);
      R__b.ReadStaticArray((float*)LDYX2);
      R__b.ReadStaticArray((float*)EN);
      R__b.ReadStaticArray((float*)Ag);
      R__b.ReadStaticArray((float*)DED);
      R__b.ReadStaticArray((float*)LAg1);
      R__b.ReadStaticArray((float*)HLEg);
      R__b.ReadStaticArray((float*)HLEc);
      R__b.ReadStaticArray((float*)DB);
      R__b.ReadStaticArray((float*)LAg2);
      R__b.ReadStaticArray((float*)PARLGDC);
      R__b >> CHI2LD;
      R__b >> TimeOffset;
      R__b.CheckByteCount(R__s, R__c, HeaderCorsika_ROOT::IsA());
   } else {
      R__c = R__b.WriteVersion(HeaderCorsika_ROOT::IsA(), kTRUE);
      Header_ROOT::Streamer(R__b);
      R__b.WriteArray(DateOfCreation, 50);
      R__b << NEv;
      R__b << PrimaryType;
      R__b << PrimEnGev;
      R__b << StartAlt;
      R__b << NbOfFirstTarg;
      R__b << ZcoordFI;
      R__b << PrimPx;
      R__b << PrimPy;
      R__b << PrimPz;
      R__b << ZenAng;
      R__b << AzAng;
      R__b << NDRNS;
      R__b.WriteArray(ISSI, 10);
      R__b.WriteArray(NOFRCM, 10);
      R__b.WriteArray(NOFRCO, 10);
      R__b << NObsL;
      R__b.WriteArray(HObsL, 10);
      R__b << CHKG;
      R__b << CMKG;
      R__b << CEKG;
      R__b << CPKG;
      R__b << NFLAIN;
      R__b << NFLDIF;
      R__b << NFLPI0;
      R__b << NFLPIF;
      R__b << NFLCHE;
      R__b << NFRAGM;
      R__b << EMFx;
      R__b << EMFz;
      R__b << EGS4;
      R__b << NKG;
      R__b << GHEISHA;
      R__b << VENUS;
      R__b << CERENKOV;
      R__b << NEUTRINO;
      R__b << CURVED;
      R__b << SIBYLL;
      R__b << SIBYLLC;
      R__b << QGSJET;
      R__b << QGSJETC;
      R__b << DPMJET;
      R__b << DPMJETC;
      R__b << VENUSC;
      R__b << MUSF;
      R__b << EFRCTHN;
      R__b << NKGRD;
      R__b << WNPh;
      R__b << WNEl;
      R__b << WNHad;
      R__b << WNMu;
      R__b << WNPart;
      R__b << NbPart;
      R__b << NbWPart;
      R__b << NbGAM;
      R__b << NbWGAM;
      R__b << NbEm;
      R__b << NbWEm;
      R__b << NbEp;
      R__b << NbWEp;
      R__b << NbMUp;
      R__b << NbWMUp;
      R__b << NbMUm;
      R__b << NbWMUm;
      R__b << NbHad;
      R__b << NbWHad;
      R__b.WriteArray(LDX1, 21);
      R__b.WriteArray(LDY1, 21);
      R__b.WriteArray(LDXY1, 21);
      R__b.WriteArray(LDYX1, 21);
      R__b.WriteArray(LDX2, 21);
      R__b.WriteArray(LDY2, 21);
      R__b.WriteArray(LDXY2, 21);
      R__b.WriteArray(LDYX2, 21);
      R__b.WriteArray(EN, 10);
      R__b.WriteArray(Ag, 10);
      R__b.WriteArray(DED, 10);
      R__b.WriteArray(LAg1, 10);
      R__b.WriteArray(HLEg, 10);
      R__b.WriteArray(HLEc, 10);
      R__b.WriteArray(DB, 10);
      R__b.WriteArray(LAg2, 10);
      R__b.WriteArray(PARLGDC, 6);
      R__b << CHI2LD;
      R__b << TimeOffset;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HeaderCorsika_ROOT::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HeaderCorsika_ROOT.
      TClass *R__cl = ::HeaderCorsika_ROOT::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DateOfCreation[50]", DateOfCreation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEv", &NEv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PrimaryType", &PrimaryType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PrimEnGev", &PrimEnGev);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StartAlt", &StartAlt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NbOfFirstTarg", &NbOfFirstTarg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ZcoordFI", &ZcoordFI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PrimPx", &PrimPx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PrimPy", &PrimPy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PrimPz", &PrimPz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ZenAng", &ZenAng);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AzAng", &AzAng);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NDRNS", &NDRNS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ISSI[10]", ISSI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NOFRCM[10]", NOFRCM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NOFRCO[10]", NOFRCO);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NObsL", &NObsL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HObsL[10]", HObsL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CHKG", &CHKG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CMKG", &CMKG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CEKG", &CEKG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CPKG", &CPKG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NFLAIN", &NFLAIN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NFLDIF", &NFLDIF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NFLPI0", &NFLPI0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NFLPIF", &NFLPIF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NFLCHE", &NFLCHE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NFRAGM", &NFRAGM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMFx", &EMFx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMFz", &EMFz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EGS4", &EGS4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NKG", &NKG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GHEISHA", &GHEISHA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "VENUS", &VENUS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CERENKOV", &CERENKOV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEUTRINO", &NEUTRINO);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CURVED", &CURVED);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SIBYLL", &SIBYLL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SIBYLLC", &SIBYLLC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "QGSJET", &QGSJET);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "QGSJETC", &QGSJETC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DPMJET", &DPMJET);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DPMJETC", &DPMJETC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "VENUSC", &VENUSC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MUSF", &MUSF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EFRCTHN", &EFRCTHN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NKGRD", &NKGRD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "WNPh", &WNPh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "WNEl", &WNEl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "WNHad", &WNHad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "WNMu", &WNMu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "WNPart", &WNPart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NbPart", &NbPart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NbWPart", &NbWPart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NbGAM", &NbGAM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NbWGAM", &NbWGAM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NbEm", &NbEm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NbWEm", &NbWEm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NbEp", &NbEp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NbWEp", &NbWEp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NbMUp", &NbMUp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NbWMUp", &NbWMUp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NbMUm", &NbMUm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NbWMUm", &NbWMUm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NbHad", &NbHad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NbWHad", &NbWHad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LDX1[21]", LDX1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LDY1[21]", LDY1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LDXY1[21]", LDXY1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LDYX1[21]", LDYX1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LDX2[21]", LDX2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LDY2[21]", LDY2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LDXY2[21]", LDXY2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LDYX2[21]", LDYX2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EN[10]", EN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ag[10]", Ag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DED[10]", DED);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LAg1[10]", LAg1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HLEg[10]", HLEg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HLEc[10]", HLEc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DB[10]", DB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LAg2[10]", LAg2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PARLGDC[6]", PARLGDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CHI2LD", &CHI2LD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TimeOffset", &TimeOffset);
      Header_ROOT::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_HeaderCorsika_ROOT(void *p) {
      return  p ? new(p) ::HeaderCorsika_ROOT : new ::HeaderCorsika_ROOT;
   }
   static void *newArray_HeaderCorsika_ROOT(Long_t nElements, void *p) {
      return p ? new(p) ::HeaderCorsika_ROOT[nElements] : new ::HeaderCorsika_ROOT[nElements];
   }
   // Wrapper around operator delete
   static void delete_HeaderCorsika_ROOT(void *p) {
      delete ((::HeaderCorsika_ROOT*)p);
   }
   static void deleteArray_HeaderCorsika_ROOT(void *p) {
      delete [] ((::HeaderCorsika_ROOT*)p);
   }
   static void destruct_HeaderCorsika_ROOT(void *p) {
      typedef ::HeaderCorsika_ROOT current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HeaderCorsika_ROOT(TBuffer &buf, void *obj) {
      ((::HeaderCorsika_ROOT*)obj)->::HeaderCorsika_ROOT::Streamer(buf);
   }
} // end of namespace ROOT for class ::HeaderCorsika_ROOT

//______________________________________________________________________________
void Shower_ROOT::Streamer(TBuffer &R__b)
{
   // Stream an object of class Shower_ROOT.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> f_;
      R__b >> hc_;
      R__b >> h_;
      void *ptr_ProgFlag_ = (void*)&ProgFlag_;
      R__b >> *reinterpret_cast<Int_t*>(ptr_ProgFlag_);
      R__b >> exists_;
      R__b >> showerGrnd_;
      R__b >> showerProf_;
      R__b.CheckByteCount(R__s, R__c, Shower_ROOT::IsA());
   } else {
      R__c = R__b.WriteVersion(Shower_ROOT::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << f_;
      R__b << hc_;
      R__b << h_;
      R__b << (Int_t)ProgFlag_;
      R__b << exists_;
      R__b << showerGrnd_;
      R__b << showerProf_;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void Shower_ROOT::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Shower_ROOT.
      TClass *R__cl = ::Shower_ROOT::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*f_", &f_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hc_", &hc_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_", &h_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ProgFlag_", &ProgFlag_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "exists_", &exists_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*showerGrnd_", &showerGrnd_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*showerProf_", &showerProf_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*showerProps_", &showerProps_);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Shower_ROOT(void *p) {
      return  p ? new(p) ::Shower_ROOT : new ::Shower_ROOT;
   }
   static void *newArray_Shower_ROOT(Long_t nElements, void *p) {
      return p ? new(p) ::Shower_ROOT[nElements] : new ::Shower_ROOT[nElements];
   }
   // Wrapper around operator delete
   static void delete_Shower_ROOT(void *p) {
      delete ((::Shower_ROOT*)p);
   }
   static void deleteArray_Shower_ROOT(void *p) {
      delete [] ((::Shower_ROOT*)p);
   }
   static void destruct_Shower_ROOT(void *p) {
      typedef ::Shower_ROOT current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_Shower_ROOT(TBuffer &buf, void *obj) {
      ((::Shower_ROOT*)obj)->::Shower_ROOT::Streamer(buf);
   }
} // end of namespace ROOT for class ::Shower_ROOT

//______________________________________________________________________________
void ShowerGrnd_ROOT::Streamer(TBuffer &R__b)
{
   // Stream an object of class ShowerGrnd_ROOT.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> f_;
      R__b >> Pcles_;
      R__b >> Branch_;
      R__b >> p_;
      R__b >> NbPart_;
      R__b.CheckByteCount(R__s, R__c, ShowerGrnd_ROOT::IsA());
   } else {
      R__c = R__b.WriteVersion(ShowerGrnd_ROOT::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << f_;
      R__b << Pcles_;
      R__b << Branch_;
      R__b << p_;
      R__b << NbPart_;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ShowerGrnd_ROOT::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ShowerGrnd_ROOT.
      TClass *R__cl = ::ShowerGrnd_ROOT::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*f_", &f_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Pcles_", &Pcles_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Branch_", &Branch_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*p_", &p_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NbPart_", &NbPart_);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ShowerGrnd_ROOT(void *p) {
      delete ((::ShowerGrnd_ROOT*)p);
   }
   static void deleteArray_ShowerGrnd_ROOT(void *p) {
      delete [] ((::ShowerGrnd_ROOT*)p);
   }
   static void destruct_ShowerGrnd_ROOT(void *p) {
      typedef ::ShowerGrnd_ROOT current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ShowerGrnd_ROOT(TBuffer &buf, void *obj) {
      ((::ShowerGrnd_ROOT*)obj)->::ShowerGrnd_ROOT::Streamer(buf);
   }
} // end of namespace ROOT for class ::ShowerGrnd_ROOT

//______________________________________________________________________________
void ShowerProf_ROOT::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ShowerProf_ROOT.
      TClass *R__cl = ::ShowerProf_ROOT::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChi0", &fChi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChimax", &fChimax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNShwPts", &fNShwPts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fShwPts", &fShwPts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLogPts", &fLogPts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLogEPts", &fLogEPts);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ShowerProf_ROOT(void *p) {
      return  p ? new(p) ::ShowerProf_ROOT : new ::ShowerProf_ROOT;
   }
   static void *newArray_ShowerProf_ROOT(Long_t nElements, void *p) {
      return p ? new(p) ::ShowerProf_ROOT[nElements] : new ::ShowerProf_ROOT[nElements];
   }
   // Wrapper around operator delete
   static void delete_ShowerProf_ROOT(void *p) {
      delete ((::ShowerProf_ROOT*)p);
   }
   static void deleteArray_ShowerProf_ROOT(void *p) {
      delete [] ((::ShowerProf_ROOT*)p);
   }
   static void destruct_ShowerProf_ROOT(void *p) {
      typedef ::ShowerProf_ROOT current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ShowerProf_ROOT(TBuffer &buf, void *obj) {
      ((::ShowerProf_ROOT*)obj)->::ShowerProf_ROOT::Streamer(buf);
   }
} // end of namespace ROOT for class ::ShowerProf_ROOT

/********************************************************
* ShowerROOTDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableShowerROOTDict();

extern "C" void G__set_cpp_environmentShowerROOTDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("../src/Shower_ROOT.h");
  G__add_compiledheader("../src/ShowerGrnd_ROOT.h");
  G__add_compiledheader("../src/ShowerProf_ROOT.h");
  G__add_compiledheader("../src/HeaderCorsika_ROOT.h");
  G__add_compiledheader("../src/PartGrnd_ROOT.h");
  G__cpp_reset_tagtableShowerROOTDict();
}
#include <new>
extern "C" int G__cpp_dllrevShowerROOTDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Header_ROOT */
static int G__ShowerROOTDict_782_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((Header_ROOT*) G__getstructoffset())->GetPrimaryType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_782_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((Header_ROOT*) G__getstructoffset())->GetPrimaryEnGev());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_782_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((Header_ROOT*) G__getstructoffset())->GetPrimaryThin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_782_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((Header_ROOT*) G__getstructoffset())->GetPrimaryZenAng());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_782_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((Header_ROOT*) G__getstructoffset())->GetPrimaryAzAng());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_782_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((Header_ROOT*) G__getstructoffset())->GetPrimaryPx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_782_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((Header_ROOT*) G__getstructoffset())->GetPrimaryPy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_782_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((Header_ROOT*) G__getstructoffset())->GetPrimaryPz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_782_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((Header_ROOT*) G__getstructoffset())->GetDateOfCreation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_782_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((Header_ROOT*) G__getstructoffset())->GetNbGAM((char) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_782_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((Header_ROOT*) G__getstructoffset())->GetNbEp((char) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_782_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((Header_ROOT*) G__getstructoffset())->GetNbEm((char) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_782_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((Header_ROOT*) G__getstructoffset())->GetNbMUp((char) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_782_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((Header_ROOT*) G__getstructoffset())->GetNbMUm((char) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_782_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((Header_ROOT*) G__getstructoffset())->GetNbHad((char) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_782_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((Header_ROOT*) G__getstructoffset())->GetNbPart((char) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_782_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Header_ROOT::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_782_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Header_ROOT::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_782_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Header_ROOT::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_782_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Header_ROOT::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_782_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Header_ROOT*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_782_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Header_ROOT::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_782_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Header_ROOT::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_782_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Header_ROOT::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_782_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Header_ROOT::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Header_ROOT G__THeader_ROOT;
static int G__ShowerROOTDict_782_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Header_ROOT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Header_ROOT*) (soff+(sizeof(Header_ROOT)*i)))->~G__THeader_ROOT();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Header_ROOT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Header_ROOT*) (soff))->~G__THeader_ROOT();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowerROOTDict_782_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Header_ROOT* dest = (Header_ROOT*) G__getstructoffset();
   *dest = *(Header_ROOT*) libp->para[0].ref;
   const Header_ROOT& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* PartGrnd_ROOT */
static int G__ShowerROOTDict_786_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PartGrnd_ROOT*) G__getstructoffset())->GetId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((PartGrnd_ROOT*) G__getstructoffset())->GetUX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((PartGrnd_ROOT*) G__getstructoffset())->GetUY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((PartGrnd_ROOT*) G__getstructoffset())->GetUZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((PartGrnd_ROOT*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((PartGrnd_ROOT*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((PartGrnd_ROOT*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((PartGrnd_ROOT*) G__getstructoffset())->GetT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((PartGrnd_ROOT*) G__getstructoffset())->GetW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((PartGrnd_ROOT*) G__getstructoffset())->GetE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((PartGrnd_ROOT*) G__getstructoffset())->GetUR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((PartGrnd_ROOT*) G__getstructoffset())->Phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((PartGrnd_ROOT*) G__getstructoffset())->Theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((PartGrnd_ROOT*) G__getstructoffset())->Azim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((PartGrnd_ROOT*) G__getstructoffset())->GetPhiDeg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((PartGrnd_ROOT*) G__getstructoffset())->GetThetaDeg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((PartGrnd_ROOT*) G__getstructoffset())->GetCosTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((PartGrnd_ROOT*) G__getstructoffset())->GetAzimDeg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((PartGrnd_ROOT*) G__getstructoffset())->R());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((PartGrnd_ROOT*) G__getstructoffset())->GetR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((PartGrnd_ROOT*) G__getstructoffset())->LogR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((PartGrnd_ROOT*) G__getstructoffset())->LogW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((PartGrnd_ROOT*) G__getstructoffset())->LogE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((PartGrnd_ROOT*) G__getstructoffset())->LogT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const PartGrnd_ROOT*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((const PartGrnd_ROOT*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PartGrnd_ROOT::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PartGrnd_ROOT::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PartGrnd_ROOT::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PartGrnd_ROOT::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PartGrnd_ROOT*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PartGrnd_ROOT::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PartGrnd_ROOT::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PartGrnd_ROOT::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_786_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PartGrnd_ROOT::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__ShowerROOTDict_786_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PartGrnd_ROOT *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PartGrnd_ROOT[n];
     } else {
       p = new((void*) gvp) PartGrnd_ROOT[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PartGrnd_ROOT;
     } else {
       p = new((void*) gvp) PartGrnd_ROOT;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerROOTDictLN_PartGrnd_ROOT));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowerROOTDict_786_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   PartGrnd_ROOT* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new PartGrnd_ROOT(*(PartGrnd_ROOT*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerROOTDictLN_PartGrnd_ROOT));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PartGrnd_ROOT G__TPartGrnd_ROOT;
static int G__ShowerROOTDict_786_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PartGrnd_ROOT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PartGrnd_ROOT*) (soff+(sizeof(PartGrnd_ROOT)*i)))->~G__TPartGrnd_ROOT();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PartGrnd_ROOT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PartGrnd_ROOT*) (soff))->~G__TPartGrnd_ROOT();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowerROOTDict_786_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PartGrnd_ROOT* dest = (PartGrnd_ROOT*) G__getstructoffset();
   *dest = *(PartGrnd_ROOT*) libp->para[0].ref;
   const PartGrnd_ROOT& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HeaderCorsika_ROOT */
static int G__ShowerROOTDict_787_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HeaderCorsika_ROOT* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HeaderCorsika_ROOT((float*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) HeaderCorsika_ROOT((float*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerROOTDictLN_HeaderCorsika_ROOT));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_787_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HeaderCorsika_ROOT*) G__getstructoffset())->GetTimeOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_787_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HeaderCorsika_ROOT* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HeaderCorsika_ROOT[n];
     } else {
       p = new((void*) gvp) HeaderCorsika_ROOT[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HeaderCorsika_ROOT;
     } else {
       p = new((void*) gvp) HeaderCorsika_ROOT;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerROOTDictLN_HeaderCorsika_ROOT));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_787_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HeaderCorsika_ROOT::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_787_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HeaderCorsika_ROOT::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_787_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HeaderCorsika_ROOT::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_787_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HeaderCorsika_ROOT::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_787_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HeaderCorsika_ROOT*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_787_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HeaderCorsika_ROOT::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_787_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HeaderCorsika_ROOT::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_787_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HeaderCorsika_ROOT::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_787_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HeaderCorsika_ROOT::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowerROOTDict_787_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HeaderCorsika_ROOT* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HeaderCorsika_ROOT(*(HeaderCorsika_ROOT*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerROOTDictLN_HeaderCorsika_ROOT));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HeaderCorsika_ROOT G__THeaderCorsika_ROOT;
static int G__ShowerROOTDict_787_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HeaderCorsika_ROOT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HeaderCorsika_ROOT*) (soff+(sizeof(HeaderCorsika_ROOT)*i)))->~G__THeaderCorsika_ROOT();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HeaderCorsika_ROOT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HeaderCorsika_ROOT*) (soff))->~G__THeaderCorsika_ROOT();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowerROOTDict_787_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HeaderCorsika_ROOT* dest = (HeaderCorsika_ROOT*) G__getstructoffset();
   *dest = *(HeaderCorsika_ROOT*) libp->para[0].ref;
   const HeaderCorsika_ROOT& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ShowerGrnd_ROOT */
static int G__ShowerROOTDict_788_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ShowerGrnd_ROOT*) G__getstructoffset())->QuickLook();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_788_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ShowerGrnd_ROOT*) G__getstructoffset())->GetPart((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_788_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ShowerGrnd_ROOT*) G__getstructoffset())->GetEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_788_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ShowerGrnd_ROOT* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ShowerGrnd_ROOT((TFile*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) ShowerGrnd_ROOT((TFile*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerROOTDictLN_ShowerGrnd_ROOT));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_788_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ShowerGrnd_ROOT::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_788_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ShowerGrnd_ROOT::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_788_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ShowerGrnd_ROOT::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_788_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ShowerGrnd_ROOT::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_788_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ShowerGrnd_ROOT*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_788_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ShowerGrnd_ROOT::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_788_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ShowerGrnd_ROOT::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_788_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ShowerGrnd_ROOT::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_788_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ShowerGrnd_ROOT::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowerROOTDict_788_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ShowerGrnd_ROOT* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ShowerGrnd_ROOT(*(ShowerGrnd_ROOT*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerROOTDictLN_ShowerGrnd_ROOT));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ShowerGrnd_ROOT G__TShowerGrnd_ROOT;
static int G__ShowerROOTDict_788_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ShowerGrnd_ROOT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ShowerGrnd_ROOT*) (soff+(sizeof(ShowerGrnd_ROOT)*i)))->~G__TShowerGrnd_ROOT();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ShowerGrnd_ROOT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ShowerGrnd_ROOT*) (soff))->~G__TShowerGrnd_ROOT();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowerROOTDict_788_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ShowerGrnd_ROOT* dest = (ShowerGrnd_ROOT*) G__getstructoffset();
   *dest = *(ShowerGrnd_ROOT*) libp->para[0].ref;
   const ShowerGrnd_ROOT& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ShowerProf_ROOT */
static int G__ShowerROOTDict_789_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ShowerProf_ROOT* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ShowerProf_ROOT[n];
     } else {
       p = new((void*) gvp) ShowerProf_ROOT[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ShowerProf_ROOT;
     } else {
       p = new((void*) gvp) ShowerProf_ROOT;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerROOTDictLN_ShowerProf_ROOT));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_789_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ShowerProf_ROOT*) G__getstructoffset())->SetChi0((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_789_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ShowerProf_ROOT*) G__getstructoffset())->SetChimax((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_789_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ShowerProf_ROOT*) G__getstructoffset())->SetNShwPts((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_789_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ShowerProf_ROOT*) G__getstructoffset())->SetShwPts((TVector*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_789_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ShowerProf_ROOT*) G__getstructoffset())->SetLogPts((TVector*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_789_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ShowerProf_ROOT*) G__getstructoffset())->SetLogEPts((TVector*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_789_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ShowerProf_ROOT*) G__getstructoffset())->GetChi0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_789_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ShowerProf_ROOT*) G__getstructoffset())->GetChimax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_789_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const ShowerProf_ROOT*) G__getstructoffset())->GetNShwPts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_789_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ShowerProf_ROOT*) G__getstructoffset())->GetShwPts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_789_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ShowerProf_ROOT*) G__getstructoffset())->GetLogPts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_789_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ShowerProf_ROOT*) G__getstructoffset())->GetLogEPts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_789_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ShowerProf_ROOT::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_789_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ShowerProf_ROOT::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_789_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ShowerProf_ROOT::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_789_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ShowerProf_ROOT::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_789_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ShowerProf_ROOT*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_789_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ShowerProf_ROOT::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_789_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ShowerProf_ROOT::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_789_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ShowerProf_ROOT::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_789_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ShowerProf_ROOT::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowerROOTDict_789_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ShowerProf_ROOT* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ShowerProf_ROOT(*(ShowerProf_ROOT*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerROOTDictLN_ShowerProf_ROOT));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ShowerProf_ROOT G__TShowerProf_ROOT;
static int G__ShowerROOTDict_789_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ShowerProf_ROOT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ShowerProf_ROOT*) (soff+(sizeof(ShowerProf_ROOT)*i)))->~G__TShowerProf_ROOT();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ShowerProf_ROOT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ShowerProf_ROOT*) (soff))->~G__TShowerProf_ROOT();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowerROOTDict_789_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ShowerProf_ROOT* dest = (ShowerProf_ROOT*) G__getstructoffset();
   *dest = *(ShowerProf_ROOT*) libp->para[0].ref;
   const ShowerProf_ROOT& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Shower_ROOT */
static int G__ShowerROOTDict_790_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Shower_ROOT*) G__getstructoffset())->showerGrnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_790_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Shower_ROOT*) G__getstructoffset())->showerProf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_790_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Shower_ROOT*) G__getstructoffset())->showerProps());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_790_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Shower_ROOT*) G__getstructoffset())->setshowerProps((ShowerProperties*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_790_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Shower_ROOT*) G__getstructoffset())->QuickLook();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_790_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Shower_ROOT*) G__getstructoffset())->GetHeader());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_790_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Shower_ROOT* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Shower_ROOT((char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Shower_ROOT((char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerROOTDictLN_Shower_ROOT));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_790_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Shower_ROOT* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Shower_ROOT[n];
     } else {
       p = new((void*) gvp) Shower_ROOT[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Shower_ROOT;
     } else {
       p = new((void*) gvp) Shower_ROOT;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerROOTDictLN_Shower_ROOT));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_790_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Shower_ROOT::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_790_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Shower_ROOT::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_790_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Shower_ROOT::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_790_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Shower_ROOT::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_790_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Shower_ROOT*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_790_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Shower_ROOT::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_790_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Shower_ROOT::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_790_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Shower_ROOT::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ShowerROOTDict_790_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Shower_ROOT::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ShowerROOTDict_790_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Shower_ROOT* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Shower_ROOT(*(Shower_ROOT*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ShowerROOTDictLN_Shower_ROOT));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Shower_ROOT G__TShower_ROOT;
static int G__ShowerROOTDict_790_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Shower_ROOT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Shower_ROOT*) (soff+(sizeof(Shower_ROOT)*i)))->~G__TShower_ROOT();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Shower_ROOT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Shower_ROOT*) (soff))->~G__TShower_ROOT();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ShowerROOTDict_790_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Shower_ROOT* dest = (Shower_ROOT*) G__getstructoffset();
   *dest = *(Shower_ROOT*) libp->para[0].ref;
   const Shower_ROOT& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* Header_ROOT */

/* PartGrnd_ROOT */

/* HeaderCorsika_ROOT */

/* ShowerGrnd_ROOT */

/* ShowerProf_ROOT */

/* Shower_ROOT */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncShowerROOTDict {
 public:
  G__Sizep2memfuncShowerROOTDict(): p(&G__Sizep2memfuncShowerROOTDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncShowerROOTDict::*p)();
};

size_t G__get_sizep2memfuncShowerROOTDict()
{
  G__Sizep2memfuncShowerROOTDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceShowerROOTDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ShowerROOTDictLN_Header_ROOT))) {
     Header_ROOT *G__Lderived;
     G__Lderived=(Header_ROOT*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowerROOTDictLN_Header_ROOT),G__get_linked_tagnum(&G__ShowerROOTDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ShowerROOTDictLN_PartGrnd_ROOT))) {
     PartGrnd_ROOT *G__Lderived;
     G__Lderived=(PartGrnd_ROOT*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowerROOTDictLN_PartGrnd_ROOT),G__get_linked_tagnum(&G__ShowerROOTDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ShowerROOTDictLN_HeaderCorsika_ROOT))) {
     HeaderCorsika_ROOT *G__Lderived;
     G__Lderived=(HeaderCorsika_ROOT*)0x1000;
     {
       Header_ROOT *G__Lpbase=(Header_ROOT*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowerROOTDictLN_HeaderCorsika_ROOT),G__get_linked_tagnum(&G__ShowerROOTDictLN_Header_ROOT),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowerROOTDictLN_HeaderCorsika_ROOT),G__get_linked_tagnum(&G__ShowerROOTDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ShowerROOTDictLN_ShowerGrnd_ROOT))) {
     ShowerGrnd_ROOT *G__Lderived;
     G__Lderived=(ShowerGrnd_ROOT*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowerROOTDictLN_ShowerGrnd_ROOT),G__get_linked_tagnum(&G__ShowerROOTDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ShowerROOTDictLN_ShowerProf_ROOT))) {
     ShowerProf_ROOT *G__Lderived;
     G__Lderived=(ShowerProf_ROOT*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowerROOTDictLN_ShowerProf_ROOT),G__get_linked_tagnum(&G__ShowerROOTDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ShowerROOTDictLN_Shower_ROOT))) {
     Shower_ROOT *G__Lderived;
     G__Lderived=(Shower_ROOT*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ShowerROOTDictLN_Shower_ROOT),G__get_linked_tagnum(&G__ShowerROOTDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableShowerROOTDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Stat_t",100,-1,0,-1);
   G__setnewtype(-1,"Statistics type (double)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ShowerROOTDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ShowerROOTDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ShowerROOTDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ShowerROOTDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ShowerROOTDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ShowerROOTDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ShowerROOTDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ShowerROOTDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVector",117,G__get_linked_tagnum(&G__ShowerROOTDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* Header_ROOT */
static void G__setup_memvarHeader_ROOT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowerROOTDictLN_Header_ROOT));
   { Header_ROOT *p; p=(Header_ROOT*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ProgFlag)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__ShowerROOTDictLN_ProgName),-1,-1,1,"ProgFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MotherProgram)-(long)(p)),99,0,0,-1,-1,-1,1,"MotherProgram[50]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ShowerName)-(long)(p)),99,0,0,-1,-1,-1,1,"ShowerName[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerROOTDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* PartGrnd_ROOT */
static void G__setup_memvarPartGrnd_ROOT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowerROOTDictLN_PartGrnd_ROOT));
   { PartGrnd_ROOT *p; p=(PartGrnd_ROOT*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Id)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Id=",0,"Aires code */");
   G__memvar_setup((void*)((long)(&p->UX)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"UX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->UY)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"UY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->UZ)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"UZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->X)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"X=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Y=",0,"X,Y : position in m */");
   G__memvar_setup((void*)((long)(&p->Z)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Z=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->T)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"T=",0,"T: time of arrival */");
   G__memvar_setup((void*)((long)(&p->W)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"W=",0,"W : weight */");
   G__memvar_setup((void*)((long)(&p->E)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"E=",0,"En: energy in Gev */");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerROOTDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HeaderCorsika_ROOT */
static void G__setup_memvarHeaderCorsika_ROOT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowerROOTDictLN_HeaderCorsika_ROOT));
   { HeaderCorsika_ROOT *p; p=(HeaderCorsika_ROOT*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->DateOfCreation)-(long)(p)),99,0,0,-1,-1,-1,1,"DateOfCreation[50]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NEv)-(long)(p)),104,0,0,-1,-1,-1,1,"NEv=",0,"Event number");
   G__memvar_setup((void*)((long)(&p->PrimaryType)-(long)(p)),105,0,0,-1,-1,-1,1,"PrimaryType=",0,"particle id");
   G__memvar_setup((void*)((long)(&p->PrimEnGev)-(long)(p)),102,0,0,-1,-1,-1,1,"PrimEnGev=",0,"total energy (gev)");
   G__memvar_setup((void*)((long)(&p->StartAlt)-(long)(p)),102,0,0,-1,-1,-1,1,"StartAlt=",0,"starting altitude (g/cm2)");
   G__memvar_setup((void*)((long)(&p->NbOfFirstTarg)-(long)(p)),104,0,0,-1,-1,-1,1,"NbOfFirstTarg=",0,"number of first target");
   G__memvar_setup((void*)((long)(&p->ZcoordFI)-(long)(p)),102,0,0,-1,-1,-1,1,"ZcoordFI=",0,"z coordinate of first interaction");
   G__memvar_setup((void*)((long)(&p->PrimPx)-(long)(p)),102,0,0,-1,-1,-1,1,"PrimPx=",0,"px (Gev)");
   G__memvar_setup((void*)((long)(&p->PrimPy)-(long)(p)),102,0,0,-1,-1,-1,1,"PrimPy=",0,"py");
   G__memvar_setup((void*)((long)(&p->PrimPz)-(long)(p)),102,0,0,-1,-1,-1,1,"PrimPz=",0,"pz");
   G__memvar_setup((void*)((long)(&p->ZenAng)-(long)(p)),102,0,0,-1,-1,-1,1,"ZenAng=",0,"zen. angle (rad)");
   G__memvar_setup((void*)((long)(&p->AzAng)-(long)(p)),102,0,0,-1,-1,-1,1,"AzAng=",0,"azimuth angle(rad)");
   G__memvar_setup((void*)((long)(&p->NDRNS)-(long)(p)),104,0,0,-1,-1,-1,1,"NDRNS=",0,"nb of different rand. seq");
   G__memvar_setup((void*)((long)(&p->ISSI)-(long)(p)),104,0,0,-1,-1,-1,1,"ISSI[10]=",0,"integer seed of seq. i");
   G__memvar_setup((void*)((long)(&p->NOFRCM)-(long)(p)),104,0,0,-1,-1,-1,1,"NOFRCM[10]=",0,"nb of offset rand. calls (mod 1e6) of sequence i");
   G__memvar_setup((void*)((long)(&p->NOFRCO)-(long)(p)),104,0,0,-1,-1,-1,1,"NOFRCO[10]=",0,"nb of offset rand. calls (/1e6) of sequence i");
   G__memvar_setup((void*)((long)(&p->NObsL)-(long)(p)),104,0,0,-1,-1,-1,1,"NObsL=",0,"number of observation levels ");
   G__memvar_setup((void*)((long)(&p->HObsL)-(long)(p)),102,0,0,-1,-1,-1,1,"HObsL[10]=",0,"height of lev. i(cm)");
   G__memvar_setup((void*)((long)(&p->CHKG)-(long)(p)),102,0,0,-1,-1,-1,1,"CHKG=",0,"cutoff for hadr. cin. en");
   G__memvar_setup((void*)((long)(&p->CMKG)-(long)(p)),102,0,0,-1,-1,-1,1,"CMKG=",0,"cutoff for muons cin. en");
   G__memvar_setup((void*)((long)(&p->CEKG)-(long)(p)),102,0,0,-1,-1,-1,1,"CEKG=",0,"cutoff for  el. cin. en");
   G__memvar_setup((void*)((long)(&p->CPKG)-(long)(p)),102,0,0,-1,-1,-1,1,"CPKG=",0,"cutoff for  phot. cin. en");
   G__memvar_setup((void*)((long)(&p->NFLAIN)-(long)(p)),105,0,0,-1,-1,-1,1,"NFLAIN=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NFLDIF)-(long)(p)),105,0,0,-1,-1,-1,1,"NFLDIF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NFLPI0)-(long)(p)),105,0,0,-1,-1,-1,1,"NFLPI0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NFLPIF)-(long)(p)),105,0,0,-1,-1,-1,1,"NFLPIF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NFLCHE)-(long)(p)),105,0,0,-1,-1,-1,1,"NFLCHE=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NFRAGM)-(long)(p)),105,0,0,-1,-1,-1,1,"NFRAGM=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EMFx)-(long)(p)),102,0,0,-1,-1,-1,1,"EMFx=",0,"Earth's mag. field (microT), x cmp.");
   G__memvar_setup((void*)((long)(&p->EMFz)-(long)(p)),102,0,0,-1,-1,-1,1,"EMFz=",0,"Earth's mag. field (microT), z cmp.");
   G__memvar_setup((void*)((long)(&p->EGS4)-(long)(p)),104,0,0,-1,-1,-1,1,"EGS4=",0,"flag for act. EGS4");
   G__memvar_setup((void*)((long)(&p->NKG)-(long)(p)),104,0,0,-1,-1,-1,1,"NKG=",0,"flag for NKG");
   G__memvar_setup((void*)((long)(&p->GHEISHA)-(long)(p)),104,0,0,-1,-1,-1,1,"GHEISHA=",0,"flag for Gheisha");
   G__memvar_setup((void*)((long)(&p->VENUS)-(long)(p)),104,0,0,-1,-1,-1,1,"VENUS=",0,"flag for venus(1)/nexux(2) ");
   G__memvar_setup((void*)((long)(&p->CERENKOV)-(long)(p)),104,0,0,-1,-1,-1,1,"CERENKOV=",0,"flag for cerenkov");
   G__memvar_setup((void*)((long)(&p->NEUTRINO)-(long)(p)),104,0,0,-1,-1,-1,1,"NEUTRINO=",0,"flag for neutrino");
   G__memvar_setup((void*)((long)(&p->CURVED)-(long)(p)),104,0,0,-1,-1,-1,1,"CURVED=",0,"0=standard,1=horiz,2=curved");
   G__memvar_setup((void*)((long)(&p->SIBYLL)-(long)(p)),104,0,0,-1,-1,-1,1,"SIBYLL=",0,"sibyll int. flag");
   G__memvar_setup((void*)((long)(&p->SIBYLLC)-(long)(p)),104,0,0,-1,-1,-1,1,"SIBYLLC=",0,"sibyll cross sect. flag");
   G__memvar_setup((void*)((long)(&p->QGSJET)-(long)(p)),104,0,0,-1,-1,-1,1,"QGSJET=",0,"qetint. flag");
   G__memvar_setup((void*)((long)(&p->QGSJETC)-(long)(p)),104,0,0,-1,-1,-1,1,"QGSJETC=",0,"qgsjet cross sect. flag");
   G__memvar_setup((void*)((long)(&p->DPMJET)-(long)(p)),104,0,0,-1,-1,-1,1,"DPMJET=",0,"dpmjet int. flag");
   G__memvar_setup((void*)((long)(&p->DPMJETC)-(long)(p)),104,0,0,-1,-1,-1,1,"DPMJETC=",0,"dpmjet cross sect. flag");
   G__memvar_setup((void*)((long)(&p->VENUSC)-(long)(p)),104,0,0,-1,-1,-1,1,"VENUSC=",0,"venus/nex cross  sec flag (1=VENUSSIG,2=NEXUSSIG)");
   G__memvar_setup((void*)((long)(&p->MUSF)-(long)(p)),104,0,0,-1,-1,-1,1,"MUSF=",0,"muon multiple scat. flag (1=moliere, 0=gauss)");
   G__memvar_setup((void*)((long)(&p->EFRCTHN)-(long)(p)),102,0,0,-1,-1,-1,1,"EFRCTHN=",0,"energy fraction of thinning level");
   G__memvar_setup((void*)((long)(&p->NKGRD)-(long)(p)),102,0,0,-1,-1,-1,1,"NKGRD=",0,"rad distr. range cm");
   G__memvar_setup((void*)((long)(&p->WNPh)-(long)(p)),102,0,0,-1,-1,-1,1,"WNPh=",0,"weighted nb of photons ");
   G__memvar_setup((void*)((long)(&p->WNEl)-(long)(p)),102,0,0,-1,-1,-1,1,"WNEl=",0,"weighted nb of electrons");
   G__memvar_setup((void*)((long)(&p->WNHad)-(long)(p)),102,0,0,-1,-1,-1,1,"WNHad=",0,"weighted nb of hadrons");
   G__memvar_setup((void*)((long)(&p->WNMu)-(long)(p)),102,0,0,-1,-1,-1,1,"WNMu=",0,"weighted nb of muons");
   G__memvar_setup((void*)((long)(&p->WNPart)-(long)(p)),102,0,0,-1,-1,-1,1,"WNPart=",0,"weighted nb of part");
   G__memvar_setup((void*)((long)(&p->NbPart)-(long)(p)),102,0,0,-1,-1,-1,1,"NbPart=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NbWPart)-(long)(p)),102,0,0,-1,-1,-1,1,"NbWPart=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NbGAM)-(long)(p)),102,0,0,-1,-1,-1,1,"NbGAM=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NbWGAM)-(long)(p)),102,0,0,-1,-1,-1,1,"NbWGAM=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NbEm)-(long)(p)),102,0,0,-1,-1,-1,1,"NbEm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NbWEm)-(long)(p)),102,0,0,-1,-1,-1,1,"NbWEm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NbEp)-(long)(p)),102,0,0,-1,-1,-1,1,"NbEp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NbWEp)-(long)(p)),102,0,0,-1,-1,-1,1,"NbWEp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NbMUp)-(long)(p)),102,0,0,-1,-1,-1,1,"NbMUp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NbWMUp)-(long)(p)),102,0,0,-1,-1,-1,1,"NbWMUp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NbMUm)-(long)(p)),102,0,0,-1,-1,-1,1,"NbMUm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NbWMUm)-(long)(p)),102,0,0,-1,-1,-1,1,"NbWMUm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NbHad)-(long)(p)),102,0,0,-1,-1,-1,1,"NbHad=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NbWHad)-(long)(p)),102,0,0,-1,-1,-1,1,"NbWHad=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->LDX1)-(long)(p)),102,0,0,-1,-1,-1,1,"LDX1[21]=",0,"lat. distr x level 1 (cm-2)");
   G__memvar_setup((void*)((long)(&p->LDY1)-(long)(p)),102,0,0,-1,-1,-1,1,"LDY1[21]=",0,"lat. distr y level 1 (cm-2)");
   G__memvar_setup((void*)((long)(&p->LDXY1)-(long)(p)),102,0,0,-1,-1,-1,1,"LDXY1[21]=",0,"lat. distr xy level 1 (cm-2)");
   G__memvar_setup((void*)((long)(&p->LDYX1)-(long)(p)),102,0,0,-1,-1,-1,1,"LDYX1[21]=",0,"lat. distr yx level 1 (cm-2)");
   G__memvar_setup((void*)((long)(&p->LDX2)-(long)(p)),102,0,0,-1,-1,-1,1,"LDX2[21]=",0,"lat. distr x level 2 (cm-2)");
   G__memvar_setup((void*)((long)(&p->LDY2)-(long)(p)),102,0,0,-1,-1,-1,1,"LDY2[21]=",0,"lat. distr y level 2 (cm-2)");
   G__memvar_setup((void*)((long)(&p->LDXY2)-(long)(p)),102,0,0,-1,-1,-1,1,"LDXY2[21]=",0,"lat. distr xy level 2 (cm-2)");
   G__memvar_setup((void*)((long)(&p->LDYX2)-(long)(p)),102,0,0,-1,-1,-1,1,"LDYX2[21]=",0,"lat. distr yx level 2 (cm-2)");
   G__memvar_setup((void*)((long)(&p->EN)-(long)(p)),102,0,0,-1,-1,-1,1,"EN[10]=",0,"el. numb. in steps of 100 g/cm2");
   G__memvar_setup((void*)((long)(&p->Ag)-(long)(p)),102,0,0,-1,-1,-1,1,"Ag[10]=",0,"age in steps of 100 g/cm2");
   G__memvar_setup((void*)((long)(&p->DED)-(long)(p)),102,0,0,-1,-1,-1,1,"DED[10]=",0,"dist. for el. distr. i cm");
   G__memvar_setup((void*)((long)(&p->LAg1)-(long)(p)),102,0,0,-1,-1,-1,1,"LAg1[10]=",0,"local age 1. lev");
   G__memvar_setup((void*)((long)(&p->HLEg)-(long)(p)),102,0,0,-1,-1,-1,1,"HLEg[10]=",0,"height of lev for el nb g/cm2");
   G__memvar_setup((void*)((long)(&p->HLEc)-(long)(p)),102,0,0,-1,-1,-1,1,"HLEc[10]=",0,"height of lev for el nb cm");
   G__memvar_setup((void*)((long)(&p->DB)-(long)(p)),102,0,0,-1,-1,-1,1,"DB[10]=",0,"dist bins for local age in cm");
   G__memvar_setup((void*)((long)(&p->LAg2)-(long)(p)),102,0,0,-1,-1,-1,1,"LAg2[10]=",0,"local age lev. 2");
   G__memvar_setup((void*)((long)(&p->PARLGDC)-(long)(p)),102,0,0,-1,-1,-1,1,"PARLGDC[6]=",0,"param. of long. distr. for charged p.");
   G__memvar_setup((void*)((long)(&p->CHI2LD)-(long)(p)),102,0,0,-1,-1,-1,1,"CHI2LD=",0,"chi2 fit for long. dist");
   G__memvar_setup((void*)((long)(&p->TimeOffset)-(long)(p)),102,0,0,-1,-1,-1,1,"TimeOffset=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerROOTDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ShowerGrnd_ROOT */
static void G__setup_memvarShowerGrnd_ROOT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowerROOTDictLN_ShowerGrnd_ROOT));
   { ShowerGrnd_ROOT *p; p=(ShowerGrnd_ROOT*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->f_)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowerROOTDictLN_TFile),-1,-1,1,"f_=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Pcles_)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowerROOTDictLN_TTree),-1,-1,1,"Pcles_=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Branch_)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowerROOTDictLN_TBranch),-1,-1,1,"Branch_=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p_)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowerROOTDictLN_PartGrnd_ROOT),-1,-1,1,"p_=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NbPart_)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"NbPart_=",0,"Number of particles in the record");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerROOTDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ShowerProf_ROOT */
static void G__setup_memvarShowerProf_ROOT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowerROOTDictLN_ShowerProf_ROOT));
   { ShowerProf_ROOT *p; p=(ShowerProf_ROOT*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fChi0=",0,"chi0  ");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fChimax=",0,"chimax");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNShwPts=",0,"number of shower points");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerROOTDictLN_TVectorTlEfloatgR),G__defined_typename("TVector"),-1,4,"fShwPts=",0,"shower levels (g/cm2)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerROOTDictLN_TVectorTlEfloatgR),G__defined_typename("TVector"),-1,4,"fLogPts=",0,"log of number of charged particles");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerROOTDictLN_TVectorTlEfloatgR),G__defined_typename("TVector"),-1,4,"fLogEPts=",0,"log of energy deposit  ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerROOTDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Shower_ROOT */
static void G__setup_memvarShower_ROOT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ShowerROOTDictLN_Shower_ROOT));
   { Shower_ROOT *p; p=(Shower_ROOT*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->f_)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowerROOTDictLN_TFile),-1,-1,1,"f_=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hc_)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowerROOTDictLN_HeaderCorsika_ROOT),-1,-1,1,"hc_=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h_)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ShowerROOTDictLN_Header_ROOT),-1,-1,1,"h_=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ProgFlag_)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__ShowerROOTDictLN_ProgName),-1,-1,1,"ProgFlag_=",0,"1 Aires, 0 Corsika");
   G__memvar_setup((void*)((long)(&p->exists_)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"exists_=",0,"true if the shower exists. allows program to exit in the other case without seg. fault");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerROOTDictLN_ShowerGrnd_ROOT),-1,-1,4,"showerGrnd_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerROOTDictLN_ShowerProf_ROOT),-1,-1,4,"showerProf_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerROOTDictLN_ShowerProperties),-1,-1,4,"showerProps_=",0,"! not saved in root file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ShowerROOTDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarShowerROOTDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncHeader_ROOT(void) {
   /* Header_ROOT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowerROOTDictLN_Header_ROOT));
   G__memfunc_setup("GetPrimaryType",1446,G__ShowerROOTDict_782_0_1, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetPrimaryEnGev",1497,G__ShowerROOTDict_782_0_2, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetPrimaryThin",1431,G__ShowerROOTDict_782_0_3, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetPrimaryZenAng",1607,G__ShowerROOTDict_782_0_4, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetPrimaryAzAng",1493,G__ShowerROOTDict_782_0_5, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetPrimaryPx",1228,G__ShowerROOTDict_782_0_6, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetPrimaryPy",1229,G__ShowerROOTDict_782_0_7, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetPrimaryPz",1230,G__ShowerROOTDict_782_0_8, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetDateOfCreation",1672,G__ShowerROOTDict_782_0_9, 67, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetNbGAM",677,G__ShowerROOTDict_782_0_10, 102, -1, -1, 0, 1, 1, 1, 0, "c - - 0 - W", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetNbEp",645,G__ShowerROOTDict_782_0_11, 102, -1, -1, 0, 1, 1, 1, 0, "c - - 0 - W", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetNbEm",642,G__ShowerROOTDict_782_0_12, 102, -1, -1, 0, 1, 1, 1, 0, "c - - 0 - W", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetNbMUp",738,G__ShowerROOTDict_782_0_13, 102, -1, -1, 0, 1, 1, 1, 0, "c - - 0 - W", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetNbMUm",735,G__ShowerROOTDict_782_0_14, 102, -1, -1, 0, 1, 1, 1, 0, "c - - 0 - W", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetNbHad",733,G__ShowerROOTDict_782_0_15, 102, -1, -1, 0, 1, 1, 1, 0, "c - - 0 - W", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetNbPart",871,G__ShowerROOTDict_782_0_16, 102, -1, -1, 0, 1, 1, 1, 0, "c - - 0 - W", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__ShowerROOTDict_782_0_18, 85, G__get_linked_tagnum(&G__ShowerROOTDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Header_ROOT::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowerROOTDict_782_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Header_ROOT::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowerROOTDict_782_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Header_ROOT::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowerROOTDict_782_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Header_ROOT::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ShowerROOTDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowerROOTDict_782_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowerROOTDict_782_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Header_ROOT::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowerROOTDict_782_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Header_ROOT::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowerROOTDict_782_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Header_ROOT::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowerROOTDict_782_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Header_ROOT::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Header_ROOT", 1130, G__ShowerROOTDict_782_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowerROOTDict_782_0_31, (int) ('u'), G__get_linked_tagnum(&G__ShowerROOTDictLN_Header_ROOT), -1, 1, 1, 1, 1, 0, "u 'Header_ROOT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPartGrnd_ROOT(void) {
   /* PartGrnd_ROOT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowerROOTDictLN_PartGrnd_ROOT));
   G__memfunc_setup("GetId",461,G__ShowerROOTDict_786_0_1, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUX",461,G__ShowerROOTDict_786_0_2, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUY",462,G__ShowerROOTDict_786_0_3, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUZ",463,G__ShowerROOTDict_786_0_4, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__ShowerROOTDict_786_0_5, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__ShowerROOTDict_786_0_6, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__ShowerROOTDict_786_0_7, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetT",372,G__ShowerROOTDict_786_0_8, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetW",375,G__ShowerROOTDict_786_0_9, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetE",357,G__ShowerROOTDict_786_0_10, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUR",455,G__ShowerROOTDict_786_0_11, 102, -1, -1, 0, 0, 1, 1, 0, "", "direction projected on ground", (void*) NULL, 0);
   G__memfunc_setup("Phi",289,G__ShowerROOTDict_786_0_12, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Theta",502,G__ShowerROOTDict_786_0_13, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Azim",401,G__ShowerROOTDict_786_0_14, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiDeg",849,G__ShowerROOTDict_786_0_15, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThetaDeg",1062,G__ShowerROOTDict_786_0_16, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCosTheta",1083,G__ShowerROOTDict_786_0_17, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAzimDeg",961,G__ShowerROOTDict_786_0_18, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("R",82,G__ShowerROOTDict_786_0_19, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetR",370,G__ShowerROOTDict_786_0_20, 102, -1, -1, 0, 0, 1, 1, 0, "", "same as R()", (void*) NULL, 0);
   G__memfunc_setup("LogR",372,G__ShowerROOTDict_786_0_21, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LogW",377,G__ShowerROOTDict_786_0_22, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LogE",359,G__ShowerROOTDict_786_0_23, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LogT",374,G__ShowerROOTDict_786_0_24, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__ShowerROOTDict_786_0_25, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ShowerROOTDict_786_0_26, 85, G__get_linked_tagnum(&G__ShowerROOTDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PartGrnd_ROOT::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowerROOTDict_786_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PartGrnd_ROOT::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowerROOTDict_786_0_28, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PartGrnd_ROOT::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowerROOTDict_786_0_29, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PartGrnd_ROOT::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ShowerROOTDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowerROOTDict_786_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowerROOTDict_786_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PartGrnd_ROOT::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowerROOTDict_786_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PartGrnd_ROOT::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowerROOTDict_786_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PartGrnd_ROOT::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowerROOTDict_786_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PartGrnd_ROOT::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("PartGrnd_ROOT", 1221, G__ShowerROOTDict_786_0_38, (int) ('i'), G__get_linked_tagnum(&G__ShowerROOTDictLN_PartGrnd_ROOT), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("PartGrnd_ROOT", 1221, G__ShowerROOTDict_786_0_39, (int) ('i'), G__get_linked_tagnum(&G__ShowerROOTDictLN_PartGrnd_ROOT), -1, 0, 1, 1, 1, 0, "u 'PartGrnd_ROOT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PartGrnd_ROOT", 1347, G__ShowerROOTDict_786_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowerROOTDict_786_0_41, (int) ('u'), G__get_linked_tagnum(&G__ShowerROOTDictLN_PartGrnd_ROOT), -1, 1, 1, 1, 1, 0, "u 'PartGrnd_ROOT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHeaderCorsika_ROOT(void) {
   /* HeaderCorsika_ROOT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowerROOTDictLN_HeaderCorsika_ROOT));
   G__memfunc_setup("HeaderCorsika_ROOT",1720,G__ShowerROOTDict_787_0_1, 105, G__get_linked_tagnum(&G__ShowerROOTDictLN_HeaderCorsika_ROOT), -1, 0, 1, 1, 1, 0, "F - - 0 - A", "constructor called by SplitBFile.cc and corsika", (void*) NULL, 0);
   G__memfunc_setup("GetPrimaryType",1446,(G__InterfaceMethod) NULL,102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPrimaryEnGev",1497,(G__InterfaceMethod) NULL,102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPrimaryThin",1431,(G__InterfaceMethod) NULL,102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPrimaryZenAng",1607,(G__InterfaceMethod) NULL,102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPrimaryAzAng",1493,(G__InterfaceMethod) NULL,102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPrimaryPx",1228,(G__InterfaceMethod) NULL,102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPrimaryPy",1229,(G__InterfaceMethod) NULL,102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPrimaryPz",1230,(G__InterfaceMethod) NULL,102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTimeOffset",1302,G__ShowerROOTDict_787_0_10, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDateOfCreation",1672,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNbGAM",677,(G__InterfaceMethod) NULL,102, -1, -1, 0, 1, 1, 1, 0, "c - - 0 - W", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNbEp",645,(G__InterfaceMethod) NULL,102, -1, -1, 0, 1, 1, 1, 0, "c - - 0 - W", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNbEm",642,(G__InterfaceMethod) NULL,102, -1, -1, 0, 1, 1, 1, 0, "c - - 0 - W", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNbMUp",738,(G__InterfaceMethod) NULL,102, -1, -1, 0, 1, 1, 1, 0, "c - - 0 - W", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNbMUm",735,(G__InterfaceMethod) NULL,102, -1, -1, 0, 1, 1, 1, 0, "c - - 0 - W", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNbHad",733,(G__InterfaceMethod) NULL,102, -1, -1, 0, 1, 1, 1, 0, "c - - 0 - W", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNbPart",871,(G__InterfaceMethod) NULL,102, -1, -1, 0, 1, 1, 1, 0, "c - - 0 - W", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HeaderCorsika_ROOT",1720,G__ShowerROOTDict_787_0_19, 105, G__get_linked_tagnum(&G__ShowerROOTDictLN_HeaderCorsika_ROOT), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ShowerROOTDict_787_0_20, 85, G__get_linked_tagnum(&G__ShowerROOTDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HeaderCorsika_ROOT::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowerROOTDict_787_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HeaderCorsika_ROOT::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowerROOTDict_787_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HeaderCorsika_ROOT::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowerROOTDict_787_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HeaderCorsika_ROOT::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ShowerROOTDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowerROOTDict_787_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowerROOTDict_787_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HeaderCorsika_ROOT::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowerROOTDict_787_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HeaderCorsika_ROOT::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowerROOTDict_787_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HeaderCorsika_ROOT::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowerROOTDict_787_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HeaderCorsika_ROOT::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HeaderCorsika_ROOT", 1720, G__ShowerROOTDict_787_0_32, (int) ('i'), G__get_linked_tagnum(&G__ShowerROOTDictLN_HeaderCorsika_ROOT), -1, 0, 1, 1, 1, 0, "u 'HeaderCorsika_ROOT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HeaderCorsika_ROOT", 1846, G__ShowerROOTDict_787_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowerROOTDict_787_0_34, (int) ('u'), G__get_linked_tagnum(&G__ShowerROOTDictLN_HeaderCorsika_ROOT), -1, 1, 1, 1, 1, 0, "u 'HeaderCorsika_ROOT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncShowerGrnd_ROOT(void) {
   /* ShowerGrnd_ROOT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowerROOTDictLN_ShowerGrnd_ROOT));
   G__memfunc_setup("ShowerGrnd_ROOT",1446,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__ShowerROOTDictLN_ShowerGrnd_ROOT), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("QuickLook",914,G__ShowerROOTDict_788_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPart",695,G__ShowerROOTDict_788_0_3, 85, G__get_linked_tagnum(&G__ShowerROOTDictLN_PartGrnd_ROOT), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntries",1018,G__ShowerROOTDict_788_0_4, 100, -1, G__defined_typename("Stat_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowerGrnd_ROOT",1446,G__ShowerROOTDict_788_0_5, 105, G__get_linked_tagnum(&G__ShowerROOTDictLN_ShowerGrnd_ROOT), -1, 0, 1, 1, 1, 0, "U 'TFile' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ShowerROOTDict_788_0_6, 85, G__get_linked_tagnum(&G__ShowerROOTDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ShowerGrnd_ROOT::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowerROOTDict_788_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ShowerGrnd_ROOT::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowerROOTDict_788_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ShowerGrnd_ROOT::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowerROOTDict_788_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ShowerGrnd_ROOT::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ShowerROOTDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowerROOTDict_788_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowerROOTDict_788_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ShowerGrnd_ROOT::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowerROOTDict_788_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ShowerGrnd_ROOT::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowerROOTDict_788_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ShowerGrnd_ROOT::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowerROOTDict_788_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ShowerGrnd_ROOT::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ShowerGrnd_ROOT", 1446, G__ShowerROOTDict_788_0_18, (int) ('i'), G__get_linked_tagnum(&G__ShowerROOTDictLN_ShowerGrnd_ROOT), -1, 0, 1, 1, 1, 0, "u 'ShowerGrnd_ROOT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ShowerGrnd_ROOT", 1572, G__ShowerROOTDict_788_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowerROOTDict_788_0_20, (int) ('u'), G__get_linked_tagnum(&G__ShowerROOTDictLN_ShowerGrnd_ROOT), -1, 1, 1, 1, 1, 0, "u 'ShowerGrnd_ROOT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncShowerProf_ROOT(void) {
   /* ShowerProf_ROOT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowerROOTDictLN_ShowerProf_ROOT));
   G__memfunc_setup("ShowerProf_ROOT",1458,G__ShowerROOTDict_789_0_1, 105, G__get_linked_tagnum(&G__ShowerROOTDictLN_ShowerProf_ROOT), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChi0",624,G__ShowerROOTDict_789_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChimax",902,G__ShowerROOTDict_789_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNShwPts",995,G__ShowerROOTDict_789_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetShwPts",917,G__ShowerROOTDict_789_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TVectorT<float>' 'TVector' 0 - sp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLogPts",901,G__ShowerROOTDict_789_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TVectorT<float>' 'TVector' 0 - lp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLogEPts",970,G__ShowerROOTDict_789_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TVectorT<float>' 'TVector' 0 - sp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChi0",612,G__ShowerROOTDict_789_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChimax",890,G__ShowerROOTDict_789_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNShwPts",983,G__ShowerROOTDict_789_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetShwPts",905,G__ShowerROOTDict_789_0_11, 85, G__get_linked_tagnum(&G__ShowerROOTDictLN_TVectorTlEfloatgR), G__defined_typename("TVector"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLogPts",889,G__ShowerROOTDict_789_0_12, 85, G__get_linked_tagnum(&G__ShowerROOTDictLN_TVectorTlEfloatgR), G__defined_typename("TVector"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLogEPts",958,G__ShowerROOTDict_789_0_13, 85, G__get_linked_tagnum(&G__ShowerROOTDictLN_TVectorTlEfloatgR), G__defined_typename("TVector"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ShowerROOTDict_789_0_14, 85, G__get_linked_tagnum(&G__ShowerROOTDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ShowerProf_ROOT::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowerROOTDict_789_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ShowerProf_ROOT::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowerROOTDict_789_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ShowerProf_ROOT::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowerROOTDict_789_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ShowerProf_ROOT::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ShowerROOTDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowerROOTDict_789_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowerROOTDict_789_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ShowerProf_ROOT::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowerROOTDict_789_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ShowerProf_ROOT::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowerROOTDict_789_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ShowerProf_ROOT::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowerROOTDict_789_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ShowerProf_ROOT::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ShowerProf_ROOT", 1458, G__ShowerROOTDict_789_0_26, (int) ('i'), G__get_linked_tagnum(&G__ShowerROOTDictLN_ShowerProf_ROOT), -1, 0, 1, 1, 1, 0, "u 'ShowerProf_ROOT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ShowerProf_ROOT", 1584, G__ShowerROOTDict_789_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowerROOTDict_789_0_28, (int) ('u'), G__get_linked_tagnum(&G__ShowerROOTDictLN_ShowerProf_ROOT), -1, 1, 1, 1, 1, 0, "u 'ShowerProf_ROOT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncShower_ROOT(void) {
   /* Shower_ROOT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ShowerROOTDictLN_Shower_ROOT));
   G__memfunc_setup("showerGrnd",1059,G__ShowerROOTDict_790_0_1, 85, G__get_linked_tagnum(&G__ShowerROOTDictLN_ShowerGrnd_ROOT), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("showerProf",1071,G__ShowerROOTDict_790_0_2, 85, G__get_linked_tagnum(&G__ShowerROOTDictLN_ShowerProf_ROOT), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("showerProps",1196,G__ShowerROOTDict_790_0_3, 85, G__get_linked_tagnum(&G__ShowerROOTDictLN_ShowerProperties), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setshowerProps",1528,G__ShowerROOTDict_790_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'ShowerProperties' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("QuickLook",914,G__ShowerROOTDict_790_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHeader",873,G__ShowerROOTDict_790_0_6, 85, G__get_linked_tagnum(&G__ShowerROOTDictLN_Header_ROOT), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Shower_ROOT",1051,G__ShowerROOTDict_790_0_7, 105, G__get_linked_tagnum(&G__ShowerROOTDictLN_Shower_ROOT), -1, 0, 1, 1, 1, 0, "C - - 0 - ShowerFullName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Shower_ROOT",1051,G__ShowerROOTDict_790_0_8, 105, G__get_linked_tagnum(&G__ShowerROOTDictLN_Shower_ROOT), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ShowerROOTDict_790_0_9, 85, G__get_linked_tagnum(&G__ShowerROOTDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Shower_ROOT::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ShowerROOTDict_790_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Shower_ROOT::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ShowerROOTDict_790_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Shower_ROOT::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ShowerROOTDict_790_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Shower_ROOT::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ShowerROOTDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ShowerROOTDict_790_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ShowerROOTDict_790_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Shower_ROOT::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ShowerROOTDict_790_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Shower_ROOT::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ShowerROOTDict_790_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Shower_ROOT::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ShowerROOTDict_790_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Shower_ROOT::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Shower_ROOT", 1051, G__ShowerROOTDict_790_0_21, (int) ('i'), G__get_linked_tagnum(&G__ShowerROOTDictLN_Shower_ROOT), -1, 0, 1, 1, 1, 0, "u 'Shower_ROOT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Shower_ROOT", 1177, G__ShowerROOTDict_790_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ShowerROOTDict_790_0_23, (int) ('u'), G__get_linked_tagnum(&G__ShowerROOTDictLN_Shower_ROOT), -1, 1, 1, 1, 1, 0, "u 'Shower_ROOT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncShowerROOTDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {
}

static void G__cpp_setup_global8() {
}

static void G__cpp_setup_global9() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalShowerROOTDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
  G__cpp_setup_global8();
  G__cpp_setup_global9();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcShowerROOTDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__ShowerROOTDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_ProgName = { "ProgName" , 101 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_Header_ROOT = { "Header_ROOT" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_ShowerProperties = { "ShowerProperties" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_PartGrnd_ROOT = { "PartGrnd_ROOT" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_HeaderCorsika_ROOT = { "HeaderCorsika_ROOT" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_ShowerGrnd_ROOT = { "ShowerGrnd_ROOT" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_ShowerProf_ROOT = { "ShowerProf_ROOT" , 99 , -1 };
G__linked_taginfo G__ShowerROOTDictLN_Shower_ROOT = { "Shower_ROOT" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableShowerROOTDict() {
  G__ShowerROOTDictLN_TClass.tagnum = -1 ;
  G__ShowerROOTDictLN_TBuffer.tagnum = -1 ;
  G__ShowerROOTDictLN_TMemberInspector.tagnum = -1 ;
  G__ShowerROOTDictLN_TObject.tagnum = -1 ;
  G__ShowerROOTDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__ShowerROOTDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__ShowerROOTDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__ShowerROOTDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ShowerROOTDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__ShowerROOTDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ShowerROOTDictLN_ProgName.tagnum = -1 ;
  G__ShowerROOTDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__ShowerROOTDictLN_TFile.tagnum = -1 ;
  G__ShowerROOTDictLN_TTree.tagnum = -1 ;
  G__ShowerROOTDictLN_TBranch.tagnum = -1 ;
  G__ShowerROOTDictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__ShowerROOTDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__ShowerROOTDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ShowerROOTDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__ShowerROOTDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__ShowerROOTDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__ShowerROOTDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__ShowerROOTDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__ShowerROOTDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__ShowerROOTDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__ShowerROOTDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__ShowerROOTDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__ShowerROOTDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__ShowerROOTDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__ShowerROOTDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__ShowerROOTDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__ShowerROOTDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__ShowerROOTDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__ShowerROOTDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__ShowerROOTDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__ShowerROOTDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__ShowerROOTDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__ShowerROOTDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__ShowerROOTDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__ShowerROOTDictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__ShowerROOTDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ShowerROOTDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__ShowerROOTDictLN_Header_ROOT.tagnum = -1 ;
  G__ShowerROOTDictLN_ShowerProperties.tagnum = -1 ;
  G__ShowerROOTDictLN_PartGrnd_ROOT.tagnum = -1 ;
  G__ShowerROOTDictLN_HeaderCorsika_ROOT.tagnum = -1 ;
  G__ShowerROOTDictLN_ShowerGrnd_ROOT.tagnum = -1 ;
  G__ShowerROOTDictLN_ShowerProf_ROOT.tagnum = -1 ;
  G__ShowerROOTDictLN_Shower_ROOT.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableShowerROOTDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_ProgName);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_TBranch);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_Header_ROOT),sizeof(Header_ROOT),-1,29968,(char*)NULL,G__setup_memvarHeader_ROOT,G__setup_memfuncHeader_ROOT);
   G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_ShowerProperties);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_PartGrnd_ROOT),sizeof(PartGrnd_ROOT),-1,28672,(char*)NULL,G__setup_memvarPartGrnd_ROOT,G__setup_memfuncPartGrnd_ROOT);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_HeaderCorsika_ROOT),sizeof(HeaderCorsika_ROOT),-1,62720,(char*)NULL,G__setup_memvarHeaderCorsika_ROOT,G__setup_memfuncHeaderCorsika_ROOT);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_ShowerGrnd_ROOT),sizeof(ShowerGrnd_ROOT),-1,62720,(char*)NULL,G__setup_memvarShowerGrnd_ROOT,G__setup_memfuncShowerGrnd_ROOT);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_ShowerProf_ROOT),sizeof(ShowerProf_ROOT),-1,95488,"A shower information",G__setup_memvarShowerProf_ROOT,G__setup_memfuncShowerProf_ROOT);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ShowerROOTDictLN_Shower_ROOT),sizeof(Shower_ROOT),-1,62720,(char*)NULL,G__setup_memvarShower_ROOT,G__setup_memfuncShower_ROOT);
}
extern "C" void G__cpp_setupShowerROOTDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupShowerROOTDict()");
  G__set_cpp_environmentShowerROOTDict();
  G__cpp_setup_tagtableShowerROOTDict();

  G__cpp_setup_inheritanceShowerROOTDict();

  G__cpp_setup_typetableShowerROOTDict();

  G__cpp_setup_memvarShowerROOTDict();

  G__cpp_setup_memfuncShowerROOTDict();
  G__cpp_setup_globalShowerROOTDict();
  G__cpp_setup_funcShowerROOTDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncShowerROOTDict();
  return;
}
class G__cpp_setup_initShowerROOTDict {
  public:
    G__cpp_setup_initShowerROOTDict() { G__add_setup_func("ShowerROOTDict",(G__incsetup)(&G__cpp_setupShowerROOTDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initShowerROOTDict() { G__remove_setup_func("ShowerROOTDict"); }
};
G__cpp_setup_initShowerROOTDict G__cpp_setup_initializerShowerROOTDict;

